{
    "result": {
        "FAIL": 12,
        "INFO": 8,
        "PASS": 140,
        "SKIP": 65,
        "WARN": 16
    },
    "sections": [
        {
            "checks": [
                {
                    "description": "Ensure that all variable font files have the same set of axes and axis ranges.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/consistent_axes>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: VFs",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to facilitate the construction of intuitive and friendly user\n        interfaces, all variable font files in a given family should have the same set\n        of variation axes. Also, each axis must have a consistent setting of min/max\n        value ranges accross all the files.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All tabular figures must have the same width across the RIBBI-family.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/tnum_horizontal_metrics>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Tabular figures need to have the same metrics in all styles in order to allow\n        tables to be set with proper typographic control, but to maintain the placement\n        of decimals and numeric columns between rows.\n\n        Here's a good explanation of this:\n        https://www.typography.com/techniques/fonts-for-financials/#tabular-figs\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does font file include unacceptable control character glyphs?",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/control_chars>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Unacceptable control characters were not identified.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Use of some unacceptable control characters in the U+0000 - U+001F range can\n        lead to rendering issues on some platforms.\n\n        Acceptable control characters are defined as .null (U+0000) and\n        CR (U+000D) for this test.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure Italic styles have Roman counterparts.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/italics_have_roman_counterparts>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        For each font family on Google Fonts, every Italic style must have\n        a Roman sibling.\n\n        This kind of problem was first observed at [1] where the Bold style was\n        missing but BoldItalic was included.\n\n        [1] https://github.com/google/fonts/pull/1482\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check axis ordering on the STAT table.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT/axis_order>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "This font does not have a STAT table: /Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf [code: missing-STAT]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "From a total of 1 font files, 1 of them (100.00%) lack a STAT table.\n\n\tAnd these are the most common STAT axis orderings:\n\t [code: summary]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is (for now) a merely informative check to detect what's the axis ordering\n        declared on the STAT table of fonts in the Google Fonts collection.\n\n        We may later update this to enforce some unified axis ordering scheme,\n        yet to be determined.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Check README.md has a sample image.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/sample_image>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: readme_contents, readme_directory",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to showcase what a font family looks like, the project's README.md\n        file should ideally include a sample image and highlight it in the upper\n        portion of the document, no more than 10 lines away from the top of the file.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking file is named canonically.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/canonical_filename>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font filename is correct, \"Uchen-Regular.ttf\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's filename must be composed as \"<familyname>-<stylename>.ttf\":\n\n        - Nunito-Regular.ttf\n\n        - Oswald-BoldItalic.ttf\n\n\n        Variable fonts must list the axis tags in alphabetical order in\n        square brackets and separated by commas:\n\n        - Roboto[wdth,wght].ttf\n\n        - Familyname-Italic[wght].ttf\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/broken_links>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following links are broken in the DESCRIPTION file:\n\thttp://www.dzongkha.gov.bt [code: broken-links]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website. For that reason, all hyperlinks\n        in it must be properly working.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "URLs on DESCRIPTION file must not display http(s) prefix.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/urls>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website.\n\n        Google Fonts has a content formatting policy for that snippet that expects the\n        text content of links not to include the http:// or https:// prefixes.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain a upstream Git repo URL?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/git_url>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please host your font project on a public Git repo (such as GitHub or GitLab) and place a link in the DESCRIPTION.en_us.html file. [code: lacks-git-url]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The contents of the DESCRIPTION.en-us.html file are displayed on the\n        Google Fonts website in the about section of each font family specimen page.\n\n        Since all of the Google Fonts collection is composed of libre-licensed fonts,\n        this check enforces a policy that there must be a hypertext link in that page\n        directing users to the repository where the font project files are\n        made available.\n\n        Such hosting is typically done on sites like Github, Gitlab, GNU Savannah or\n        any other git-based version control service.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Is this a proper HTML snippet?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/valid_html>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/uchen/DESCRIPTION.en_us.html is a propper HTML file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people write malformed HTML markup. This check should ensure the\n        file is good.\n\n        Additionally, when packaging families for being pushed to the `google/fonts`\n        git repo, if there is no DESCRIPTION.en_us.html file, some older versions of\n        the `add_font.py` tool insert a placeholder description file which contains\n        invalid html. This file needs to either be replaced with an existing\n        description file or edited by hand.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html must have more than 200 bytes.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/min_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "DESCRIPTION.en_us.html is larger than 200 bytes.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html should end in a linebreak.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/eof_linebreak>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": ":-)",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some older text-handling tools sometimes misbehave if the last line of data\n        in a text file is not terminated with a newline character (also known as '\\n').\n\n        We know that this is a very small detail, but for the sake of keeping all\n        DESCRIPTION.en_us.html files uniformly formatted throughout the GFonts\n        collection, we chose to adopt the practice of placing this final linebreak\n        character on them.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check METADATA.pb parse correctly.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/parses>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb parsed successfuly.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to ensure that the METADATA.pb file is not\n        malformed.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not be 'unknown'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unknown_designer>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font designer field is not 'unknown'.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not contain 'Multiple designers'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/multiple_designers>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        For a while the string \"Multiple designers\" was used as a placeholder on\n        METADATA.pb files. We should replace all those instances with actual designer\n        names so that proper credits are displayed on the Google Fonts family\n        specimen pages.\n\n        If there's more than a single designer, the designer names must be\n        separated by commas.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Multiple values in font designer field in METADATA.pb must be separated by commas.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We must use commas instead of forward slashes because the server-side code\n        at the fonts.google.com directory will segment the string on the commas into\n        a list of names and display the first item in the list as the\n        \"principal designer\" while the remaining names are identified as \"contributors\".\n\n        See eg https://fonts.google.com/specimen/Rubik\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does METADATA.pb copyright field contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/broken_links>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the METADATA.pb file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb lists all font binaries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/undeclared_fonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The set of font binaries available, except the ones on a \"static\" subdir,\n        must match exactly those declared on the METADATA.pb file.\n\n        Also, to avoid confusion, we expect that font files (other than statics)\n        are not placed on subdirectories.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb category field is valid.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are only five acceptable values for the category field in a METADATA.pb\n        file:\n\n        - MONOSPACE\n\n        - SANS_SERIF\n\n        - SERIF\n\n        - DISPLAY\n\n        - HANDWRITING\n\n        This check is meant to avoid typos in this field.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 fsType does not impose restrictions.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fstype>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsType is properly set to zero.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The fsType in the OS/2 table is a legacy DRM-related field. Fonts in the\n        Google Fonts collection must have it set to zero (also known as\n        \"Installable Embedding\"). This setting indicates that the fonts can be\n        embedded in documents and permanently installed by applications on\n        remote systems.\n\n        More detailed info is available at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/os2#fstype\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vendor_id>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 VendorID value 'FYNN' is not yet recognized. If you registered it recently, then it's safe to ignore this warning message. Otherwise, you should set it to your own unique 4 character code, and register it with Microsoft at https://www.microsoft.com/typography/links/vendorlist.aspx\n [code: unknown]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft keeps a list of font vendors and their respective contact info. This\n        list is updated regularly and is indexed by a 4-char \"Vendor ID\" which is\n        stored in the achVendID field of the OS/2 table.\n\n        Registering your ID is not mandatory, but it is a good practice since some\n        applications may display the type designer / type foundry contact info on some\n        dialog and also because that info will be visible on Microsoft's website:\n\n        https://docs.microsoft.com/en-us/typography/vendors/\n\n        This check verifies whether or not a given font's vendor ID is registered in\n        that list or if it has some of the default values used by the most common\n        font editors.\n\n        Each new FontBakery release includes a cached copy of that list of vendor IDs.\n        If you registered recently, you're safe to ignore warnings emitted by this\n        check, since your ID will soon be included in one of our upcoming releases.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check Google Fonts glyph coverage.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyph_coverage>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Missing required codepoints:\n\n\t- 0x030B (COMBINING DOUBLE ACUTE ACCENT)\n\n\n\t- 0x0102 (LATIN CAPITAL LETTER A WITH BREVE)\n\n\n\t- 0x0104 (LATIN CAPITAL LETTER A WITH OGONEK)\n\n\n\t- 0x0106 (LATIN CAPITAL LETTER C WITH ACUTE)\n\n\n\t- 0x010C (LATIN CAPITAL LETTER C WITH CARON)\n\n\n\t- 0x010A (LATIN CAPITAL LETTER C WITH DOT ABOVE)\n\n\n\t- 0x010E (LATIN CAPITAL LETTER D WITH CARON)\n\n\n\t- 0x0110 (LATIN CAPITAL LETTER D WITH STROKE)\n\n\n\t- 0x011A (LATIN CAPITAL LETTER E WITH CARON)\n\n\n\t- 0x0116 (LATIN CAPITAL LETTER E WITH DOT ABOVE)\n\n\n\t- 0x0118 (LATIN CAPITAL LETTER E WITH OGONEK)\n\n\n\t- 0x011E (LATIN CAPITAL LETTER G WITH BREVE)\n\n\n\t- 0x0122 (LATIN CAPITAL LETTER G WITH CEDILLA)\n\n\n\t- 0x0126 (LATIN CAPITAL LETTER H WITH STROKE)\n\n\n\t- 0x0132 (LATIN CAPITAL LIGATURE IJ)\n\n\n\t- 0x0130 (LATIN CAPITAL LETTER I WITH DOT ABOVE)\n\n\n\t- 0x012E (LATIN CAPITAL LETTER I WITH OGONEK)\n\n\n\t- 0x0136 (LATIN CAPITAL LETTER K WITH CEDILLA)\n\n\n\t- 0x0139 (LATIN CAPITAL LETTER L WITH ACUTE)\n\n\n\t- 0x013D (LATIN CAPITAL LETTER L WITH CARON)\n\n\n\t- 0x013B (LATIN CAPITAL LETTER L WITH CEDILLA)\n\n\n\t- 0x0141 (LATIN CAPITAL LETTER L WITH STROKE)\n\n\n\t- 0x0143 (LATIN CAPITAL LETTER N WITH ACUTE)\n\n\n\t- 0x0147 (LATIN CAPITAL LETTER N WITH CARON)\n\n\n\t- 0x0145 (LATIN CAPITAL LETTER N WITH CEDILLA)\n\n\n\t- 0x014A (LATIN CAPITAL LETTER ENG)\n\n\n\t- 0x0150 (LATIN CAPITAL LETTER O WITH DOUBLE ACUTE)\n\n\n\t- 0x0154 (LATIN CAPITAL LETTER R WITH ACUTE)\n\n\n\t- 0x0158 (LATIN CAPITAL LETTER R WITH CARON)\n\n\n\t- 0x0156 (LATIN CAPITAL LETTER R WITH CEDILLA)\n\n\n\t- 0x015E (LATIN CAPITAL LETTER S WITH CEDILLA)\n\n\n\t- 0x0218 (LATIN CAPITAL LETTER S WITH COMMA BELOW)\n\n\n\t- 0x1E9E (LATIN CAPITAL LETTER SHARP S)\n\n\n\t- 0x0164 (LATIN CAPITAL LETTER T WITH CARON)\n\n\n\t- 0x021A (LATIN CAPITAL LETTER T WITH COMMA BELOW)\n\n\n\t- 0x016C (LATIN CAPITAL LETTER U WITH BREVE)\n\n\n\t- 0x0170 (LATIN CAPITAL LETTER U WITH DOUBLE ACUTE)\n\n\n\t- 0x0172 (LATIN CAPITAL LETTER U WITH OGONEK)\n\n\n\t- 0x016E (LATIN CAPITAL LETTER U WITH RING ABOVE)\n\n\n\t- 0x1E82 (LATIN CAPITAL LETTER W WITH ACUTE)\n\n\n\t- 0x0174 (LATIN CAPITAL LETTER W WITH CIRCUMFLEX)\n\n\n\t- 0x1E84 (LATIN CAPITAL LETTER W WITH DIAERESIS)\n\n\n\t- 0x1E80 (LATIN CAPITAL LETTER W WITH GRAVE)\n\n\n\t- 0x0176 (LATIN CAPITAL LETTER Y WITH CIRCUMFLEX)\n\n\n\t- 0x1EF2 (LATIN CAPITAL LETTER Y WITH GRAVE)\n\n\n\t- 0x0179 (LATIN CAPITAL LETTER Z WITH ACUTE)\n\n\n\t- 0x017B (LATIN CAPITAL LETTER Z WITH DOT ABOVE)\n\n\n\t- 0x0103 (LATIN SMALL LETTER A WITH BREVE)\n\n\n\t- 0x0105 (LATIN SMALL LETTER A WITH OGONEK)\n\n\n\t- 0x0107 (LATIN SMALL LETTER C WITH ACUTE)\n\n\n\t- 0x010D (LATIN SMALL LETTER C WITH CARON)\n\n\n\t- 0x010B (LATIN SMALL LETTER C WITH DOT ABOVE)\n\n\n\t- 0x010F (LATIN SMALL LETTER D WITH CARON)\n\n\n\t- 0x0111 (LATIN SMALL LETTER D WITH STROKE)\n\n\n\t- 0x011B (LATIN SMALL LETTER E WITH CARON)\n\n\n\t- 0x0117 (LATIN SMALL LETTER E WITH DOT ABOVE)\n\n\n\t- 0x0119 (LATIN SMALL LETTER E WITH OGONEK)\n\n\n\t- 0x011F (LATIN SMALL LETTER G WITH BREVE)\n\n\n\t- 0x0123 (LATIN SMALL LETTER G WITH CEDILLA)\n\n\n\t- 0x0127 (LATIN SMALL LETTER H WITH STROKE)\n\n\n\t- 0x0133 (LATIN SMALL LIGATURE IJ)\n\n\n\t- 0x012F (LATIN SMALL LETTER I WITH OGONEK)\n\n\n\t- 0x0137 (LATIN SMALL LETTER K WITH CEDILLA)\n\n\n\t- 0x013A (LATIN SMALL LETTER L WITH ACUTE)\n\n\n\t- 0x013E (LATIN SMALL LETTER L WITH CARON)\n\n\n\t- 0x013C (LATIN SMALL LETTER L WITH CEDILLA)\n\n\n\t- 0x0142 (LATIN SMALL LETTER L WITH STROKE)\n\n\n\t- 0x0144 (LATIN SMALL LETTER N WITH ACUTE)\n\n\n\t- 0x0148 (LATIN SMALL LETTER N WITH CARON)\n\n\n\t- 0x0146 (LATIN SMALL LETTER N WITH CEDILLA)\n\n\n\t- 0x0151 (LATIN SMALL LETTER O WITH DOUBLE ACUTE)\n\n\n\t- 0x0155 (LATIN SMALL LETTER R WITH ACUTE)\n\n\n\t- 0x0159 (LATIN SMALL LETTER R WITH CARON)\n\n\n\t- 0x0157 (LATIN SMALL LETTER R WITH CEDILLA)\n\n\n\t- 0x015F (LATIN SMALL LETTER S WITH CEDILLA)\n\n\n\t- 0x0219 (LATIN SMALL LETTER S WITH COMMA BELOW)\n\n\n\t- 0x0165 (LATIN SMALL LETTER T WITH CARON)\n\n\n\t- 0x021B (LATIN SMALL LETTER T WITH COMMA BELOW)\n\n\n\t- 0x016D (LATIN SMALL LETTER U WITH BREVE)\n\n\n\t- 0x0171 (LATIN SMALL LETTER U WITH DOUBLE ACUTE)\n\n\n\t- 0x0173 (LATIN SMALL LETTER U WITH OGONEK)\n\n\n\t- 0x016F (LATIN SMALL LETTER U WITH RING ABOVE)\n\n\n\t- 0x1E83 (LATIN SMALL LETTER W WITH ACUTE)\n\n\n\t- 0x0175 (LATIN SMALL LETTER W WITH CIRCUMFLEX)\n\n\n\t- 0x1E85 (LATIN SMALL LETTER W WITH DIAERESIS)\n\n\n\t- 0x1E81 (LATIN SMALL LETTER W WITH GRAVE)\n\n\n\t- 0x0177 (LATIN SMALL LETTER Y WITH CIRCUMFLEX)\n\n\n\t- 0x1EF3 (LATIN SMALL LETTER Y WITH GRAVE)\n\n\n\t- 0x030C (COMBINING CARON)\n\n\n\t- 0x0306 (COMBINING BREVE)\n\n\n\t- 0x0312 (COMBINING TURNED COMMA ABOVE)\n\n\n\t- 0x0326 (COMBINING COMMA BELOW)\n\n\n\t- 0x0327 (COMBINING CEDILLA)\n\n\n\t- 0x0328 (COMBINING OGONEK)\n [code: missing-codepoints]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects that fonts in its collection support at least the minimal\n        set of characters defined in the `GF-latin-core` glyph-set.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Check for METADATA subsets with zero support.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unsupported_subsets>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that the subsets specified on a METADATA.pb file are\n        actually supported (even if only partially) by the font files.\n\n        Subsets for which none of the codepoints are supported will cause the\n        check to FAIL.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check for codepoints not covered by METADATA subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unreachable_subsetting>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following codepoints supported by the font are not covered by\n    any subsets defined in the font's metadata file, and will never\n    be served. You can solve this by either manually adding additional\n    subset declarations to METADATA.pb, or by editing the glyphset\n    definitions.\n\n * U+0100 LATIN CAPITAL LETTER A WITH MACRON: try adding latin-ext\n * U+0101 LATIN SMALL LETTER A WITH MACRON: try adding latin-ext\n * U+0112 LATIN CAPITAL LETTER E WITH MACRON: try adding latin-ext\n * U+0113 LATIN SMALL LETTER E WITH MACRON: try adding latin-ext\n * U+0120 LATIN CAPITAL LETTER G WITH DOT ABOVE: try adding latin-ext\n * U+0121 LATIN SMALL LETTER G WITH DOT ABOVE: try adding latin-ext\n * U+012A LATIN CAPITAL LETTER I WITH MACRON: try adding latin-ext\n * U+012B LATIN SMALL LETTER I WITH MACRON: try adding latin-ext\n * U+014B LATIN SMALL LETTER ENG: try adding latin-ext\n * U+014C LATIN CAPITAL LETTER O WITH MACRON: try adding latin-ext\n * U+014D LATIN SMALL LETTER O WITH MACRON: try adding latin-ext\n * U+015A LATIN CAPITAL LETTER S WITH ACUTE: try adding latin-ext\n * U+015B LATIN SMALL LETTER S WITH ACUTE: try adding latin-ext\n * U+0160 LATIN CAPITAL LETTER S WITH CARON: try adding latin-ext\n * U+0161 LATIN SMALL LETTER S WITH CARON: try adding latin-ext\n * U+016A LATIN CAPITAL LETTER U WITH MACRON: try adding latin-ext\n * U+016B LATIN SMALL LETTER U WITH MACRON: try adding latin-ext\n * U+0178 LATIN CAPITAL LETTER Y WITH DIAERESIS: try adding latin-ext\n * U+017A LATIN SMALL LETTER Z WITH ACUTE: try adding latin-ext\n * U+017C LATIN SMALL LETTER Z WITH DOT ABOVE: try adding latin-ext\n * U+017D LATIN CAPITAL LETTER Z WITH CARON: try adding latin-ext\n * U+017E LATIN SMALL LETTER Z WITH CARON: try adding latin-ext\n * U+0192 LATIN SMALL LETTER F WITH HOOK: try adding latin-ext\n * U+0232 LATIN CAPITAL LETTER Y WITH MACRON: try adding latin-ext\n * U+0233 LATIN SMALL LETTER Y WITH MACRON: try adding latin-ext\n * U+0237 LATIN SMALL LETTER DOTLESS J: try adding latin-ext\n * U+0250 LATIN SMALL LETTER TURNED A: not included in any glyphset definition\n * U+0251 LATIN SMALL LETTER ALPHA: not included in any glyphset definition\n * U+0254 LATIN SMALL LETTER OPEN O: not included in any glyphset definition\n * U+0256 LATIN SMALL LETTER D WITH TAIL: not included in any glyphset definition\n * U+025B LATIN SMALL LETTER OPEN E: not included in any glyphset definition\n * U+025C LATIN SMALL LETTER REVERSED OPEN E: not included in any glyphset definition\n * U+025F LATIN SMALL LETTER DOTLESS J WITH STROKE: not included in any glyphset definition\n * U+026B LATIN SMALL LETTER L WITH MIDDLE TILDE: not included in any glyphset definition\n * U+026F LATIN SMALL LETTER TURNED M: not included in any glyphset definition\n * U+0272 LATIN SMALL LETTER N WITH LEFT HOOK: not included in any glyphset definition\n * U+0273 LATIN SMALL LETTER N WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0275 LATIN SMALL LETTER BARRED O: not included in any glyphset definition\n * U+0279 LATIN SMALL LETTER TURNED R: not included in any glyphset definition\n * U+0287 LATIN SMALL LETTER TURNED T: not included in any glyphset definition\n * U+0288 LATIN SMALL LETTER T WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0289 LATIN SMALL LETTER U BAR: not included in any glyphset definition\n * U+028C LATIN SMALL LETTER TURNED V: not included in any glyphset definition\n * U+028D LATIN SMALL LETTER TURNED W: not included in any glyphset definition\n * U+0294 LATIN LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+0295 LATIN LETTER PHARYNGEAL VOICED FRICATIVE: not included in any glyphset definition\n * U+0296 LATIN LETTER INVERTED GLOTTAL STOP: not included in any glyphset definition\n * U+029D LATIN SMALL LETTER J WITH CROSSED-TAIL: not included in any glyphset definition\n * U+02C7 CARON: try adding one of: canadian-aboriginal, tifinagh\n * U+02C9 MODIFIER LETTER MACRON: not included in any glyphset definition\n * U+02CA MODIFIER LETTER ACUTE ACCENT: not included in any glyphset definition\n * U+02D8 BREVE: try adding canadian-aboriginal\n * U+02D9 DOT ABOVE: try adding canadian-aboriginal\n * U+02DB OGONEK: try adding canadian-aboriginal\n * U+02DD DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+0300 COMBINING GRAVE ACCENT: try adding one of: cherokee, coptic, tai-le\n * U+0301 COMBINING ACUTE ACCENT: try adding one of: cherokee, coptic, tai-le, tifinagh\n * U+0302 COMBINING CIRCUMFLEX ACCENT: try adding one of: cherokee, coptic, tifinagh\n * U+0303 COMBINING TILDE: not included in any glyphset definition\n * U+0304 COMBINING MACRON: try adding one of: cherokee, coptic, gothic, tifinagh\n * U+0307 COMBINING DOT ABOVE: try adding one of: canadian-aboriginal, coptic, tifinagh, tai-le, malayalam\n * U+0308 COMBINING DIAERESIS: try adding one of: gothic, coptic, tai-le\n * U+030A COMBINING RING ABOVE: not included in any glyphset definition\n * U+0310 COMBINING CANDRABINDU: not included in any glyphset definition\n * U+0320 COMBINING MINUS SIGN BELOW: not included in any glyphset definition\n * U+0323 COMBINING DOT BELOW: try adding one of: cherokee, coptic, tifinagh, malayalam\n * U+0324 COMBINING DIAERESIS BELOW: try adding cherokee\n * U+0325 COMBINING RING BELOW: not included in any glyphset definition\n * U+034F COMBINING GRAPHEME JOINER: not included in any glyphset definition\n * U+0F98 : not included in any glyphset definition\n * U+1E0C LATIN CAPITAL LETTER D WITH DOT BELOW: try adding latin-ext\n * U+1E0D LATIN SMALL LETTER D WITH DOT BELOW: try adding latin-ext\n * U+1E24 LATIN CAPITAL LETTER H WITH DOT BELOW: try adding latin-ext\n * U+1E25 LATIN SMALL LETTER H WITH DOT BELOW: try adding latin-ext\n * U+1E36 LATIN CAPITAL LETTER L WITH DOT BELOW: try adding latin-ext\n * U+1E37 LATIN SMALL LETTER L WITH DOT BELOW: try adding latin-ext\n * U+1E38 LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON: try adding latin-ext\n * U+1E39 LATIN SMALL LETTER L WITH DOT BELOW AND MACRON: try adding latin-ext\n * U+1E40 LATIN CAPITAL LETTER M WITH DOT ABOVE: try adding latin-ext\n * U+1E41 LATIN SMALL LETTER M WITH DOT ABOVE: try adding latin-ext\n * U+1E42 LATIN CAPITAL LETTER M WITH DOT BELOW: try adding latin-ext\n * U+1E43 LATIN SMALL LETTER M WITH DOT BELOW: try adding latin-ext\n * U+1E44 LATIN CAPITAL LETTER N WITH DOT ABOVE: try adding latin-ext\n * U+1E45 LATIN SMALL LETTER N WITH DOT ABOVE: try adding latin-ext\n * U+1E46 LATIN CAPITAL LETTER N WITH DOT BELOW: try adding latin-ext\n * U+1E47 LATIN SMALL LETTER N WITH DOT BELOW: try adding latin-ext\n * U+1E5A LATIN CAPITAL LETTER R WITH DOT BELOW: try adding latin-ext\n * U+1E5B LATIN SMALL LETTER R WITH DOT BELOW: try adding latin-ext\n * U+1E5C LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON: try adding latin-ext\n * U+1E5D LATIN SMALL LETTER R WITH DOT BELOW AND MACRON: try adding latin-ext\n * U+1E60 LATIN CAPITAL LETTER S WITH DOT ABOVE: try adding latin-ext\n * U+1E61 LATIN SMALL LETTER S WITH DOT ABOVE: try adding latin-ext\n * U+1E62 LATIN CAPITAL LETTER S WITH DOT BELOW: try adding latin-ext\n * U+1E63 LATIN SMALL LETTER S WITH DOT BELOW: try adding latin-ext\n * U+1E6C LATIN CAPITAL LETTER T WITH DOT BELOW: try adding latin-ext\n * U+1E6D LATIN SMALL LETTER T WITH DOT BELOW: try adding latin-ext\n * U+1E72 LATIN CAPITAL LETTER U WITH DIAERESIS BELOW: try adding latin-ext\n * U+1E73 LATIN SMALL LETTER U WITH DIAERESIS BELOW: try adding latin-ext\n * U+1E92 LATIN CAPITAL LETTER Z WITH DOT BELOW: try adding latin-ext\n * U+1E93 LATIN SMALL LETTER Z WITH DOT BELOW: try adding latin-ext\n * U+1E96 LATIN SMALL LETTER H WITH LINE BELOW: try adding latin-ext\n * U+2020 DAGGER: try adding latin-ext\n * U+2021 DOUBLE DAGGER: not included in any glyphset definition\n * U+2030 PER MILLE SIGN: not included in any glyphset definition\n * U+203B REFERENCE MARK: not included in any glyphset definition\n * U+20A8 RUPEE SIGN: try adding one of: devanagari, latin-ext\n * U+25A1 WHITE SQUARE: not included in any glyphset definition\n * U+25AA BLACK SMALL SQUARE: not included in any glyphset definition\n * U+25AB WHITE SMALL SQUARE: not included in any glyphset definition\n * U+25CA LOZENGE: not included in any glyphset definition\n * U+25CF BLACK CIRCLE: not included in any glyphset definition\n * U+25E6 WHITE BULLET: not included in any glyphset definition\n * U+2605 BLACK STAR: not included in any glyphset definition\n * U+2606 WHITE STAR: not included in any glyphset definition\n * U+262F YIN YANG: not included in any glyphset definition\n * U+2630 TRIGRAM FOR HEAVEN: not included in any glyphset definition\n * U+2631 TRIGRAM FOR LAKE: not included in any glyphset definition\n * U+2632 TRIGRAM FOR FIRE: not included in any glyphset definition\n * U+2633 TRIGRAM FOR THUNDER: not included in any glyphset definition\n * U+2634 TRIGRAM FOR WIND: not included in any glyphset definition\n * U+2635 TRIGRAM FOR WATER: not included in any glyphset definition\n * U+2636 TRIGRAM FOR MOUNTAIN: not included in any glyphset definition\n * U+2637 TRIGRAM FOR EARTH: not included in any glyphset definition\n * U+2638 WHEEL OF DHARMA: not included in any glyphset definition\n * U+2740 WHITE FLORETTE: not included in any glyphset definition\n * U+3008 LEFT ANGLE BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, tai-le, yi, chinese-simplified\n * U+3009 RIGHT ANGLE BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, tai-le, yi, chinese-simplified\n * U+300A LEFT DOUBLE ANGLE BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, tai-le, lisu, yi, mongolian, chinese-simplified\n * U+300B RIGHT DOUBLE ANGLE BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, tai-le, lisu, yi, mongolian, chinese-simplified\n * U+3010 LEFT BLACK LENTICULAR BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, yi, chinese-simplified\n * U+3011 RIGHT BLACK LENTICULAR BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, yi, chinese-simplified\n * U+3014 LEFT TORTOISE SHELL BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, yi, chinese-simplified\n * U+3015 RIGHT TORTOISE SHELL BRACKET: try adding one of: japanese, phags-pa, chinese-traditional, yi, chinese-simplified\n * U+3016 LEFT WHITE LENTICULAR BRACKET: try adding one of: yi, phags-pa, chinese-simplified\n * U+3017 RIGHT WHITE LENTICULAR BRACKET: try adding one of: yi, phags-pa, chinese-simplified\n * U+3018 LEFT WHITE TORTOISE SHELL BRACKET: try adding one of: yi, phags-pa\n * U+3019 RIGHT WHITE TORTOISE SHELL BRACKET: try adding one of: yi, phags-pa\n * U+301A LEFT WHITE SQUARE BRACKET: try adding one of: yi, phags-pa\n * U+301B RIGHT WHITE SQUARE BRACKET: try adding one of: yi, phags-pa\n * U+534D CJK UNIFIED IDEOGRAPH-534D: try adding one of: chinese-traditional, japanese, chinese-simplified\n * U+5350 CJK UNIFIED IDEOGRAPH-5350: try adding chinese-simplified\n * U+F024 : not included in any glyphset definition\n * U+F025 : not included in any glyphset definition\n * U+F027 : not included in any glyphset definition\n * U+F028 : not included in any glyphset definition\n * U+F029 : not included in any glyphset definition\n * U+F02A : not included in any glyphset definition\n * U+F02B : not included in any glyphset definition\n * U+F02C : not included in any glyphset definition\n * U+F02D : not included in any glyphset definition\n * U+F02E : not included in any glyphset definition\n * U+F03B : not included in any glyphset definition\n * U+F03C : not included in any glyphset definition\n * U+F03D : not included in any glyphset definition\n * U+F03E : not included in any glyphset definition\n * U+F03F : not included in any glyphset definition\n * U+F040 : not included in any glyphset definition\n * U+F041 : not included in any glyphset definition\n * U+F045 : not included in any glyphset definition\n * U+F048 : not included in any glyphset definition\n * U+F049 : not included in any glyphset definition\n * U+F080 : not included in any glyphset definition\n * U+F088 : not included in any glyphset definition\n * U+F089 : not included in any glyphset definition\n * U+F08A : not included in any glyphset definition\n * U+F08B : not included in any glyphset definition\n * U+F08C : not included in any glyphset definition\n * U+F08D : not included in any glyphset definition\n * U+F08E : not included in any glyphset definition\n * U+F08F : not included in any glyphset definition\n * U+F090 : not included in any glyphset definition\n * U+F091 : not included in any glyphset definition\n * U+F092 : not included in any glyphset definition\n * U+F093 : not included in any glyphset definition\n * U+F094 : not included in any glyphset definition\n * U+F095 : not included in any glyphset definition\n * U+F096 : not included in any glyphset definition\n * U+F097 : not included in any glyphset definition\n * U+F098 : not included in any glyphset definition\n * U+F09D : not included in any glyphset definition\n * U+F09E : not included in any glyphset definition\n * U+F09F : not included in any glyphset definition\n * U+F300 : not included in any glyphset definition\n * U+F301 : not included in any glyphset definition\n * U+F302 : not included in any glyphset definition\n * U+F303 : not included in any glyphset definition\n * U+F304 : not included in any glyphset definition\n * U+F305 : not included in any glyphset definition\n * U+F306 : not included in any glyphset definition\n * U+F307 : not included in any glyphset definition\n * U+F308 : not included in any glyphset definition\n * U+F309 : not included in any glyphset definition\n * U+F30A : not included in any glyphset definition\n * U+F30B : not included in any glyphset definition\n * U+F30C : not included in any glyphset definition\n * U+F30D : not included in any glyphset definition\n * U+F30E : not included in any glyphset definition\n * U+F30F : not included in any glyphset definition\n * U+F310 : not included in any glyphset definition\n * U+F311 : not included in any glyphset definition\n * U+F312 : not included in any glyphset definition\n * U+F313 : not included in any glyphset definition\n * U+F314 : not included in any glyphset definition\n * U+F315 : not included in any glyphset definition\n * U+F316 : not included in any glyphset definition\n * U+F317 : not included in any glyphset definition\n * U+F318 : not included in any glyphset definition\n * U+F319 : not included in any glyphset definition\n * U+F31A : not included in any glyphset definition\n * U+F31B : not included in any glyphset definition\n * U+F31C : not included in any glyphset definition\n * U+F31D : not included in any glyphset definition\n * U+F31E : not included in any glyphset definition\n * U+F31F : not included in any glyphset definition\n * U+F320 : not included in any glyphset definition\n * U+F321 : not included in any glyphset definition\n * U+F322 : not included in any glyphset definition\n * U+F323 : not included in any glyphset definition\n * U+F324 : not included in any glyphset definition\n * U+F325 : not included in any glyphset definition\n * U+F326 : not included in any glyphset definition\n * U+F327 : not included in any glyphset definition\n * U+F328 : not included in any glyphset definition\n * U+F329 : not included in any glyphset definition\n * U+F32A : not included in any glyphset definition\n * U+F32B : not included in any glyphset definition\n * U+F32C : not included in any glyphset definition\n * U+F32D : not included in any glyphset definition\n * U+F32E : not included in any glyphset definition\n * U+F32F : not included in any glyphset definition\n * U+F330 : not included in any glyphset definition\n * U+F331 : not included in any glyphset definition\n * U+F332 : not included in any glyphset definition\n * U+F333 : not included in any glyphset definition\n * U+F334 : not included in any glyphset definition\n * U+F335 : not included in any glyphset definition\n * U+F336 : not included in any glyphset definition\n * U+F337 : not included in any glyphset definition\n * U+F338 : not included in any glyphset definition\n * U+F339 : not included in any glyphset definition\n * U+F33A : not included in any glyphset definition\n * U+F33B : not included in any glyphset definition\n * U+F33C : not included in any glyphset definition\n * U+F33D : not included in any glyphset definition\n * U+F33E : not included in any glyphset definition\n * U+F33F : not included in any glyphset definition\n * U+F340 : not included in any glyphset definition\n * U+F341 : not included in any glyphset definition\n * U+F342 : not included in any glyphset definition\n * U+F343 : not included in any glyphset definition\n * U+F344 : not included in any glyphset definition\n * U+F345 : not included in any glyphset definition\n * U+F346 : not included in any glyphset definition\n * U+F347 : not included in any glyphset definition\n * U+F348 : not included in any glyphset definition\n * U+F349 : not included in any glyphset definition\n * U+F34A : not included in any glyphset definition\n * U+F34B : not included in any glyphset definition\n * U+F34C : not included in any glyphset definition\n * U+F34D : not included in any glyphset definition\n * U+F34E : not included in any glyphset definition\n * U+F34F : not included in any glyphset definition\n * U+F350 : not included in any glyphset definition\n * U+F351 : not included in any glyphset definition\n * U+F352 : not included in any glyphset definition\n * U+F353 : not included in any glyphset definition\n * U+F354 : not included in any glyphset definition\n * U+F355 : not included in any glyphset definition\n * U+F356 : not included in any glyphset definition\n * U+F357 : not included in any glyphset definition\n * U+F358 : not included in any glyphset definition\n * U+F359 : not included in any glyphset definition\n * U+F35A : not included in any glyphset definition\n * U+F35B : not included in any glyphset definition\n * U+F35C : not included in any glyphset definition\n * U+F35D : not included in any glyphset definition\n * U+F35E : not included in any glyphset definition\n * U+F35F : not included in any glyphset definition\n * U+F360 : not included in any glyphset definition\n * U+F361 : not included in any glyphset definition\n * U+F362 : not included in any glyphset definition\n * U+F363 : not included in any glyphset definition\n * U+F364 : not included in any glyphset definition\n * U+F365 : not included in any glyphset definition\n * U+F366 : not included in any glyphset definition\n * U+F367 : not included in any glyphset definition\n * U+F368 : not included in any glyphset definition\n * U+F369 : not included in any glyphset definition\n * U+F36A : not included in any glyphset definition\n * U+F36B : not included in any glyphset definition\n * U+F36C : not included in any glyphset definition\n * U+F36D : not included in any glyphset definition\n * U+F36E : not included in any glyphset definition\n * U+F36F : not included in any glyphset definition\n * U+F370 : not included in any glyphset definition\n * U+F371 : not included in any glyphset definition\n * U+F372 : not included in any glyphset definition\n * U+F373 : not included in any glyphset definition\n * U+F374 : not included in any glyphset definition\n * U+F375 : not included in any glyphset definition\n * U+F376 : not included in any glyphset definition\n * U+F377 : not included in any glyphset definition\n * U+F378 : not included in any glyphset definition\n * U+F379 : not included in any glyphset definition\n * U+F37A : not included in any glyphset definition\n * U+F37B : not included in any glyphset definition\n * U+F37C : not included in any glyphset definition\n * U+F37D : not included in any glyphset definition\n * U+F37E : not included in any glyphset definition\n * U+F37F : not included in any glyphset definition\n * U+F380 : not included in any glyphset definition\n * U+F381 : not included in any glyphset definition\n * U+F382 : not included in any glyphset definition\n * U+F383 : not included in any glyphset definition\n * U+F384 : not included in any glyphset definition\n * U+F385 : not included in any glyphset definition\n * U+F386 : not included in any glyphset definition\n * U+F387 : not included in any glyphset definition\n * U+F388 : not included in any glyphset definition\n * U+F389 : not included in any glyphset definition\n * U+F38A : not included in any glyphset definition\n * U+F38B : not included in any glyphset definition\n * U+F38C : not included in any glyphset definition\n * U+F38D : not included in any glyphset definition\n * U+F38E : not included in any glyphset definition\n * U+F38F : not included in any glyphset definition\n * U+F390 : not included in any glyphset definition\n * U+F391 : not included in any glyphset definition\n * U+F392 : not included in any glyphset definition\n * U+F393 : not included in any glyphset definition\n * U+F394 : not included in any glyphset definition\n * U+F395 : not included in any glyphset definition\n * U+F396 : not included in any glyphset definition\n * U+F397 : not included in any glyphset definition\n * U+F398 : not included in any glyphset definition\n * U+F399 : not included in any glyphset definition\n * U+F39A : not included in any glyphset definition\n * U+F39B : not included in any glyphset definition\n * U+F39C : not included in any glyphset definition\n * U+F39D : not included in any glyphset definition\n * U+F39E : not included in any glyphset definition\n * U+F39F : not included in any glyphset definition\n * U+F3A0 : not included in any glyphset definition\n * U+F3A1 : not included in any glyphset definition\n * U+F3A2 : not included in any glyphset definition\n * U+F3A3 : not included in any glyphset definition\n * U+F3A4 : not included in any glyphset definition\n * U+F3A5 : not included in any glyphset definition\n * U+F3A6 : not included in any glyphset definition\n * U+F3A7 : not included in any glyphset definition\n * U+F3A8 : not included in any glyphset definition\n * U+F3A9 : not included in any glyphset definition\n * U+F3AA : not included in any glyphset definition\n * U+F3AB : not included in any glyphset definition\n * U+F3AC : not included in any glyphset definition\n * U+F3AD : not included in any glyphset definition\n * U+F3AE : not included in any glyphset definition\n * U+F3AF : not included in any glyphset definition\n * U+F3B0 : not included in any glyphset definition\n * U+F3B1 : not included in any glyphset definition\n * U+F3B2 : not included in any glyphset definition\n * U+F3B3 : not included in any glyphset definition\n * U+F3B4 : not included in any glyphset definition\n * U+F3B5 : not included in any glyphset definition\n * U+F3B6 : not included in any glyphset definition\n * U+F3B7 : not included in any glyphset definition\n * U+F3B8 : not included in any glyphset definition\n * U+F3B9 : not included in any glyphset definition\n * U+F3BA : not included in any glyphset definition\n * U+F3BB : not included in any glyphset definition\n * U+F3BC : not included in any glyphset definition\n * U+F3BD : not included in any glyphset definition\n * U+F3BE : not included in any glyphset definition\n * U+F3BF : not included in any glyphset definition\n * U+F3C0 : not included in any glyphset definition\n * U+F3C1 : not included in any glyphset definition\n * U+F3C2 : not included in any glyphset definition\n * U+F3C3 : not included in any glyphset definition\n * U+F3C4 : not included in any glyphset definition\n * U+F3C5 : not included in any glyphset definition\n * U+F3C6 : not included in any glyphset definition\n * U+F3C7 : not included in any glyphset definition\n * U+F3C8 : not included in any glyphset definition\n * U+F3C9 : not included in any glyphset definition\n * U+F3CA : not included in any glyphset definition\n * U+F3CB : not included in any glyphset definition\n * U+F3CC : not included in any glyphset definition\n * U+F3CD : not included in any glyphset definition\n * U+F3CE : not included in any glyphset definition\n * U+F3CF : not included in any glyphset definition\n * U+F3D0 : not included in any glyphset definition\n * U+F3D1 : not included in any glyphset definition\n * U+F3D2 : not included in any glyphset definition\n * U+F3D3 : not included in any glyphset definition\n * U+F3D4 : not included in any glyphset definition\n * U+F3D5 : not included in any glyphset definition\n * U+F3D6 : not included in any glyphset definition\n * U+F3D7 : not included in any glyphset definition\n * U+F3D8 : not included in any glyphset definition\n * U+F3D9 : not included in any glyphset definition\n * U+F3DA : not included in any glyphset definition\n * U+F3DB : not included in any glyphset definition\n * U+F3DC : not included in any glyphset definition\n * U+F3DD : not included in any glyphset definition\n * U+F3DE : not included in any glyphset definition\n * U+F3DF : not included in any glyphset definition\n * U+F3E0 : not included in any glyphset definition\n * U+F3E1 : not included in any glyphset definition\n * U+F3E2 : not included in any glyphset definition\n * U+F3E3 : not included in any glyphset definition\n * U+F3E4 : not included in any glyphset definition\n * U+F3E5 : not included in any glyphset definition\n * U+F3E6 : not included in any glyphset definition\n * U+F3E7 : not included in any glyphset definition\n * U+F3E8 : not included in any glyphset definition\n * U+F3E9 : not included in any glyphset definition\n * U+F3EA : not included in any glyphset definition\n * U+F3EB : not included in any glyphset definition\n * U+F3EC : not included in any glyphset definition\n * U+F3ED : not included in any glyphset definition\n * U+F3EE : not included in any glyphset definition\n * U+F3EF : not included in any glyphset definition\n * U+F3F0 : not included in any glyphset definition\n * U+F3F1 : not included in any glyphset definition\n * U+F3F2 : not included in any glyphset definition\n * U+F3F3 : not included in any glyphset definition\n * U+F3F4 : not included in any glyphset definition\n * U+F3F5 : not included in any glyphset definition\n * U+F3F6 : not included in any glyphset definition\n * U+F3F7 : not included in any glyphset definition\n * U+F3F8 : not included in any glyphset definition\n * U+F3F9 : not included in any glyphset definition\n * U+F3FA : not included in any glyphset definition\n * U+F3FB : not included in any glyphset definition\n * U+F3FC : not included in any glyphset definition\n * U+F3FD : not included in any glyphset definition\n * U+F3FE : not included in any glyphset definition\n * U+F3FF : not included in any glyphset definition\n * U+F400 : not included in any glyphset definition\n * U+F401 : not included in any glyphset definition\n * U+F402 : not included in any glyphset definition\n * U+F403 : not included in any glyphset definition\n * U+F404 : not included in any glyphset definition\n * U+F405 : not included in any glyphset definition\n * U+F406 : not included in any glyphset definition\n * U+F407 : not included in any glyphset definition\n * U+F408 : not included in any glyphset definition\n * U+F409 : not included in any glyphset definition\n * U+F40A : not included in any glyphset definition\n * U+F40B : not included in any glyphset definition\n * U+F40C : not included in any glyphset definition\n * U+F40D : not included in any glyphset definition\n * U+F40E : not included in any glyphset definition\n * U+F40F : not included in any glyphset definition\n * U+F410 : not included in any glyphset definition\n * U+F411 : not included in any glyphset definition\n * U+F412 : not included in any glyphset definition\n * U+F413 : not included in any glyphset definition\n * U+F414 : not included in any glyphset definition\n * U+F415 : not included in any glyphset definition\n * U+F416 : not included in any glyphset definition\n * U+F417 : not included in any glyphset definition\n * U+F418 : not included in any glyphset definition\n * U+F419 : not included in any glyphset definition\n * U+F41A : not included in any glyphset definition\n * U+F41B : not included in any glyphset definition\n * U+F41C : not included in any glyphset definition\n * U+F41D : not included in any glyphset definition\n * U+F41E : not included in any glyphset definition\n * U+F41F : not included in any glyphset definition\n * U+F420 : not included in any glyphset definition\n * U+F421 : not included in any glyphset definition\n * U+F422 : not included in any glyphset definition\n * U+F423 : not included in any glyphset definition\n * U+F424 : not included in any glyphset definition\n * U+F425 : not included in any glyphset definition\n * U+F426 : not included in any glyphset definition\n * U+F427 : not included in any glyphset definition\n * U+F428 : not included in any glyphset definition\n * U+F429 : not included in any glyphset definition\n * U+F42A : not included in any glyphset definition\n * U+F42B : not included in any glyphset definition\n * U+F42C : not included in any glyphset definition\n * U+F42D : not included in any glyphset definition\n * U+F42E : not included in any glyphset definition\n * U+F42F : not included in any glyphset definition\n * U+F430 : not included in any glyphset definition\n * U+F431 : not included in any glyphset definition\n * U+F432 : not included in any glyphset definition\n * U+F433 : not included in any glyphset definition\n * U+F434 : not included in any glyphset definition\n * U+F435 : not included in any glyphset definition\n * U+F436 : not included in any glyphset definition\n * U+F437 : not included in any glyphset definition\n * U+F438 : not included in any glyphset definition\n * U+F439 : not included in any glyphset definition\n * U+F43A : not included in any glyphset definition\n * U+F43B : not included in any glyphset definition\n * U+F43C : not included in any glyphset definition\n * U+F43D : not included in any glyphset definition\n * U+F43E : not included in any glyphset definition\n * U+F43F : not included in any glyphset definition\n * U+F440 : not included in any glyphset definition\n * U+F441 : not included in any glyphset definition\n * U+F442 : not included in any glyphset definition\n * U+F443 : not included in any glyphset definition\n * U+F444 : not included in any glyphset definition\n * U+F445 : not included in any glyphset definition\n * U+F446 : not included in any glyphset definition\n * U+F447 : not included in any glyphset definition\n * U+F448 : not included in any glyphset definition\n * U+F449 : not included in any glyphset definition\n * U+F44A : not included in any glyphset definition\n * U+F44B : not included in any glyphset definition\n * U+F44C : not included in any glyphset definition\n * U+F44D : not included in any glyphset definition\n * U+F44E : not included in any glyphset definition\n * U+F44F : not included in any glyphset definition\n * U+F450 : not included in any glyphset definition\n * U+F451 : not included in any glyphset definition\n * U+F452 : not included in any glyphset definition\n * U+F453 : not included in any glyphset definition\n * U+F454 : not included in any glyphset definition\n * U+F455 : not included in any glyphset definition\n * U+F456 : not included in any glyphset definition\n * U+F457 : not included in any glyphset definition\n * U+F458 : not included in any glyphset definition\n * U+F459 : not included in any glyphset definition\n * U+F45A : not included in any glyphset definition\n * U+F45B : not included in any glyphset definition\n * U+F45C : not included in any glyphset definition\n * U+F45D : not included in any glyphset definition\n * U+F45E : not included in any glyphset definition\n * U+F45F : not included in any glyphset definition\n * U+F460 : not included in any glyphset definition\n * U+F461 : not included in any glyphset definition\n * U+F462 : not included in any glyphset definition\n * U+F463 : not included in any glyphset definition\n * U+F464 : not included in any glyphset definition\n * U+F465 : not included in any glyphset definition\n * U+F466 : not included in any glyphset definition\n * U+F467 : not included in any glyphset definition\n * U+F468 : not included in any glyphset definition\n * U+F469 : not included in any glyphset definition\n * U+F46A : not included in any glyphset definition\n * U+F46B : not included in any glyphset definition\n * U+F46C : not included in any glyphset definition\n * U+F46D : not included in any glyphset definition\n * U+F46E : not included in any glyphset definition\n * U+F46F : not included in any glyphset definition\n * U+F470 : not included in any glyphset definition\n * U+F471 : not included in any glyphset definition\n * U+F472 : not included in any glyphset definition\n * U+F473 : not included in any glyphset definition\n * U+F474 : not included in any glyphset definition\n * U+F475 : not included in any glyphset definition\n * U+F476 : not included in any glyphset definition\n * U+F477 : not included in any glyphset definition\n * U+F478 : not included in any glyphset definition\n * U+F479 : not included in any glyphset definition\n * U+F47A : not included in any glyphset definition\n * U+F47B : not included in any glyphset definition\n * U+F47C : not included in any glyphset definition\n * U+F47D : not included in any glyphset definition\n * U+F47E : not included in any glyphset definition\n * U+F47F : not included in any glyphset definition\n * U+F480 : not included in any glyphset definition\n * U+F481 : not included in any glyphset definition\n * U+F482 : not included in any glyphset definition\n * U+F483 : not included in any glyphset definition\n * U+F484 : not included in any glyphset definition\n * U+F485 : not included in any glyphset definition\n * U+F486 : not included in any glyphset definition\n * U+F487 : not included in any glyphset definition\n * U+F488 : not included in any glyphset definition\n * U+F489 : not included in any glyphset definition\n * U+F48A : not included in any glyphset definition\n * U+F48B : not included in any glyphset definition\n * U+F48C : not included in any glyphset definition\n * U+F48D : not included in any glyphset definition\n * U+F48E : not included in any glyphset definition\n * U+F48F : not included in any glyphset definition\n * U+F490 : not included in any glyphset definition\n * U+F491 : not included in any glyphset definition\n * U+F492 : not included in any glyphset definition\n * U+F493 : not included in any glyphset definition\n * U+F494 : not included in any glyphset definition\n * U+F495 : not included in any glyphset definition\n * U+F496 : not included in any glyphset definition\n * U+F497 : not included in any glyphset definition\n * U+F498 : not included in any glyphset definition\n * U+F499 : not included in any glyphset definition\n * U+F49A : not included in any glyphset definition\n * U+F49B : not included in any glyphset definition\n * U+F49C : not included in any glyphset definition\n * U+F49D : not included in any glyphset definition\n * U+F49E : not included in any glyphset definition\n * U+F49F : not included in any glyphset definition\n * U+F4A0 : not included in any glyphset definition\n * U+F4A1 : not included in any glyphset definition\n * U+F4A2 : not included in any glyphset definition\n * U+F4A3 : not included in any glyphset definition\n * U+F4A4 : not included in any glyphset definition\n * U+F4A5 : not included in any glyphset definition\n * U+F4A6 : not included in any glyphset definition\n * U+F4A7 : not included in any glyphset definition\n * U+F4A8 : not included in any glyphset definition\n * U+F4A9 : not included in any glyphset definition\n * U+F4AA : not included in any glyphset definition\n * U+F4AB : not included in any glyphset definition\n * U+F4AC : not included in any glyphset definition\n * U+F4AD : not included in any glyphset definition\n * U+F4AE : not included in any glyphset definition\n * U+F4AF : not included in any glyphset definition\n * U+F4B0 : not included in any glyphset definition\n * U+F4B1 : not included in any glyphset definition\n * U+F4B2 : not included in any glyphset definition\n * U+F4B3 : not included in any glyphset definition\n * U+F4B4 : not included in any glyphset definition\n * U+F4B5 : not included in any glyphset definition\n * U+F4B6 : not included in any glyphset definition\n * U+F4B7 : not included in any glyphset definition\n * U+F4B8 : not included in any glyphset definition\n * U+F4B9 : not included in any glyphset definition\n * U+F4BA : not included in any glyphset definition\n * U+F4BB : not included in any glyphset definition\n * U+F4BC : not included in any glyphset definition\n * U+F4BD : not included in any glyphset definition\n * U+F4BE : not included in any glyphset definition\n * U+F4BF : not included in any glyphset definition\n * U+F4C0 : not included in any glyphset definition\n * U+F4C1 : not included in any glyphset definition\n * U+F4C2 : not included in any glyphset definition\n * U+F4C3 : not included in any glyphset definition\n * U+F4C4 : not included in any glyphset definition\n * U+F4C5 : not included in any glyphset definition\n * U+F4C6 : not included in any glyphset definition\n * U+F4C7 : not included in any glyphset definition\n * U+F4C8 : not included in any glyphset definition\n * U+F4C9 : not included in any glyphset definition\n * U+F4CA : not included in any glyphset definition\n * U+F4CB : not included in any glyphset definition\n * U+F4CC : not included in any glyphset definition\n * U+F4CD : not included in any glyphset definition\n * U+F4CE : not included in any glyphset definition\n * U+F4CF : not included in any glyphset definition\n * U+F4D0 : not included in any glyphset definition\n * U+F4D1 : not included in any glyphset definition\n * U+F4D2 : not included in any glyphset definition\n * U+F4D3 : not included in any glyphset definition\n * U+F4D4 : not included in any glyphset definition\n * U+F4D5 : not included in any glyphset definition\n * U+F4D6 : not included in any glyphset definition\n * U+F4D7 : not included in any glyphset definition\n * U+F4D8 : not included in any glyphset definition\n * U+F4D9 : not included in any glyphset definition\n * U+F4DA : not included in any glyphset definition\n * U+F4DB : not included in any glyphset definition\n * U+F4DC : not included in any glyphset definition\n * U+F4DD : not included in any glyphset definition\n * U+F4DE : not included in any glyphset definition\n * U+F4DF : not included in any glyphset definition\n * U+F4E0 : not included in any glyphset definition\n * U+F4E1 : not included in any glyphset definition\n * U+F4E2 : not included in any glyphset definition\n * U+F4E3 : not included in any glyphset definition\n * U+F4E4 : not included in any glyphset definition\n * U+F4E5 : not included in any glyphset definition\n * U+F4E6 : not included in any glyphset definition\n * U+F4E7 : not included in any glyphset definition\n * U+F4E8 : not included in any glyphset definition\n * U+F4E9 : not included in any glyphset definition\n * U+F4EA : not included in any glyphset definition\n * U+F4EB : not included in any glyphset definition\n * U+F4EC : not included in any glyphset definition\n * U+F4ED : not included in any glyphset definition\n * U+F4EE : not included in any glyphset definition\n * U+F4EF : not included in any glyphset definition\n * U+F4F0 : not included in any glyphset definition\n * U+F4F1 : not included in any glyphset definition\n * U+F4F2 : not included in any glyphset definition\n * U+F4F3 : not included in any glyphset definition\n * U+F4F4 : not included in any glyphset definition\n * U+F4F5 : not included in any glyphset definition\n * U+F4F6 : not included in any glyphset definition\n * U+F4F7 : not included in any glyphset definition\n * U+F4F8 : not included in any glyphset definition\n * U+F4F9 : not included in any glyphset definition\n * U+F4FA : not included in any glyphset definition\n * U+F4FB : not included in any glyphset definition\n * U+F4FC : not included in any glyphset definition\n * U+F4FD : not included in any glyphset definition\n * U+F4FE : not included in any glyphset definition\n * U+F4FF : not included in any glyphset definition\n * U+F500 : not included in any glyphset definition\n * U+F501 : not included in any glyphset definition\n * U+F502 : not included in any glyphset definition\n * U+F503 : not included in any glyphset definition\n * U+F504 : not included in any glyphset definition\n * U+F505 : not included in any glyphset definition\n * U+F506 : not included in any glyphset definition\n * U+F507 : not included in any glyphset definition\n * U+F508 : not included in any glyphset definition\n * U+F509 : not included in any glyphset definition\n * U+F50A : not included in any glyphset definition\n * U+F50B : not included in any glyphset definition\n * U+F50C : not included in any glyphset definition\n * U+F50D : not included in any glyphset definition\n * U+F50E : not included in any glyphset definition\n * U+F50F : not included in any glyphset definition\n * U+F510 : not included in any glyphset definition\n * U+F511 : not included in any glyphset definition\n * U+F512 : not included in any glyphset definition\n * U+F513 : not included in any glyphset definition\n * U+F514 : not included in any glyphset definition\n * U+F515 : not included in any glyphset definition\n * U+F516 : not included in any glyphset definition\n * U+F517 : not included in any glyphset definition\n * U+F518 : not included in any glyphset definition\n * U+F519 : not included in any glyphset definition\n * U+F51A : not included in any glyphset definition\n * U+F51B : not included in any glyphset definition\n * U+F51C : not included in any glyphset definition\n * U+F51D : not included in any glyphset definition\n * U+F51E : not included in any glyphset definition\n * U+F51F : not included in any glyphset definition\n * U+F520 : not included in any glyphset definition\n * U+F521 : not included in any glyphset definition\n * U+F522 : not included in any glyphset definition\n * U+F523 : not included in any glyphset definition\n * U+F524 : not included in any glyphset definition\n * U+F525 : not included in any glyphset definition\n * U+F526 : not included in any glyphset definition\n * U+F527 : not included in any glyphset definition\n * U+F528 : not included in any glyphset definition\n * U+F529 : not included in any glyphset definition\n * U+F52A : not included in any glyphset definition\n * U+F52B : not included in any glyphset definition\n * U+F52C : not included in any glyphset definition\n * U+F52D : not included in any glyphset definition\n * U+F52E : not included in any glyphset definition\n * U+F52F : not included in any glyphset definition\n * U+F530 : not included in any glyphset definition\n * U+F531 : not included in any glyphset definition\n * U+F532 : not included in any glyphset definition\n * U+F533 : not included in any glyphset definition\n * U+F534 : not included in any glyphset definition\n * U+F535 : not included in any glyphset definition\n * U+F536 : not included in any glyphset definition\n * U+F537 : not included in any glyphset definition\n * U+F538 : not included in any glyphset definition\n * U+F539 : not included in any glyphset definition\n * U+F53A : not included in any glyphset definition\n * U+F53B : not included in any glyphset definition\n * U+F53C : not included in any glyphset definition\n * U+F53D : not included in any glyphset definition\n * U+F53E : not included in any glyphset definition\n * U+F53F : not included in any glyphset definition\n * U+F540 : not included in any glyphset definition\n * U+F541 : not included in any glyphset definition\n * U+F542 : not included in any glyphset definition\n * U+F543 : not included in any glyphset definition\n * U+F544 : not included in any glyphset definition\n * U+F545 : not included in any glyphset definition\n * U+F546 : not included in any glyphset definition\n * U+F547 : not included in any glyphset definition\n * U+F548 : not included in any glyphset definition\n * U+F549 : not included in any glyphset definition\n * U+F54A : not included in any glyphset definition\n * U+F54B : not included in any glyphset definition\n * U+F54C : not included in any glyphset definition\n * U+F54D : not included in any glyphset definition\n * U+F54E : not included in any glyphset definition\n * U+F54F : not included in any glyphset definition\n * U+F550 : not included in any glyphset definition\n * U+F551 : not included in any glyphset definition\n * U+F552 : not included in any glyphset definition\n * U+F553 : not included in any glyphset definition\n * U+F554 : not included in any glyphset definition\n * U+F555 : not included in any glyphset definition\n * U+F556 : not included in any glyphset definition\n * U+F557 : not included in any glyphset definition\n * U+F558 : not included in any glyphset definition\n * U+F559 : not included in any glyphset definition\n * U+F55A : not included in any glyphset definition\n * U+F55B : not included in any glyphset definition\n * U+F55C : not included in any glyphset definition\n * U+F55D : not included in any glyphset definition\n * U+F55E : not included in any glyphset definition\n * U+F55F : not included in any glyphset definition\n * U+F560 : not included in any glyphset definition\n * U+F561 : not included in any glyphset definition\n * U+F562 : not included in any glyphset definition\n * U+F563 : not included in any glyphset definition\n * U+F564 : not included in any glyphset definition\n * U+F565 : not included in any glyphset definition\n * U+F566 : not included in any glyphset definition\n * U+F567 : not included in any glyphset definition\n * U+F568 : not included in any glyphset definition\n * U+F569 : not included in any glyphset definition\n * U+F56A : not included in any glyphset definition\n * U+F56B : not included in any glyphset definition\n * U+F56C : not included in any glyphset definition\n * U+F56D : not included in any glyphset definition\n * U+F56E : not included in any glyphset definition\n * U+F56F : not included in any glyphset definition\n * U+F570 : not included in any glyphset definition\n * U+F571 : not included in any glyphset definition\n * U+F572 : not included in any glyphset definition\n * U+F573 : not included in any glyphset definition\n * U+F574 : not included in any glyphset definition\n * U+F575 : not included in any glyphset definition\n * U+F576 : not included in any glyphset definition\n * U+F577 : not included in any glyphset definition\n * U+F578 : not included in any glyphset definition\n * U+F579 : not included in any glyphset definition\n * U+F57A : not included in any glyphset definition\n * U+F57B : not included in any glyphset definition\n * U+F57C : not included in any glyphset definition\n * U+F57D : not included in any glyphset definition\n * U+F57E : not included in any glyphset definition\n * U+F57F : not included in any glyphset definition\n * U+F580 : not included in any glyphset definition\n * U+F581 : not included in any glyphset definition\n * U+F582 : not included in any glyphset definition\n * U+F583 : not included in any glyphset definition\n * U+F584 : not included in any glyphset definition\n * U+F585 : not included in any glyphset definition\n * U+F586 : not included in any glyphset definition\n * U+F587 : not included in any glyphset definition\n * U+F588 : not included in any glyphset definition\n * U+F589 : not included in any glyphset definition\n * U+F58A : not included in any glyphset definition\n * U+F58B : not included in any glyphset definition\n * U+F58C : not included in any glyphset definition\n * U+F58D : not included in any glyphset definition\n * U+F58E : not included in any glyphset definition\n * U+F58F : not included in any glyphset definition\n * U+F590 : not included in any glyphset definition\n * U+F591 : not included in any glyphset definition\n * U+F592 : not included in any glyphset definition\n * U+F593 : not included in any glyphset definition\n * U+F594 : not included in any glyphset definition\n * U+F595 : not included in any glyphset definition\n * U+F596 : not included in any glyphset definition\n * U+F597 : not included in any glyphset definition\n * U+F598 : not included in any glyphset definition\n * U+F599 : not included in any glyphset definition\n * U+F59A : not included in any glyphset definition\n * U+F59B : not included in any glyphset definition\n * U+F59C : not included in any glyphset definition\n * U+F59D : not included in any glyphset definition\n * U+F59E : not included in any glyphset definition\n * U+F59F : not included in any glyphset definition\n * U+F5A0 : not included in any glyphset definition\n * U+F5A1 : not included in any glyphset definition\n * U+F5A2 : not included in any glyphset definition\n * U+F5A3 : not included in any glyphset definition\n * U+F5A4 : not included in any glyphset definition\n * U+F5A5 : not included in any glyphset definition\n * U+F5A6 : not included in any glyphset definition\n * U+F5A7 : not included in any glyphset definition\n * U+F5A8 : not included in any glyphset definition\n * U+F5A9 : not included in any glyphset definition\n * U+F5AA : not included in any glyphset definition\n * U+F5AB : not included in any glyphset definition\n * U+F5AC : not included in any glyphset definition\n * U+F5AD : not included in any glyphset definition\n * U+F5AE : not included in any glyphset definition\n * U+F5AF : not included in any glyphset definition\n * U+F5B0 : not included in any glyphset definition\n * U+F5B1 : not included in any glyphset definition\n * U+F5B2 : not included in any glyphset definition\n * U+F5B3 : not included in any glyphset definition\n * U+F5B4 : not included in any glyphset definition\n * U+F5B5 : not included in any glyphset definition\n * U+F5B6 : not included in any glyphset definition\n * U+F5B7 : not included in any glyphset definition\n * U+F5B8 : not included in any glyphset definition\n * U+F5B9 : not included in any glyphset definition\n * U+F5BA : not included in any glyphset definition\n * U+F5BB : not included in any glyphset definition\n * U+F5BC : not included in any glyphset definition\n * U+F5BD : not included in any glyphset definition\n * U+F5BE : not included in any glyphset definition\n * U+F5BF : not included in any glyphset definition\n * U+F5C0 : not included in any glyphset definition\n * U+F5C1 : not included in any glyphset definition\n * U+F5C2 : not included in any glyphset definition\n * U+F5C3 : not included in any glyphset definition\n * U+F5C4 : not included in any glyphset definition\n * U+F5C5 : not included in any glyphset definition\n * U+F5C6 : not included in any glyphset definition\n * U+F5C7 : not included in any glyphset definition\n * U+F5C8 : not included in any glyphset definition\n * U+F5C9 : not included in any glyphset definition\n * U+F5CA : not included in any glyphset definition\n * U+F5CB : not included in any glyphset definition\n * U+F5CC : not included in any glyphset definition\n * U+F5CD : not included in any glyphset definition\n * U+F5CE : not included in any glyphset definition\n * U+F5CF : not included in any glyphset definition\n * U+F5D0 : not included in any glyphset definition\n * U+F5D1 : not included in any glyphset definition\n * U+F5D2 : not included in any glyphset definition\n * U+F5D3 : not included in any glyphset definition\n * U+F5D4 : not included in any glyphset definition\n * U+F5D5 : not included in any glyphset definition\n * U+F5D6 : not included in any glyphset definition\n * U+F5D7 : not included in any glyphset definition\n * U+F5D8 : not included in any glyphset definition\n * U+F5D9 : not included in any glyphset definition\n * U+F5DA : not included in any glyphset definition\n * U+F5DB : not included in any glyphset definition\n * U+F5DC : not included in any glyphset definition\n * U+F5DD : not included in any glyphset definition\n * U+F5DE : not included in any glyphset definition\n * U+F5DF : not included in any glyphset definition\n * U+F5E0 : not included in any glyphset definition\n * U+F5E1 : not included in any glyphset definition\n * U+F5E2 : not included in any glyphset definition\n * U+F5E3 : not included in any glyphset definition\n * U+F5E4 : not included in any glyphset definition\n * U+F5E5 : not included in any glyphset definition\n * U+F5E6 : not included in any glyphset definition\n * U+F5E7 : not included in any glyphset definition\n * U+F5E8 : not included in any glyphset definition\n * U+F5E9 : not included in any glyphset definition\n * U+F5EA : not included in any glyphset definition\n * U+F5EB : not included in any glyphset definition\n * U+F5EC : not included in any glyphset definition\n * U+F5ED : not included in any glyphset definition\n * U+F5EE : not included in any glyphset definition\n * U+F5EF : not included in any glyphset definition\n * U+F5F0 : not included in any glyphset definition\n * U+F5F1 : not included in any glyphset definition\n * U+F5F2 : not included in any glyphset definition\n * U+F5F3 : not included in any glyphset definition\n * U+F5F4 : not included in any glyphset definition\n * U+F5F5 : not included in any glyphset definition\n * U+F5F6 : not included in any glyphset definition\n * U+F5F7 : not included in any glyphset definition\n * U+F5F8 : not included in any glyphset definition\n * U+F5F9 : not included in any glyphset definition\n * U+F5FA : not included in any glyphset definition\n * U+F5FB : not included in any glyphset definition\n * U+F5FC : not included in any glyphset definition\n * U+F5FD : not included in any glyphset definition\n * U+F5FE : not included in any glyphset definition\n * U+F5FF : not included in any glyphset definition\n * U+F600 : not included in any glyphset definition\n * U+F601 : not included in any glyphset definition\n * U+F602 : not included in any glyphset definition\n * U+F603 : not included in any glyphset definition\n * U+F604 : not included in any glyphset definition\n * U+F605 : not included in any glyphset definition\n * U+F606 : not included in any glyphset definition\n * U+F607 : not included in any glyphset definition\n * U+F608 : not included in any glyphset definition\n * U+F609 : not included in any glyphset definition\n * U+F60A : not included in any glyphset definition\n * U+F60B : not included in any glyphset definition\n * U+F60C : not included in any glyphset definition\n * U+F60D : not included in any glyphset definition\n * U+F60E : not included in any glyphset definition\n * U+F60F : not included in any glyphset definition\n * U+F610 : not included in any glyphset definition\n * U+F611 : not included in any glyphset definition\n * U+F612 : not included in any glyphset definition\n * U+F613 : not included in any glyphset definition\n * U+F614 : not included in any glyphset definition\n * U+F615 : not included in any glyphset definition\n * U+F616 : not included in any glyphset definition\n * U+F617 : not included in any glyphset definition\n * U+F618 : not included in any glyphset definition\n * U+F619 : not included in any glyphset definition\n * U+F61A : not included in any glyphset definition\n * U+F61B : not included in any glyphset definition\n * U+F61C : not included in any glyphset definition\n * U+F61D : not included in any glyphset definition\n * U+F61E : not included in any glyphset definition\n * U+F61F : not included in any glyphset definition\n * U+F620 : not included in any glyphset definition\n * U+F621 : not included in any glyphset definition\n * U+F622 : not included in any glyphset definition\n * U+F623 : not included in any glyphset definition\n * U+F624 : not included in any glyphset definition\n * U+F625 : not included in any glyphset definition\n * U+F626 : not included in any glyphset definition\n * U+F627 : not included in any glyphset definition\n * U+F628 : not included in any glyphset definition\n * U+F629 : not included in any glyphset definition\n * U+F62A : not included in any glyphset definition\n * U+F62B : not included in any glyphset definition\n * U+F62C : not included in any glyphset definition\n * U+F62D : not included in any glyphset definition\n * U+F62E : not included in any glyphset definition\n * U+F62F : not included in any glyphset definition\n * U+F630 : not included in any glyphset definition\n * U+F631 : not included in any glyphset definition\n * U+F632 : not included in any glyphset definition\n * U+F633 : not included in any glyphset definition\n * U+F634 : not included in any glyphset definition\n * U+F635 : not included in any glyphset definition\n * U+F636 : not included in any glyphset definition\n * U+F637 : not included in any glyphset definition\n * U+F638 : not included in any glyphset definition\n * U+F639 : not included in any glyphset definition\n * U+F63A : not included in any glyphset definition\n * U+F63B : not included in any glyphset definition\n * U+F63C : not included in any glyphset definition\n * U+F63D : not included in any glyphset definition\n * U+F63E : not included in any glyphset definition\n * U+F63F : not included in any glyphset definition\n * U+F640 : not included in any glyphset definition\n * U+F641 : not included in any glyphset definition\n * U+F642 : not included in any glyphset definition\n * U+F643 : not included in any glyphset definition\n * U+F644 : not included in any glyphset definition\n * U+F645 : not included in any glyphset definition\n * U+F646 : not included in any glyphset definition\n * U+F647 : not included in any glyphset definition\n * U+F648 : not included in any glyphset definition\n * U+F649 : not included in any glyphset definition\n * U+F64A : not included in any glyphset definition\n * U+F64B : not included in any glyphset definition\n * U+F64C : not included in any glyphset definition\n * U+F64D : not included in any glyphset definition\n * U+F64E : not included in any glyphset definition\n * U+F64F : not included in any glyphset definition\n * U+F650 : not included in any glyphset definition\n * U+F651 : not included in any glyphset definition\n * U+F652 : not included in any glyphset definition\n * U+F653 : not included in any glyphset definition\n * U+F654 : not included in any glyphset definition\n * U+F655 : not included in any glyphset definition\n * U+F656 : not included in any glyphset definition\n * U+F657 : not included in any glyphset definition\n * U+F658 : not included in any glyphset definition\n * U+F659 : not included in any glyphset definition\n * U+F65A : not included in any glyphset definition\n * U+F65B : not included in any glyphset definition\n * U+F65C : not included in any glyphset definition\n * U+F65D : not included in any glyphset definition\n * U+F65E : not included in any glyphset definition\n * U+F65F : not included in any glyphset definition\n * U+F660 : not included in any glyphset definition\n * U+F661 : not included in any glyphset definition\n * U+F662 : not included in any glyphset definition\n * U+F663 : not included in any glyphset definition\n * U+F664 : not included in any glyphset definition\n * U+F665 : not included in any glyphset definition\n * U+F666 : not included in any glyphset definition\n * U+F667 : not included in any glyphset definition\n * U+F668 : not included in any glyphset definition\n * U+F669 : not included in any glyphset definition\n * U+F66A : not included in any glyphset definition\n * U+F66B : not included in any glyphset definition\n * U+F66C : not included in any glyphset definition\n * U+F66D : not included in any glyphset definition\n * U+F66E : not included in any glyphset definition\n * U+F66F : not included in any glyphset definition\n * U+F670 : not included in any glyphset definition\n * U+F671 : not included in any glyphset definition\n * U+F672 : not included in any glyphset definition\n * U+F673 : not included in any glyphset definition\n * U+F674 : not included in any glyphset definition\n * U+F675 : not included in any glyphset definition\n * U+F676 : not included in any glyphset definition\n * U+F677 : not included in any glyphset definition\n * U+F678 : not included in any glyphset definition\n * U+F679 : not included in any glyphset definition\n * U+F67A : not included in any glyphset definition\n * U+F67B : not included in any glyphset definition\n * U+F67C : not included in any glyphset definition\n * U+F67D : not included in any glyphset definition\n * U+F67E : not included in any glyphset definition\n * U+F67F : not included in any glyphset definition\n * U+F680 : not included in any glyphset definition\n * U+F681 : not included in any glyphset definition\n * U+F682 : not included in any glyphset definition\n * U+F683 : not included in any glyphset definition\n * U+F684 : not included in any glyphset definition\n * U+F685 : not included in any glyphset definition\n * U+F686 : not included in any glyphset definition\n * U+F687 : not included in any glyphset definition\n * U+F688 : not included in any glyphset definition\n * U+F689 : not included in any glyphset definition\n * U+F68A : not included in any glyphset definition\n * U+F68B : not included in any glyphset definition\n * U+F68C : not included in any glyphset definition\n * U+F68D : not included in any glyphset definition\n * U+F68E : not included in any glyphset definition\n * U+F68F : not included in any glyphset definition\n * U+F690 : not included in any glyphset definition\n * U+F691 : not included in any glyphset definition\n * U+F692 : not included in any glyphset definition\n * U+F693 : not included in any glyphset definition\n * U+F694 : not included in any glyphset definition\n * U+F695 : not included in any glyphset definition\n * U+F696 : not included in any glyphset definition\n * U+F697 : not included in any glyphset definition\n * U+F698 : not included in any glyphset definition\n * U+F699 : not included in any glyphset definition\n * U+F69A : not included in any glyphset definition\n * U+F69B : not included in any glyphset definition\n * U+F69C : not included in any glyphset definition\n * U+F69D : not included in any glyphset definition\n * U+F69E : not included in any glyphset definition\n * U+F69F : not included in any glyphset definition\n * U+F6A0 : not included in any glyphset definition\n * U+F6A1 : not included in any glyphset definition\n * U+F6A2 : not included in any glyphset definition\n * U+F6A3 : not included in any glyphset definition\n * U+F6A4 : not included in any glyphset definition\n * U+F6A5 : not included in any glyphset definition\n * U+F6A6 : not included in any glyphset definition\n * U+F6A7 : not included in any glyphset definition\n * U+F6A8 : not included in any glyphset definition\n * U+F6A9 : not included in any glyphset definition\n * U+F6AA : not included in any glyphset definition\n * U+F6AB : not included in any glyphset definition\n * U+F6AC : not included in any glyphset definition\n * U+F6AD : not included in any glyphset definition\n * U+F6AE : not included in any glyphset definition\n * U+F6AF : not included in any glyphset definition\n * U+F6B0 : not included in any glyphset definition\n * U+F6B1 : not included in any glyphset definition\n * U+F6B2 : not included in any glyphset definition\n * U+F6B3 : not included in any glyphset definition\n * U+F6B4 : not included in any glyphset definition\n * U+F6B5 : not included in any glyphset definition\n * U+F6B6 : not included in any glyphset definition\n * U+F6B7 : not included in any glyphset definition\n * U+F6B8 : not included in any glyphset definition\n * U+F6B9 : not included in any glyphset definition\n * U+F6BA : not included in any glyphset definition\n * U+F6BB : not included in any glyphset definition\n * U+F6BC : not included in any glyphset definition\n * U+F6BD : not included in any glyphset definition\n * U+F6BE : not included in any glyphset definition\n * U+F6BF : not included in any glyphset definition\n * U+F6C0 : not included in any glyphset definition\n * U+F6C1 : not included in any glyphset definition\n * U+F6C2 : not included in any glyphset definition\n * U+F6C3 : not included in any glyphset definition\n * U+F6C4 : not included in any glyphset definition\n * U+F6C5 : not included in any glyphset definition\n * U+F6C6 : not included in any glyphset definition\n * U+F6C7 : not included in any glyphset definition\n * U+F6C8 : not included in any glyphset definition\n * U+F6C9 : not included in any glyphset definition\n * U+F6CA : not included in any glyphset definition\n * U+F6CB : not included in any glyphset definition\n * U+F6CC : not included in any glyphset definition\n * U+F6CD : not included in any glyphset definition\n * U+F6CE : not included in any glyphset definition\n * U+F6CF : not included in any glyphset definition\n * U+F6D0 : not included in any glyphset definition\n * U+F6D1 : not included in any glyphset definition\n * U+F6D2 : not included in any glyphset definition\n * U+F6D3 : not included in any glyphset definition\n * U+F6D4 : not included in any glyphset definition\n * U+F6D5 : not included in any glyphset definition\n * U+F6D6 : not included in any glyphset definition\n * U+F6D7 : not included in any glyphset definition\n * U+F6D8 : not included in any glyphset definition\n * U+F6D9 : not included in any glyphset definition\n * U+F6DA : not included in any glyphset definition\n * U+F6DB : not included in any glyphset definition\n * U+F6DC : not included in any glyphset definition\n * U+F6DD : not included in any glyphset definition\n * U+F6DE : not included in any glyphset definition\n * U+F6DF : not included in any glyphset definition\n * U+F6E0 : not included in any glyphset definition\n * U+F6E1 : not included in any glyphset definition\n * U+F6E2 : not included in any glyphset definition\n * U+F6E3 : not included in any glyphset definition\n * U+F6E4 : not included in any glyphset definition\n * U+F6E5 : not included in any glyphset definition\n * U+F6E6 : not included in any glyphset definition\n * U+F6E7 : not included in any glyphset definition\n * U+F6E8 : not included in any glyphset definition\n * U+F6E9 : not included in any glyphset definition\n * U+F6EA : not included in any glyphset definition\n * U+F6EB : not included in any glyphset definition\n * U+F6EC : not included in any glyphset definition\n * U+F6ED : not included in any glyphset definition\n * U+F6EE : not included in any glyphset definition\n * U+F6EF : not included in any glyphset definition\n * U+F6F0 : not included in any glyphset definition\n * U+F6F1 : not included in any glyphset definition\n * U+F6F2 : not included in any glyphset definition\n * U+F6F3 : not included in any glyphset definition\n * U+F6F4 : not included in any glyphset definition\n * U+F6F5 : not included in any glyphset definition\n * U+F6F6 : not included in any glyphset definition\n * U+F6F7 : not included in any glyphset definition\n * U+F6F8 : not included in any glyphset definition\n * U+F6F9 : not included in any glyphset definition\n * U+F6FA : not included in any glyphset definition\n * U+F6FB : not included in any glyphset definition\n * U+F6FC : not included in any glyphset definition\n * U+F6FD : not included in any glyphset definition\n * U+F6FE : not included in any glyphset definition\n * U+F6FF : not included in any glyphset definition\n * U+F700 : not included in any glyphset definition\n * U+F701 : not included in any glyphset definition\n * U+F702 : not included in any glyphset definition\n * U+F703 : not included in any glyphset definition\n * U+F704 : not included in any glyphset definition\n * U+F705 : not included in any glyphset definition\n * U+F706 : not included in any glyphset definition\n * U+F707 : not included in any glyphset definition\n * U+F708 : not included in any glyphset definition\n * U+F709 : not included in any glyphset definition\n * U+F70A : not included in any glyphset definition\n * U+F70B : not included in any glyphset definition\n * U+F70C : not included in any glyphset definition\n * U+F70D : not included in any glyphset definition\n * U+F70E : not included in any glyphset definition\n * U+F70F : not included in any glyphset definition\n * U+F710 : not included in any glyphset definition\n * U+F711 : not included in any glyphset definition\n * U+F712 : not included in any glyphset definition\n * U+F713 : not included in any glyphset definition\n * U+F714 : not included in any glyphset definition\n * U+F715 : not included in any glyphset definition\n * U+F716 : not included in any glyphset definition\n * U+F717 : not included in any glyphset definition\n * U+F718 : not included in any glyphset definition\n * U+F719 : not included in any glyphset definition\n * U+F71A : not included in any glyphset definition\n * U+F71B : not included in any glyphset definition\n * U+F71C : not included in any glyphset definition\n * U+F71D : not included in any glyphset definition\n * U+F71E : not included in any glyphset definition\n * U+F71F : not included in any glyphset definition\n * U+F720 : not included in any glyphset definition\n * U+F721 : not included in any glyphset definition\n * U+F722 : not included in any glyphset definition\n * U+F723 : not included in any glyphset definition\n * U+F724 : not included in any glyphset definition\n * U+F725 : not included in any glyphset definition\n * U+F726 : not included in any glyphset definition\n * U+F727 : not included in any glyphset definition\n * U+F728 : not included in any glyphset definition\n * U+F729 : not included in any glyphset definition\n * U+F72A : not included in any glyphset definition\n * U+F72B : not included in any glyphset definition\n * U+F72C : not included in any glyphset definition\n * U+F72D : not included in any glyphset definition\n * U+F72E : not included in any glyphset definition\n * U+F72F : not included in any glyphset definition\n * U+F730 : not included in any glyphset definition\n * U+F731 : not included in any glyphset definition\n * U+F732 : not included in any glyphset definition\n * U+F733 : not included in any glyphset definition\n * U+F734 : not included in any glyphset definition\n * U+F735 : not included in any glyphset definition\n * U+F736 : not included in any glyphset definition\n * U+F737 : not included in any glyphset definition\n * U+F738 : not included in any glyphset definition\n * U+F739 : not included in any glyphset definition\n * U+F73A : not included in any glyphset definition\n * U+F73B : not included in any glyphset definition\n * U+F73C : not included in any glyphset definition\n * U+F73D : not included in any glyphset definition\n * U+F73E : not included in any glyphset definition\n * U+F73F : not included in any glyphset definition\n * U+F740 : not included in any glyphset definition\n * U+F741 : not included in any glyphset definition\n * U+F742 : not included in any glyphset definition\n * U+F743 : not included in any glyphset definition\n * U+F744 : not included in any glyphset definition\n * U+F745 : not included in any glyphset definition\n * U+F746 : not included in any glyphset definition\n * U+F747 : not included in any glyphset definition\n * U+F748 : not included in any glyphset definition\n * U+F749 : not included in any glyphset definition\n * U+F74A : not included in any glyphset definition\n * U+F74B : not included in any glyphset definition\n * U+F74C : not included in any glyphset definition\n * U+F74D : not included in any glyphset definition\n * U+F74E : not included in any glyphset definition\n * U+F74F : not included in any glyphset definition\n * U+F750 : not included in any glyphset definition\n * U+F751 : not included in any glyphset definition\n * U+F752 : not included in any glyphset definition\n * U+F753 : not included in any glyphset definition\n * U+F754 : not included in any glyphset definition\n * U+F755 : not included in any glyphset definition\n * U+F756 : not included in any glyphset definition\n * U+F757 : not included in any glyphset definition\n * U+F758 : not included in any glyphset definition\n * U+F759 : not included in any glyphset definition\n * U+F75A : not included in any glyphset definition\n * U+F75B : not included in any glyphset definition\n * U+F75C : not included in any glyphset definition\n * U+F75D : not included in any glyphset definition\n * U+F75E : not included in any glyphset definition\n * U+F75F : not included in any glyphset definition\n * U+F760 : not included in any glyphset definition\n * U+F761 : not included in any glyphset definition\n * U+F762 : not included in any glyphset definition\n * U+F763 : not included in any glyphset definition\n * U+F764 : not included in any glyphset definition\n * U+F765 : not included in any glyphset definition\n * U+F766 : not included in any glyphset definition\n * U+F767 : not included in any glyphset definition\n * U+F768 : not included in any glyphset definition\n * U+F769 : not included in any glyphset definition\n * U+F76A : not included in any glyphset definition\n * U+F76B : not included in any glyphset definition\n * U+F76C : not included in any glyphset definition\n * U+F76D : not included in any glyphset definition\n * U+F76E : not included in any glyphset definition\n * U+F76F : not included in any glyphset definition\n * U+F770 : not included in any glyphset definition\n * U+F771 : not included in any glyphset definition\n * U+F772 : not included in any glyphset definition\n * U+F773 : not included in any glyphset definition\n * U+F774 : not included in any glyphset definition\n * U+F775 : not included in any glyphset definition\n * U+F776 : not included in any glyphset definition\n * U+F777 : not included in any glyphset definition\n * U+F778 : not included in any glyphset definition\n * U+F779 : not included in any glyphset definition\n * U+F77A : not included in any glyphset definition\n * U+F77B : not included in any glyphset definition\n * U+F77C : not included in any glyphset definition\n * U+F77D : not included in any glyphset definition\n * U+F77E : not included in any glyphset definition\n * U+F77F : not included in any glyphset definition\n * U+F780 : not included in any glyphset definition\n * U+F781 : not included in any glyphset definition\n * U+F782 : not included in any glyphset definition\n * U+F783 : not included in any glyphset definition\n * U+F784 : not included in any glyphset definition\n * U+F785 : not included in any glyphset definition\n * U+F786 : not included in any glyphset definition\n * U+F787 : not included in any glyphset definition\n * U+F788 : not included in any glyphset definition\n * U+F789 : not included in any glyphset definition\n * U+F78A : not included in any glyphset definition\n * U+F78B : not included in any glyphset definition\n * U+F78C : not included in any glyphset definition\n * U+F78D : not included in any glyphset definition\n * U+F78E : not included in any glyphset definition\n * U+F78F : not included in any glyphset definition\n * U+F790 : not included in any glyphset definition\n * U+F791 : not included in any glyphset definition\n * U+F792 : not included in any glyphset definition\n * U+F793 : not included in any glyphset definition\n * U+F794 : not included in any glyphset definition\n * U+F795 : not included in any glyphset definition\n * U+F796 : not included in any glyphset definition\n * U+F797 : not included in any glyphset definition\n * U+F798 : not included in any glyphset definition\n * U+F799 : not included in any glyphset definition\n * U+F79A : not included in any glyphset definition\n * U+F79B : not included in any glyphset definition\n * U+F79C : not included in any glyphset definition\n * U+F79D : not included in any glyphset definition\n * U+F79E : not included in any glyphset definition\n * U+F79F : not included in any glyphset definition\n * U+F7A0 : not included in any glyphset definition\n * U+F7A1 : not included in any glyphset definition\n * U+F7A2 : not included in any glyphset definition\n * U+F7A3 : not included in any glyphset definition\n * U+F7A4 : not included in any glyphset definition\n * U+F7A5 : not included in any glyphset definition\n * U+F7A6 : not included in any glyphset definition\n * U+F7A7 : not included in any glyphset definition\n * U+F7A8 : not included in any glyphset definition\n * U+F7A9 : not included in any glyphset definition\n * U+F7AA : not included in any glyphset definition\n * U+F7AB : not included in any glyphset definition\n * U+F7AC : not included in any glyphset definition\n * U+F7AD : not included in any glyphset definition\n * U+F7AE : not included in any glyphset definition\n * U+F7AF : not included in any glyphset definition\n * U+F7B0 : not included in any glyphset definition\n * U+F7B1 : not included in any glyphset definition\n * U+F7B2 : not included in any glyphset definition\n * U+F7B3 : not included in any glyphset definition\n * U+F7B4 : not included in any glyphset definition\n * U+F7B5 : not included in any glyphset definition\n * U+F7B6 : not included in any glyphset definition\n * U+F7B7 : not included in any glyphset definition\n * U+F7B8 : not included in any glyphset definition\n * U+F7B9 : not included in any glyphset definition\n * U+F7BA : not included in any glyphset definition\n * U+F7BB : not included in any glyphset definition\n * U+F7BC : not included in any glyphset definition\n * U+F7BD : not included in any glyphset definition\n * U+F7BE : not included in any glyphset definition\n * U+F7BF : not included in any glyphset definition\n * U+F7C0 : not included in any glyphset definition\n * U+F7C1 : not included in any glyphset definition\n * U+F7C2 : not included in any glyphset definition\n * U+F7C3 : not included in any glyphset definition\n * U+F7C4 : not included in any glyphset definition\n * U+F7C5 : not included in any glyphset definition\n * U+F7C6 : not included in any glyphset definition\n * U+F7C7 : not included in any glyphset definition\n * U+F7C8 : not included in any glyphset definition\n * U+F7C9 : not included in any glyphset definition\n * U+F7CA : not included in any glyphset definition\n * U+F7CB : not included in any glyphset definition\n * U+F7CC : not included in any glyphset definition\n * U+F7CD : not included in any glyphset definition\n * U+F7CE : not included in any glyphset definition\n * U+F7CF : not included in any glyphset definition\n * U+F7D0 : not included in any glyphset definition\n * U+F7D1 : not included in any glyphset definition\n * U+F7D2 : not included in any glyphset definition\n * U+F7D3 : not included in any glyphset definition\n * U+F7D4 : not included in any glyphset definition\n * U+F7D5 : not included in any glyphset definition\n * U+F7D6 : not included in any glyphset definition\n * U+F7D7 : not included in any glyphset definition\n * U+F7D8 : not included in any glyphset definition\n * U+F7D9 : not included in any glyphset definition\n * U+F7DA : not included in any glyphset definition\n * U+F7DB : not included in any glyphset definition\n * U+F7DC : not included in any glyphset definition\n * U+F7DD : not included in any glyphset definition\n * U+F7DE : not included in any glyphset definition\n * U+F7DF : not included in any glyphset definition\n * U+F7E0 : not included in any glyphset definition\n * U+F7E1 : not included in any glyphset definition\n * U+F7E2 : not included in any glyphset definition\n * U+F7E3 : not included in any glyphset definition\n * U+F7E4 : not included in any glyphset definition\n * U+F7E5 : not included in any glyphset definition\n * U+F7E6 : not included in any glyphset definition\n * U+F7E7 : not included in any glyphset definition\n * U+F7E8 : not included in any glyphset definition\n * U+F7E9 : not included in any glyphset definition\n * U+F7EA : not included in any glyphset definition\n * U+F7EB : not included in any glyphset definition\n * U+F7EC : not included in any glyphset definition\n * U+F7ED : not included in any glyphset definition\n * U+F7EE : not included in any glyphset definition\n * U+F7EF : not included in any glyphset definition\n * U+F7F0 : not included in any glyphset definition\n * U+F7F1 : not included in any glyphset definition\n * U+F7F2 : not included in any glyphset definition\n * U+F7F3 : not included in any glyphset definition\n * U+F7F4 : not included in any glyphset definition\n * U+F7F5 : not included in any glyphset definition\n * U+F7F6 : not included in any glyphset definition\n * U+F7F7 : not included in any glyphset definition\n * U+F7F8 : not included in any glyphset definition\n * U+F7F9 : not included in any glyphset definition\n * U+F7FA : not included in any glyphset definition\n * U+F7FB : not included in any glyphset definition\n * U+F7FC : not included in any glyphset definition\n * U+F7FD : not included in any glyphset definition\n * U+F7FE : not included in any glyphset definition\n * U+F7FF : not included in any glyphset definition\n * U+F800 : not included in any glyphset definition\n * U+F801 : not included in any glyphset definition\n * U+F802 : not included in any glyphset definition\n * U+F803 : not included in any glyphset definition\n * U+F804 : not included in any glyphset definition\n * U+F805 : not included in any glyphset definition\n * U+F806 : not included in any glyphset definition\n * U+F807 : not included in any glyphset definition\n * U+F808 : not included in any glyphset definition\n * U+F809 : not included in any glyphset definition\n * U+F80A : not included in any glyphset definition\n * U+F80B : not included in any glyphset definition\n * U+F80C : not included in any glyphset definition\n * U+F80D : not included in any glyphset definition\n * U+F80E : not included in any glyphset definition\n * U+F80F : not included in any glyphset definition\n * U+F810 : not included in any glyphset definition\n * U+F811 : not included in any glyphset definition\n * U+F812 : not included in any glyphset definition\n * U+F813 : not included in any glyphset definition\n * U+F814 : not included in any glyphset definition\n * U+F815 : not included in any glyphset definition\n * U+F816 : not included in any glyphset definition\n * U+F817 : not included in any glyphset definition\n * U+F818 : not included in any glyphset definition\n * U+F819 : not included in any glyphset definition\n * U+F81A : not included in any glyphset definition\n * U+F81B : not included in any glyphset definition\n * U+F81C : not included in any glyphset definition\n * U+F81D : not included in any glyphset definition\n * U+F81E : not included in any glyphset definition\n * U+F81F : not included in any glyphset definition\n * U+F820 : not included in any glyphset definition\n * U+F821 : not included in any glyphset definition\n * U+F822 : not included in any glyphset definition\n * U+F823 : not included in any glyphset definition\n * U+F824 : not included in any glyphset definition\n * U+F825 : not included in any glyphset definition\n * U+F826 : not included in any glyphset definition\n * U+F827 : not included in any glyphset definition\n * U+F828 : not included in any glyphset definition\n * U+F829 : not included in any glyphset definition\n * U+F82A : not included in any glyphset definition\n * U+F82B : not included in any glyphset definition\n * U+F82C : not included in any glyphset definition\n * U+F82D : not included in any glyphset definition\n * U+F82E : not included in any glyphset definition\n * U+F82F : not included in any glyphset definition\n * U+F830 : not included in any glyphset definition\n * U+F831 : not included in any glyphset definition\n * U+F832 : not included in any glyphset definition\n * U+F833 : not included in any glyphset definition\n * U+F834 : not included in any glyphset definition\n * U+F835 : not included in any glyphset definition\n * U+F836 : not included in any glyphset definition\n * U+F837 : not included in any glyphset definition\n * U+F838 : not included in any glyphset definition\n * U+F839 : not included in any glyphset definition\n * U+F83A : not included in any glyphset definition\n * U+F83B : not included in any glyphset definition\n * U+F83C : not included in any glyphset definition\n * U+F83D : not included in any glyphset definition\n * U+F83E : not included in any glyphset definition\n * U+F83F : not included in any glyphset definition\n * U+F840 : not included in any glyphset definition\n * U+F841 : not included in any glyphset definition\n * U+F842 : not included in any glyphset definition\n * U+F843 : not included in any glyphset definition\n * U+F844 : not included in any glyphset definition\n * U+F845 : not included in any glyphset definition\n * U+F846 : not included in any glyphset definition\n * U+F847 : not included in any glyphset definition\n * U+F848 : not included in any glyphset definition\n * U+F849 : not included in any glyphset definition\n * U+F84A : not included in any glyphset definition\n * U+F84B : not included in any glyphset definition\n * U+F84C : not included in any glyphset definition\n * U+F84D : not included in any glyphset definition\n * U+F84E : not included in any glyphset definition\n * U+F84F : not included in any glyphset definition\n * U+F850 : not included in any glyphset definition\n * U+F851 : not included in any glyphset definition\n * U+F852 : not included in any glyphset definition\n * U+F853 : not included in any glyphset definition\n * U+F854 : not included in any glyphset definition\n * U+F855 : not included in any glyphset definition\n * U+F856 : not included in any glyphset definition\n * U+F857 : not included in any glyphset definition\n * U+F858 : not included in any glyphset definition\n * U+F859 : not included in any glyphset definition\n * U+F85A : not included in any glyphset definition\n * U+F85B : not included in any glyphset definition\n * U+F85C : not included in any glyphset definition\n * U+F85D : not included in any glyphset definition\n * U+F85E : not included in any glyphset definition\n * U+F85F : not included in any glyphset definition\n * U+F860 : not included in any glyphset definition\n * U+F861 : not included in any glyphset definition\n * U+F862 : not included in any glyphset definition\n * U+F863 : not included in any glyphset definition\n * U+F864 : not included in any glyphset definition\n * U+F865 : not included in any glyphset definition\n * U+F866 : not included in any glyphset definition\n * U+F867 : not included in any glyphset definition\n * U+F868 : not included in any glyphset definition\n * U+F869 : not included in any glyphset definition\n * U+F86A : not included in any glyphset definition\n * U+F86B : not included in any glyphset definition\n * U+F86C : not included in any glyphset definition\n * U+F86D : not included in any glyphset definition\n * U+F86E : not included in any glyphset definition\n * U+F86F : not included in any glyphset definition\n * U+F870 : not included in any glyphset definition\n * U+F871 : not included in any glyphset definition\n * U+F872 : not included in any glyphset definition\n * U+F873 : not included in any glyphset definition\n * U+F874 : not included in any glyphset definition\n * U+F875 : not included in any glyphset definition\n * U+F876 : not included in any glyphset definition\n * U+F877 : not included in any glyphset definition\n * U+F878 : not included in any glyphset definition\n * U+F879 : not included in any glyphset definition\n * U+F87A : not included in any glyphset definition\n * U+F87B : not included in any glyphset definition\n * U+F87C : not included in any glyphset definition\n * U+F87D : not included in any glyphset definition\n * U+F87E : not included in any glyphset definition\n * U+F87F : not included in any glyphset definition\n * U+F880 : not included in any glyphset definition\n * U+F881 : not included in any glyphset definition\n * U+F882 : not included in any glyphset definition\n * U+F883 : not included in any glyphset definition\n * U+F884 : not included in any glyphset definition\n * U+F885 : not included in any glyphset definition\n * U+F886 : not included in any glyphset definition\n * U+F887 : not included in any glyphset definition\n * U+F888 : not included in any glyphset definition\n * U+F889 : not included in any glyphset definition\n * U+F88A : not included in any glyphset definition\n * U+F88B : not included in any glyphset definition\n * U+F88C : not included in any glyphset definition\n * U+F88D : not included in any glyphset definition\n * U+F88E : not included in any glyphset definition\n * U+F88F : not included in any glyphset definition\n * U+F890 : not included in any glyphset definition\n * U+F891 : not included in any glyphset definition\n * U+F892 : not included in any glyphset definition\n * U+F893 : not included in any glyphset definition\n * U+F894 : not included in any glyphset definition\n * U+F895 : not included in any glyphset definition\n * U+F896 : not included in any glyphset definition\n * U+F897 : not included in any glyphset definition\n * U+F898 : not included in any glyphset definition\n * U+F899 : not included in any glyphset definition\n * U+F89A : not included in any glyphset definition\n * U+F89B : not included in any glyphset definition\n * U+F89C : not included in any glyphset definition\n * U+F89D : not included in any glyphset definition\n * U+F89E : not included in any glyphset definition\n * U+F89F : not included in any glyphset definition\n * U+F8A0 : not included in any glyphset definition\n * U+F8A1 : not included in any glyphset definition\n * U+F8A2 : not included in any glyphset definition\n * U+F8A3 : not included in any glyphset definition\n * U+F8A4 : not included in any glyphset definition\n * U+F8A5 : not included in any glyphset definition\n * U+F8A6 : not included in any glyphset definition\n * U+F8A7 : not included in any glyphset definition\n * U+F8A8 : not included in any glyphset definition\n * U+F8A9 : not included in any glyphset definition\n * U+F8AA : not included in any glyphset definition\n * U+F8AB : not included in any glyphset definition\n * U+F8AC : not included in any glyphset definition\n * U+F8AD : not included in any glyphset definition\n * U+F8AE : not included in any glyphset definition\n * U+F8AF : not included in any glyphset definition\n * U+F8B0 : not included in any glyphset definition\n * U+F8B1 : not included in any glyphset definition\n * U+F8B2 : not included in any glyphset definition\n * U+F8B3 : not included in any glyphset definition\n * U+F8B4 : not included in any glyphset definition\n * U+F8B5 : not included in any glyphset definition\n * U+F8B6 : not included in any glyphset definition\n * U+F8B7 : not included in any glyphset definition\n * U+F8B8 : not included in any glyphset definition\n * U+F8B9 : not included in any glyphset definition\n * U+F8BA : not included in any glyphset definition\n * U+F8BB : not included in any glyphset definition\n * U+F8BC : not included in any glyphset definition\n * U+F8BD : not included in any glyphset definition\n * U+F8BE : not included in any glyphset definition\n * U+F8BF : not included in any glyphset definition\n * U+F8C0 : not included in any glyphset definition\n * U+F8C1 : not included in any glyphset definition\n * U+F8C2 : not included in any glyphset definition\n * U+F8C3 : not included in any glyphset definition\n * U+F8C4 : not included in any glyphset definition\n * U+F8C5 : not included in any glyphset definition\n * U+F8C6 : not included in any glyphset definition\n * U+F8C7 : not included in any glyphset definition\n * U+F8C8 : not included in any glyphset definition\n * U+F8C9 : not included in any glyphset definition\n * U+F8CA : not included in any glyphset definition\n * U+F8CB : not included in any glyphset definition\n * U+F8CC : not included in any glyphset definition\n * U+F8CD : not included in any glyphset definition\n * U+F8CE : not included in any glyphset definition\n * U+F8CF : not included in any glyphset definition\n * U+F8D0 : not included in any glyphset definition\n * U+F8D1 : not included in any glyphset definition\n * U+F8D2 : not included in any glyphset definition\n * U+F8D3 : not included in any glyphset definition\n * U+F8D4 : not included in any glyphset definition\n * U+F8D5 : not included in any glyphset definition\n * U+F8D6 : not included in any glyphset definition\n * U+F8D7 : not included in any glyphset definition\n * U+F8D8 : not included in any glyphset definition\n * U+F8D9 : not included in any glyphset definition\n * U+F8DA : not included in any glyphset definition\n * U+F8DB : not included in any glyphset definition\n * U+F8DC : not included in any glyphset definition\n * U+F8DD : not included in any glyphset definition\n * U+F8DE : not included in any glyphset definition\n * U+F8DF : not included in any glyphset definition\n * U+F8E0 : not included in any glyphset definition\n * U+F8E1 : not included in any glyphset definition\n * U+F8E2 : not included in any glyphset definition\n * U+F8E3 : not included in any glyphset definition\n * U+F8E4 : not included in any glyphset definition\n * U+F8E5 : not included in any glyphset definition\n * U+F8E6 : not included in any glyphset definition\n * U+F8E7 : not included in any glyphset definition\n * U+F8E8 : not included in any glyphset definition\n * U+F8E9 : not included in any glyphset definition\n * U+F8EA : not included in any glyphset definition\n * U+F8EB : not included in any glyphset definition\n * U+F8EC : not included in any glyphset definition\n * U+F8ED : not included in any glyphset definition\n * U+F8EE : not included in any glyphset definition\n * U+F8EF : not included in any glyphset definition\n * U+F8F0 : not included in any glyphset definition\n * U+F8F1 : not included in any glyphset definition\n * U+F8F2 : not included in any glyphset definition\n * U+F8F3 : not included in any glyphset definition\n * U+F8F4 : not included in any glyphset definition\n * U+F8F5 : not included in any glyphset definition\n * U+F8F6 : not included in any glyphset definition\n * U+F8F7 : not included in any glyphset definition\n * U+F8F8 : not included in any glyphset definition\n * U+F8F9 : not included in any glyphset definition\n * U+F8FA : not included in any glyphset definition\n * U+F8FB : not included in any glyphset definition\n * U+F8FC : not included in any glyphset definition\n * U+F8FD : not included in any glyphset definition\n * U+F8FE : not included in any glyphset definition\n * U+F8FF : not included in any glyphset definition\n * U+FB00 LATIN SMALL LIGATURE FF: not included in any glyphset definition\n * U+FB01 LATIN SMALL LIGATURE FI: not included in any glyphset definition\n * U+FB02 LATIN SMALL LIGATURE FL: not included in any glyphset definition\n * U+FB03 LATIN SMALL LIGATURE FFI: not included in any glyphset definition\n * U+FB04 LATIN SMALL LIGATURE FFL: not included in any glyphset definition\n * U+FE00 VARIATION SELECTOR-1: try adding phags-pa\n * U+FE01 VARIATION SELECTOR-2: not included in any glyphset definition\n * U+FE02 VARIATION SELECTOR-3: not included in any glyphset definition\n * U+FE03 VARIATION SELECTOR-4: not included in any glyphset definition\n * U+FE04 VARIATION SELECTOR-5: not included in any glyphset definition\n * U+FE05 VARIATION SELECTOR-6: not included in any glyphset definition\n * U+FE06 VARIATION SELECTOR-7: not included in any glyphset definition\n * U+FE07 VARIATION SELECTOR-8: not included in any glyphset definition\n * U+FE08 VARIATION SELECTOR-9: not included in any glyphset definition\n * U+FE09 VARIATION SELECTOR-10: not included in any glyphset definition\n * U+FE0A VARIATION SELECTOR-11: not included in any glyphset definition\n * U+FE0B VARIATION SELECTOR-12: not included in any glyphset definition\n * U+FE0C VARIATION SELECTOR-13: not included in any glyphset definition\n * U+FE0D VARIATION SELECTOR-14: not included in any glyphset definition\n * U+FE0E VARIATION SELECTOR-15: not included in any glyphset definition\n * U+FE0F VARIATION SELECTOR-16: not included in any glyphset definition\n * U+FFF9 INTERLINEAR ANNOTATION ANCHOR: not included in any glyphset definition\n * U+FFFA INTERLINEAR ANNOTATION SEPARATOR: not included in any glyphset definition\n * U+FFFC OBJECT REPLACEMENT CHARACTER: not included in any glyphset definition\n * U+F0010 : not included in any glyphset definition\n * U+F0011 : not included in any glyphset definition\n * U+F0023 : not included in any glyphset definition\n * U+F0031 : not included in any glyphset definition\n * U+F0032 : not included in any glyphset definition\n * U+F003D : not included in any glyphset definition\n * U+F0047 : not included in any glyphset definition\n * U+F0052 : not included in any glyphset definition\n * U+F0062 : not included in any glyphset definition\n * U+F006D : not included in any glyphset definition\n * U+F0083 : not included in any glyphset definition\n * U+F0093 : not included in any glyphset definition\n * U+F00A2 : not included in any glyphset definition\n * U+F00B2 : not included in any glyphset definition\n * U+F00C3 : not included in any glyphset definition\n * U+F00CD : not included in any glyphset definition\n * U+F0105 : not included in any glyphset definition\n * U+F010C : not included in any glyphset definition\n * U+F011F : not included in any glyphset definition\n * U+F0120 : not included in any glyphset definition\n * U+F0140 : not included in any glyphset definition\n * U+F0162 : not included in any glyphset definition\n * U+F0193 : not included in any glyphset definition\n * U+F0197 : not included in any glyphset definition\n * U+F01A5 : not included in any glyphset definition\n * U+F01AD : not included in any glyphset definition\n * U+F01C8 : not included in any glyphset definition\n * U+F01C9 : not included in any glyphset definition\n * U+F01CD : not included in any glyphset definition\n * U+F01CE : not included in any glyphset definition\n * U+F01D0 : not included in any glyphset definition\n * U+F01D6 : not included in any glyphset definition\n * U+F01D8 : not included in any glyphset definition\n * U+F01D9 : not included in any glyphset definition\n * U+F01DA : not included in any glyphset definition\n * U+F01DB : not included in any glyphset definition\n * U+F01DC : not included in any glyphset definition\n * U+F01E0 : not included in any glyphset definition\n * U+F01FB : not included in any glyphset definition\n * U+F02DC : not included in any glyphset definition\n * U+F02EF : not included in any glyphset definition\n * U+F02FF : not included in any glyphset definition\n * U+F030F : not included in any glyphset definition\n * U+F031A : not included in any glyphset definition\n * U+F0337 : not included in any glyphset definition\n * U+F034D : not included in any glyphset definition\n * U+F0360 : not included in any glyphset definition\n * U+F0363 : not included in any glyphset definition\n * U+F037A : not included in any glyphset definition\n * U+F038A : not included in any glyphset definition\n * U+F0399 : not included in any glyphset definition\n * U+F03AA : not included in any glyphset definition\n * U+F03B4 : not included in any glyphset definition\n * U+F03C2 : not included in any glyphset definition\n * U+F03E7 : not included in any glyphset definition\n * U+F03F0 : not included in any glyphset definition\n * U+F040E : not included in any glyphset definition\n * U+F0458 : not included in any glyphset definition\n * U+F0467 : not included in any glyphset definition\n * U+F0476 : not included in any glyphset definition\n * U+F047D : not included in any glyphset definition\n * U+F047F : not included in any glyphset definition\n * U+F0497 : not included in any glyphset definition\n * U+F04A2 : not included in any glyphset definition\n * U+F04A8 : not included in any glyphset definition\n * U+F04BC : not included in any glyphset definition\n * U+F04F0 : not included in any glyphset definition\n * U+F04F2 : not included in any glyphset definition\n * U+F050C : not included in any glyphset definition\n * U+F050D : not included in any glyphset definition\n * U+F0533 : not included in any glyphset definition\n * U+F0539 : not included in any glyphset definition\n * U+F0570 : not included in any glyphset definition\n * U+F059E : not included in any glyphset definition\n * U+F05A9 : not included in any glyphset definition\n * U+F05BD : not included in any glyphset definition\n * U+F0604 : not included in any glyphset definition\n * U+F0664 : not included in any glyphset definition\n * U+F0672 : not included in any glyphset definition\n * U+F067B : not included in any glyphset definition\n * U+F0686 : not included in any glyphset definition\n * U+F0699 : not included in any glyphset definition\n * U+F06A8 : not included in any glyphset definition\n * U+F06AA : not included in any glyphset definition\n * U+F06BA : not included in any glyphset definition\n * U+F06C5 : not included in any glyphset definition\n * U+F06CC : not included in any glyphset definition\n * U+F06FF : not included in any glyphset definition\n * U+F0712 : not included in any glyphset definition\n * U+F0723 : not included in any glyphset definition\n * U+F072E : not included in any glyphset definition\n * U+F0731 : not included in any glyphset definition\n * U+F076D : not included in any glyphset definition\n * U+F0795 : not included in any glyphset definition\n * U+F07AB : not included in any glyphset definition\n * U+F07C9 : not included in any glyphset definition\n * U+F07CD : not included in any glyphset definition\n * U+F07DF : not included in any glyphset definition\n * U+F07F1 : not included in any glyphset definition\n * U+F07FB : not included in any glyphset definition\n * U+F07FF : not included in any glyphset definition\n * U+F0814 : not included in any glyphset definition\n * U+F0815 : not included in any glyphset definition\n * U+F0830 : not included in any glyphset definition\n * U+F0848 : not included in any glyphset definition\n * U+F086F : not included in any glyphset definition\n * U+F0877 : not included in any glyphset definition\n * U+F089F : not included in any glyphset definition\n * U+F08AD : not included in any glyphset definition\n * U+F08B7 : not included in any glyphset definition\n * U+F08C5 : not included in any glyphset definition\n * U+F08CA : not included in any glyphset definition\n * U+F08DB : not included in any glyphset definition\n * U+F08F0 : not included in any glyphset definition\n * U+F092C : not included in any glyphset definition\n * U+F0950 : not included in any glyphset definition\n * U+F0959 : not included in any glyphset definition\n * U+F0966 : not included in any glyphset definition\n * U+F097B : not included in any glyphset definition\n * U+F0980 : not included in any glyphset definition\n * U+F0981 : not included in any glyphset definition\n * U+F0988 : not included in any glyphset definition\n * U+F0991 : not included in any glyphset definition\n * U+F099B : not included in any glyphset definition\n * U+F09B0 : not included in any glyphset definition\n * U+F09C7 : not included in any glyphset definition\n * U+F09E1 : not included in any glyphset definition\n * U+F09E8 : not included in any glyphset definition\n * U+F09FA : not included in any glyphset definition\n * U+F0A04 : not included in any glyphset definition\n * U+F0A0F : not included in any glyphset definition\n * U+F0A3A : not included in any glyphset definition\n * U+F0A55 : not included in any glyphset definition\n * U+F0A70 : not included in any glyphset definition\n * U+F0A8C : not included in any glyphset definition\n * U+F0A97 : not included in any glyphset definition\n * U+F0AEA : not included in any glyphset definition\n * U+F0AF3 : not included in any glyphset definition\n * U+F0B20 : not included in any glyphset definition\n * U+F0B34 : not included in any glyphset definition\n * U+F0B40 : not included in any glyphset definition\n * U+F0B42 : not included in any glyphset definition\n * U+F0B4C : not included in any glyphset definition\n * U+F0B69 : not included in any glyphset definition\n * U+F0B6E : not included in any glyphset definition\n * U+F0B76 : not included in any glyphset definition\n * U+F0B8C : not included in any glyphset definition\n * U+F0BA3 : not included in any glyphset definition\n * U+F0BA4 : not included in any glyphset definition\n * U+F0BB0 : not included in any glyphset definition\n * U+F0BE8 : not included in any glyphset definition\n * U+F0C0A : not included in any glyphset definition\n * U+F0C12 : not included in any glyphset definition\n * U+F0C2F : not included in any glyphset definition\n * U+F0C3E : not included in any glyphset definition\n * U+F0C48 : not included in any glyphset definition\n * U+F0C4A : not included in any glyphset definition\n * U+F0C95 : not included in any glyphset definition\n * U+F0CA8 : not included in any glyphset definition\n * U+F0CBE : not included in any glyphset definition\n * U+F0CDB : not included in any glyphset definition\n * U+F0CE5 : not included in any glyphset definition\n * U+F0D10 : not included in any glyphset definition\n * U+F0D26 : not included in any glyphset definition\n * U+F0D32 : not included in any glyphset definition\n * U+F0D3F : not included in any glyphset definition\n * U+F0D57 : not included in any glyphset definition\n * U+F0D64 : not included in any glyphset definition\n * U+F0D74 : not included in any glyphset definition\n * U+F0D82 : not included in any glyphset definition\n * U+F0D84 : not included in any glyphset definition\n * U+F0D85 : not included in any glyphset definition\n * U+F0DA6 : not included in any glyphset definition\n * U+F0DB0 : not included in any glyphset definition\n * U+F0DF3 : not included in any glyphset definition\n * U+F0DFF : not included in any glyphset definition\n * U+F0E0F : not included in any glyphset definition\n * U+F0E1A : not included in any glyphset definition\n * U+F0E1F : not included in any glyphset definition\n * U+F0E25 : not included in any glyphset definition\n * U+F0E3F : not included in any glyphset definition\n * U+F0E4A : not included in any glyphset definition\n * U+F0E51 : not included in any glyphset definition\n * U+F0E67 : not included in any glyphset definition\n * U+F0E79 : not included in any glyphset definition\n * U+F0E88 : not included in any glyphset definition\n * U+F0E93 : not included in any glyphset definition\n * U+F0EA0 : not included in any glyphset definition\n * U+F0EAF : not included in any glyphset definition\n * U+F0ED1 : not included in any glyphset definition\n * U+F0F1F : not included in any glyphset definition\n * U+F0F3E : not included in any glyphset definition\n * U+F0F4D : not included in any glyphset definition\n * U+F0FBB : not included in any glyphset definition\n * U+F0FDF : not included in any glyphset definition\n * U+F0FF9 : not included in any glyphset definition\n * U+F101B : not included in any glyphset definition\n * U+F106F : not included in any glyphset definition\n * U+F1077 : not included in any glyphset definition\n * U+F1078 : not included in any glyphset definition\n * U+F1083 : not included in any glyphset definition\n * U+F10A2 : not included in any glyphset definition\n * U+F10AA : not included in any glyphset definition\n * U+F10AE : not included in any glyphset definition\n * U+F10D5 : not included in any glyphset definition\n * U+F10DD : not included in any glyphset definition\n * U+F118E : not included in any glyphset definition\n * U+F11F2 : not included in any glyphset definition\n * U+F11F7 : not included in any glyphset definition\n * U+F11FB : not included in any glyphset definition\n * U+F1237 : not included in any glyphset definition\n * U+F1273 : not included in any glyphset definition\n * U+F1290 : not included in any glyphset definition\n * U+F12BC : not included in any glyphset definition\n * U+F12BD : not included in any glyphset definition\n * U+F12FE : not included in any glyphset definition\n * U+F131E : not included in any glyphset definition\n * U+F1337 : not included in any glyphset definition\n * U+F134C : not included in any glyphset definition\n * U+F138F : not included in any glyphset definition\n * U+F13A0 : not included in any glyphset definition\n * U+F13D7 : not included in any glyphset definition\n * U+F13D9 : not included in any glyphset definition\n * U+F13F1 : not included in any glyphset definition\n * U+F140D : not included in any glyphset definition\n * U+F1419 : not included in any glyphset definition\n * U+F1425 : not included in any glyphset definition\n * U+F1431 : not included in any glyphset definition\n * U+F1452 : not included in any glyphset definition\n * U+F1483 : not included in any glyphset definition\n * U+F1492 : not included in any glyphset definition\n * U+F14AC : not included in any glyphset definition\n * U+F14B8 : not included in any glyphset definition\n * U+F14C2 : not included in any glyphset definition\n * U+F14D2 : not included in any glyphset definition\n * U+F15BC : not included in any glyphset definition\n\nOr you can add the above codepoints to one of the subsets supported by the font: `latin`, `menu`, `tibetan` [code: unreachable-subsetting]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that all encoded glyphs in the font are covered by a\n        subset declared in the METADATA.pb. Google Fonts splits the font into\n        a set of subset fonts based on the contents of the `subsets` field and\n        the subset definitions in the `glyphsets` repository.\n\n        Any encoded glyphs which are not by any of these subset definitions\n        will not be served in the subsetted fonts, and so will be unreachable to\n        the end user.\n    ",
                    "result": "WARN",
                    "severity": 2
                },
                {
                    "description": "Substitute copyright, registered and trademark symbols in name table entries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/unwanted_chars>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "NAMEID #0 contains symbols that should be replaced by '(c)'. [code: unwanted-chars]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "NAMEID #0 contains symbols that should be replaced by '(c)'. [code: unwanted-chars]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Check the OS/2 usWeightClass is appropriate for the font's best SubFamily name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/usweightclass>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass is good",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects variable fonts, static ttfs and static otfs to have\n        differing OS/2 usWeightClass values.\n\n        - For Variable Fonts, Thin-Black must be 100-900\n\n        - For static ttfs, Thin-Black can be 100-900 or 250-900\n\n        - For static otfs, Thin-Black must be 250-900\n\n        If static otfs are set lower than 250, text may appear blurry in\n        legacy Windows applications.\n\n        Glyphsapp users can change the usWeightClass value of an instance by adding\n        a 'weightClass' customParameter.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has a license.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/has_license>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Found license at '/Users/simon/others-repos/fonts/ofl/uchen/OFL.txt'",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check license file has good copyright string.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "First line in license file is:\n\n\"this font software is copyright (c) 2006, christopher j fynn\"\n\nwhich does not match the expected format, similar to:\n\n\"Copyright 2022 The Familyname Project Authors (git url)\" [code: bad-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An OFL.txt file's first line should be the font copyright e.g:\n        \"Copyright 2019 The Montserrat Project Authors\n        (https://github.com/julietaula/montserrat)\"\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Check OFL body text is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_body_text>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The OFL.txt body text is incorrect. Please use https://github.com/googlefonts/Unified-Font-Repository/blob/main/OFL.txt as a template. You should only modify the first line. [code: incorrect-ofl-body-text]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check OFL body text is correct.\n        Often users will accidently delete parts of the body text.\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Check copyright namerecords match license file.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "License file OFL.txt exists but NameID 13 (LICENSE DESCRIPTION) value on platform 1 (MACINTOSH) is not specified for that. Value was: \"Copyright (c) 2010, Dzongkha Development Commission (ddc@dzongkha.gov.bt),\r\nwith Reserved Font Name DDC Uchen.\r\n\r\nFont created by Christopher John Fynn\r\nfor the Dzongkha Development Commission\r\n\r\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\r\nThis license is copied below, and is also available with a FAQ at:\r\nhttps://scripts.sil.org/OFL\r\n\r\n-----------------------------------------------------------\r\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\r\n-----------------------------------------------------------\r\n\r\nPREAMBLE\r\nThe goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others.\r\n\r\nThe OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded,  redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.\r\n\r\nDEFINITIONS\r\n\"Font Software\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation.\r\n\r\n\"Reserved Font Name\" refers to any names specified as such after the copyright statement(s). \r\n\r\n\"Original Version\" refers to the collection of Font Software components as distributed by the Copyright Holder(s).\r\n\r\n\"Modified Version\" refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment.\r\n\r\n\"Author\" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.\r\n\r\nPERMISSION & CONDITIONS\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions:\r\n\r\n1) Neither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself. \r\n\r\n2) Original or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.\r\n\r\n3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users.\r\n\r\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission.\r\n\r\n5) The Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created\r\nusing the Font Software.\r\n\r\nTERMINATION\r\nThis license becomes null and void if any of the above conditions are not met.\r\n\r\nDISCLAIMER\r\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\" Must be changed to \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\" [code: wrong]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "License file OFL.txt exists but NameID 13 (LICENSE DESCRIPTION) value on platform 3 (WINDOWS) is not specified for that. Value was: \"Copyright (c) 2010, Dzongkha Development Commission (ddc@dzongkha.gov.bt),\r\nwith Reserved Font Name DDC Uchen.\r\n\r\nFont created by Christopher John Fynn\r\nfor the Dzongkha Development Commission\r\n\r\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\r\nThis license is copied below, and is also available with a FAQ at:\r\nhttps://scripts.sil.org/OFL\r\n\r\n-----------------------------------------------------------\r\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\r\n-----------------------------------------------------------\r\n\r\nPREAMBLE\r\nThe goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others.\r\n\r\nThe OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded,  redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.\r\n\r\nDEFINITIONS\r\n\"Font Software\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation.\r\n\r\n\"Reserved Font Name\" refers to any names specified as such after the copyright statement(s). \r\n\r\n\"Original Version\" refers to the collection of Font Software components as distributed by the Copyright Holder(s).\r\n\r\n\"Modified Version\" refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment.\r\n\r\n\"Author\" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.\r\n\r\nPERMISSION & CONDITIONS\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions:\r\n\r\n1) Neither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself. \r\n\r\n2) Original or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.\r\n\r\n3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users.\r\n\r\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission.\r\n\r\n5) The Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created\r\nusing the Font Software.\r\n\r\nTERMINATION\r\nThis license becomes null and void if any of the above conditions are not met.\r\n\r\nDISCLAIMER\r\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\" Must be changed to \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\" [code: wrong]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "For now we're still accepting http URLs, but you should consider using https instead.\n [code: http]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known licensing description must be provided in the NameID 14\n        (LICENSE DESCRIPTION) entries of the name table.\n\n        The source of truth for this check (to determine which license is in use) is\n        a file placed side-by-side to your font project including the licensing terms.\n\n        Depending on the chosen license, one of the following string snippets is\n        expected to be found on the NameID 13 (LICENSE DESCRIPTION) entries of the\n        name table:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set\n        of legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "License URL matches License text on name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license_url>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Could not infer the font license. Please ensure NameID 13 (LICENSE DESCRIPTION) is properly set.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known license URL must be provided in the NameID 14 (LICENSE INFO URL)\n        entry of the name table.\n\n        The source of truth for this check is the licensing text found on the NameID 13\n        entry (LICENSE DESCRIPTION).\n\n        The string snippets used for detecting licensing terms are:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set of\n        legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Description strings in the name table must not exceed 200 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/description_max_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All description name records have reasonably small lengths.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An old FontLab version had a bug which caused it to store copyright notices\n        in nameID 10 entries.\n\n        In order to detect those and distinguish them from actual legitimate usage of\n        this name table entry, we expect that such strings do not exceed a reasonable\n        length of 200 chars.\n\n        Longer strings are likely instances of the FontLab bug.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Show hinting filesize impact.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/hinting_impact>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Hinting filesize impact:\n\n |               | /Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf          |\n |:------------- | ---------------:|\n | Dehinted Size | 834.6kb |\n | Hinted Size   | 839.0kb   |\n | Increase      | 4.4kb      |\n | Change        | 0.5 %  |\n [code: size-impact]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check is merely informative, displaying and useful comparison of filesizes\n        of hinted versus unhinted font files.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Ensure files are not too large.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/file_size>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font had a reasonable file size",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Serving extremely large font files on Google Fonts causes usability issues.\n        This check ensures that file sizes are reasonable.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Version format is correct in 'name' table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/version_format>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version format in NAME table entries is correct.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has ttfautohint params?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/has_ttfautohint_params>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "Font has old ttfautohint applied?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/old_ttfautohint>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Could not detect which version of ttfautohint was used in this font. It is typically specified as a comment in the font version entries of the 'name' table. Such font version strings are currently: ['Version 1.000 preliminary', 'Version 1.000 preliminary'] [code: version-not-detected]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check if font has been hinted with an outdated version of ttfautohint.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "EPAR table present in font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/epar>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "EPAR table not present in font. To learn more see https://github.com/fonttools/fontbakery/issues/818 [code: lacks-EPAR]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The EPAR table is/was a way of expressing common licensing permissions and\n        restrictions in metadata; while almost nothing supported it, Dave Crossland\n        wonders that adding it to everything in Google Fonts could help make it\n        more popular.\n\n        More info is available at:\n        https://davelab6.github.io/epar/\n    ",
                    "result": "INFO",
                    "severity": 1
                },
                {
                    "description": "Is the Grid-fitting and Scan-conversion Procedure ('gasp') table set to optimize rendering?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gasp>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "These are the ppm ranges declared on the gasp table:\n\nPPM <= 65535:\n\tflag = 0x0F\n\t- Use grid-fitting\n\t- Use grayscale rendering\n\t- Use gridfitting with ClearType symmetric smoothing\n\t- Use smoothing along multiple axes with ClearType\u00ae\n [code: ranges]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "The 'gasp' table is correctly set, with one gaspRange:value of 0xFFFF:0x0F.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Traditionally version 0 'gasp' tables were set so that font sizes below 8 ppem\n        had no grid fitting but did have antialiasing. From 9-16 ppem, just grid\n        fitting.\n        And fonts above 17ppem had both antialiasing and grid fitting toggled on.\n        The use of accelerated graphics cards and higher resolution screens make this\n        approach obsolete. Microsoft's DirectWrite pushed this even further with much\n        improved rendering built into the OS and apps.\n\n        In this scenario it makes sense to simply toggle all 4 flags ON for all font\n        sizes.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Make sure family name does not begin with a digit.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/familyname_first_char>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font family name first character is not a digit.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Font family names which start with a numeral are often not discoverable\n        in Windows applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there non-ASCII characters in ASCII-only NAME table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/ascii_only_entries>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Bad string at [nameID 0, 'mac_roman']: 'b'Font designed by Christopher J. Fynn. \\r\\nCopyright &#169; 2010 by Dzongkha Development Commission.'' [code: bad-string]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Bad string at [nameID 0, 'utf_16_be']: 'b'Font designed by Christopher J. Fynn. \\r\\nCopyright &#169; 2010 by Dzongkha Development Commission.'' [code: bad-string]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "There are 2 strings containing non-ASCII characters in the ASCII-only NAME table entries. [code: non-ascii-strings]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec requires ASCII for the POSTSCRIPT_NAME (nameID 6).\n\n        For COPYRIGHT_NOTICE (nameID 0) ASCII is required because that string should be\n        the same in CFF fonts which also have this requirement in the OpenType spec.\n\n        Note:\n        A common place where we find non-ASCII strings is on name table entries\n        with NameID > 18, which are expressly for localising the ASCII-only IDs\n        into Hindi / Arabic / etc.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "METADATA.pb: check if fonts field only has unique \"full_name\" values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_full_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique \"full_name\" values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only contains unique style:weight pairs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_weight_style_pairs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique style:weight pairs.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb license is \"APACHE2\", \"UFL\" or \"OFL\"?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/license>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font license is declared in METADATA.pb as \"OFL\"",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb should contain at least \"menu\" and \"latin\" subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/menu_and_latin>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb contains \"menu\" and \"latin\" subsets.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb subsets should be alphabetically ordered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/subsets_order>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb subsets are sorted in alphabetical order.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check METADATA.pb includes production subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/includes_production_subsets>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No missing subsets",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb file includes the same subsets as the family in production.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice is the same in all fonts?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright is consistent across family",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check that METADATA.pb family values are all the same.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/familyname>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Family name is the same in all metadata \"fonts\" items.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: According to Google Fonts standards, families should have a Regular style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/has_regular>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family has a Regular style.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Regular should be 400.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/regular_is_400>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Regular has weight = 400.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.name field matches family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family name \"Uchen\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.post_script_name matches postscript name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/post_script_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Postscript name \"Uchen-Regular\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name value matches fullname declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/full_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font fullname \"Uchen Regular\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "Font fullname \"Uchen Regular\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name value should be same as the family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/font_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK: Family name \"Uchen\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OK: Family name \"Uchen\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures consistency between the font name declared on the name table\n        and the contents of the METADATA.pb file.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name and font.post_script_name fields have equivalent values ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_fullname_postscript>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"full_name\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename and font.post_script_name fields have equivalent values?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_filename_postscript>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"filename\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.name field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_full_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Uchen\" in \"Uchen Regular\")",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Uchen\" in \"Uchen Regular\")",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_filename_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb filename field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.post_script_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_post_script_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check name ID 25 to end with \"Italic\" for Italic VFs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_nameid25>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Not an Italic VF.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Due to a bug in (at least) Adobe Indesign, name ID 25\n        needs to be different for Italic VFs than their Upright counterparts.\n        Google Fonts chooses to append \"Italic\" here.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright notices match canonical pattern in METADATA.pb",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Copyright notices should match a pattern similar to:\n \"Copyright 2020 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"font designed by christopher j. fynn. copyright \u00a9 2010 by dzongkha development commission.\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The expected pattern for the copyright string adheres to the following rules:\n\n        * It must say \"Copyright\" followed by a 4 digit year (optionally followed by\n          a hyphen and another 4 digit year)\n\n        * Then it must say \"The <familyname> Project Authors\"\n\n        * And within parentheses, a URL for a git repository must be provided\n\n        * The check is case insensitive and does not validate whether the familyname\n          is correct, even though we'd expect it is (and we may soon update the check\n          to validate that aspect as well!)\n\n\n        Here is an example of a valid copyright string:\n\n        \"Copyright 2017 The Archivo Black Project Authors\n         (https://github.com/Omnibus-Type/ArchivoBlack)\"\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notices match canonical pattern in fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Font designed by Christopher J. Fynn. \r\nCopyright \u00a9 2010 by Dzongkha Development Commission.\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Font designed by Christopher J. Fynn. \r\nCopyright \u00a9 2010 by Dzongkha Development Commission.\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notice on METADATA.pb should not contain 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/reserved_font_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb copyright field does not contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice shouldn't exceed 500 chars.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright_max_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright notice string is shorter than 500 chars.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font filenames match font.filename entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/filenames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filenames in METADATA.pb look good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Note:\n        This check only looks for files in the current directory.\n\n        Font files in subdirectories are checked by these other two checks:\n         - com.google.fonts/check/metadata/undeclared_fonts\n         - com.google.fonts/check/repo/vf_has_static_fonts\n\n        We may want to merge them all into a single check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.style \"italic\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/italic_style>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check only applies to italic fonts.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "METADATA.pb font.style \"normal\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/normal_style>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.style \"normal\" matches font internals.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name and font.full_name fields match the values declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_and_full_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb familyname and fullName fields match corresponding name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check font name is the same as family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_name_familyname>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name is the same as family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check that font weight has a canonical value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_weight_value>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font weight has a canonical value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check METADATA.pb font weights are correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/os2_weightclass>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass or wght axis value matches weight specified at METADATA.pb",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb font weights are correct.\n\n        For static fonts, the metadata weight should be the same as the static font's\n        OS/2 usWeightClass.\n\n        For variable fonts, the weight value should be 400 if the font's wght axis range\n        includes 400, otherwise it should be the value closest to 400.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb weight matches postScriptName for static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_weight_postscript>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Weight value matches postScriptName.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font styles are named canonically?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_style_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font styles are named canonically.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check URL on copyright string is the same as in repository_url field.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_repo_urls>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes, perhaps due to copy-pasting, projects may declare different URLs\n        between the font.coyright and the family.sources.repository_url fields.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check for primary_script",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/primary_script>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: primary_script field should be 'Tibt' but is missing. [code: missing-primary-script]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Try to guess font's primary script and see if that's set in METADATA.pb.\n        This is an educated guess based on the number of glyphs per script in the font\n        and should be taken with caution.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Stricter unitsPerEm criteria for Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem_strict>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font em size is good (unitsPerEm = 1024).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though the OpenType spec allows unitsPerEm to be any value between 16\n        and 16384, the Google Fonts project aims at a narrower set of reasonable values.\n\n        The spec suggests usage of powers of two in order to get some performance\n        improvements on legacy renderers, so those values are acceptable.\n\n        But values of 500 or 1000 are also acceptable, with the added benefit that it\n        makes upm math easier for designers, while the performance hit of not using a\n        power of two is most likely negligible nowadays.\n\n        Additionally, values above 2048 would likely result in unreasonable\n        filesize increases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Glyphs are similiar to Google Fonts version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/production_glyphs_similarity>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs are similar in comparison to the Google Fonts version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking direction of slnt axis angles",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/slant_direction>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'slnt' axis values are defined as negative values for a clockwise (right)\n        lean, and positive values for counter-clockwise lean. This is counter-intuitive\n        for many designers who are used to think of a positive slant as a lean to\n        the right.\n\n        This check ensures that the slant axis direction is consistent with the specs.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font names are correct",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font names are good:\n\n| nameID | current | expected |\n| :--- | :--- | :--- |\n| Family Name | Uchen | Uchen |\n| Subfamily Name | Regular | Regular |\n| Full Name | Uchen Regular | Uchen Regular |\n| Poscript Name | Uchen-Regular | Uchen-Regular |",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has several rules which need to be adhered to when\n        setting a font's name table. Please read:\n        https://googlefonts.github.io/gf-guide/statics.html#supported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#style-linking\n        https://googlefonts.github.io/gf-guide/statics.html#unsupported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#single-weight-families\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright field for this font on METADATA.pb matches all copyright notice entries on the name table ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright field for this font on METADATA.pb (\"Font designed by Christopher J. Fynn. Copyright \u00a9 2010 by Dzongkha Development Commission.\") differs from a copyright notice entry on the name table: \"Font designed by Christopher J. Fynn. \r\nCopyright \u00a9 2010 by Dzongkha Development Commission.\" [code: mismatch]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Copyright field for this font on METADATA.pb (\"Font designed by Christopher J. Fynn. Copyright \u00a9 2010 by Dzongkha Development Commission.\") differs from a copyright notice entry on the name table: \"Font designed by Christopher J. Fynn. \r\nCopyright \u00a9 2010 by Dzongkha Development Commission.\" [code: mismatch]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Font has all mandatory 'name' table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/mandatory_entries>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains values for all mandatory name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Length of copyright notice must not exceed 500 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/copyright_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All copyright notice name entries on the 'name' table are shorter than 500 characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is an arbitrary max length for the copyright notice field of the name\n        table. We simply don't want such notices to be too long. Typically such notices\n        are actually much shorter than this with a length of roughly 70 or 80\n        characters.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check for font-v versioning.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fontv>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version string is: \"Version 1.000 preliminary\"\nThe version string must ideally include a git commit hash and either a \"dev\" or a \"release\" suffix such as in the example below:\n\"Version 1.3; git-0d08353-release\" [code: bad-format]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The git sha1 tagging and dev/release features of Source Foundry `font-v` tool\n        are awesome and we would love to consider upstreaming the approach into\n        fontmake someday. For now we only emit an INFO if a given font does not yet\n        follow the experimental versioning style, but at some point we may start\n        enforcing it.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Check glyphs do not have components which are themselves components.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_nested_components>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs do not contain nested components.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been bugs rendering variable fonts with nested components.\n        Additionally, some static fonts with nested components have been reported\n        to have rendering and printing issues.\n\n        For more info, see:\n        * https://github.com/fonttools/fontbakery/issues/2961\n        * https://github.com/arrowtype/recursive/issues/412\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a static ttf can be generated from a variable font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/generate_static>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts may serve static fonts which have been generated from variable\n        fonts. This test will attempt to generate a static ttf using fontTool's\n        varLib mutator.\n\n        The target font will be the mean of each axis e.g:\n\n        ## VF font axes\n\n        - min weight, max weight = 400, 800\n\n        - min width, max width = 50, 100\n\n        ## Target Instance\n\n        - weight = 600\n\n        - width = 75\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that variable fonts have an HVAR table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/has_HVAR>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Not having a HVAR table can lead to costly text-layout operations on some\n        platforms, which we want to avoid.\n\n        So, all variable fonts on the Google Fonts collection should have an HVAR\n        with valid values.\n\n        More info on the HVAR table can be found at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otvaroverview#variation-data-tables-and-miscellaneous-requirements\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Font enables smart dropout control in \"prep\" table instructions?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/smart_dropout>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'prep' table contains instructions enabling smart dropout control.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This setup is meant to ensure consistent rendering quality for fonts across\n        all devices (with different rendering/hinting capabilities).\n\n        Below is the snippet of instructions we expect to see in the fonts:\n        B8 01 FF    PUSHW 0x01FF\n        85          SCANCTRL (unconditinally turn on\n                              dropout control mode)\n        B0 04       PUSHB 0x04\n        8D          SCANTYPE (enable smart dropout control)\n\n        \"Smart dropout control\" means activating rules 1, 2 and 5:\n        Rule 1: If a pixel's center falls within the glyph outline,\n                that pixel is turned on.\n        Rule 2: If a contour falls exactly on a pixel's center,\n                that pixel is turned on.\n        Rule 5: If a scan line between two adjacent pixel centers\n                (either vertical or horizontal) is intersected\n                by both an on-Transition contour and an off-Transition\n                contour and neither of the pixels was already turned on\n                by rules 1 and 2, turn on the pixel which is closer to\n                the midpoint between the on-Transition contour and\n                off-Transition contour. This is \"Smart\" dropout control.\n\n        For more detailed info (such as other rules not enabled in this snippet),\n        please refer to the TrueType Instruction Set documentation.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "There must not be VTT Talk sources in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vttclean>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no tables with VTT Talk sources embedded in the font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The goal here is to reduce filesizes and improve pageloading when dealing\n        with webfonts.\n\n        The VTT Talk sources are not necessary at runtime and endup being just dead\n        weight when left embedded in the font binaries. The sources should be kept on\n        the project files but stripped out when building release binaries.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there unwanted Apple tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/aat>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no unwanted AAT tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Apple's TrueType reference manual [1] describes SFNT tables not in the\n        Microsoft OpenType specification [2] and these can sometimes sneak into final\n        release files, but Google Fonts should only have OpenType tables.\n\n        [1] https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6.html\n        [2] https://docs.microsoft.com/en-us/typography/opentype/spec/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a font's STAT table contains compulsory Axis Values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's STAT table contains compulsory Axis Values which exist\n        in the Google Fonts Axis Registry.\n\n        We cannot determine what Axis Values the user will set for axes such as\n        opsz, GRAD since these axes are unique for each font so we'll skip them.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_instances>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's fvar instance coordinates comply with our guidelines:\n        https://googlefonts.github.io/gf-guide/variable.html#fvar-instances\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All name entries referenced by fvar instances exist on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_name_entries>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to make sure that all name entries referenced\n        by variable font instances do exist in the name table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "PPEM must be an integer on hinted fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/integer_ppem_if_hinted>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_hinted",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Hinted fonts must have head table flag bit 3 set.\n\n        Per https://docs.microsoft.com/en-us/typography/opentype/spec/head,\n        bit 3 of Head::flags decides whether PPEM should be rounded. This bit should\n        always be set for hinted fonts.\n\n        Note:\n        Bit 3 = Force ppem to integer values for all internal scaler math;\n                May use fractional ppem sizes if this bit is clear;\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Are there caret positions declared for every ligature?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/ligature_carets>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: ligature_glyphs",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All ligatures in a font must have corresponding caret (text cursor) positions\n        defined in the GDEF table, otherwhise, users may experience issues with\n        caret rendering.\n\n        If using GlyphsApp or UFOs, ligature carets can be defined as anchors with\n        names starting with 'caret_'. These can be compiled with fontmake as of\n        version v2.4.0.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is there kerning info for non-ligated sequences?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/kerning_for_non_ligated_sequences>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: ligatures",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with ligatures should have kerning on the corresponding non-ligated\n        sequences for text where ligatures aren't used\n        (eg https://github.com/impallari/Raleway/issues/14).\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Combined length of family and style must not exceed 27 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_and_style_max_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All name entries are good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to a GlyphsApp tutorial [1], in order to make sure all versions of\n        Windows recognize it as a valid font file, we must make sure that the\n        concatenated length of the familyname (NameID.FONT_FAMILY_NAME) and\n        style (NameID.FONT_SUBFAMILY_NAME) strings in the name table do not\n        exceed 20 characters.\n\n        After discussing the problem in more detail at FontBakery issue #2179 [2] we\n        decided that allowing up to 27 chars would still be on the safe side, though.\n\n        [1] https://glyphsapp.com/tutorials/multiple-masters-part-3-setting-up-instances\n        [2] https://github.com/fonttools/fontbakery/issues/2179\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table entries should not contain line-breaks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/line_breaks>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name entry COPYRIGHT_NOTICE on platform MACINTOSH contains a line-break. [code: line-break]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name entry LICENSE_DESCRIPTION on platform MACINTOSH contains a line-break. [code: line-break]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name entry COPYRIGHT_NOTICE on platform WINDOWS contains a line-break. [code: line-break]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name entry LICENSE_DESCRIPTION on platform WINDOWS contains a line-break. [code: line-break]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are some entries on the name table that may include more than one line\n        of text. The Google Fonts team, though, prefers to keep the name table entries\n        short and simple without line breaks.\n\n        For instance, some designers like to include the full text of a font license in\n        the \"copyright notice\" entry, but for the GFonts collection this entry should\n        only mention year, author and other basic info in a manner enforced by\n        com.google.fonts/check/font_copyright\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Name table strings must not contain the string 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/rfn>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the name table strings contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some designers adopt the \"Reserved Font Name\" clause of the OFL license. This\n        means that the original author reserves the rights to the family name and other\n        people can only distribute modified versions using a different family name.\n\n        Google Fonts published updates to the fonts in the collection in order to fix\n        issues and/or implement further improvements to the fonts. It is important to\n        keep the family name so that users of the webfonts can benefit from the updates.\n        Since it would forbid such usage scenario, all families in the GFonts collection\n        are required to not adopt the RFN clause.\n\n        This check ensures \"Reserved Font Name\" is not mentioned in the name table.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check family name for GF Guide compliance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_name_compliance>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks the family name for compliance with the Google Fonts Guide.\n        https://googlefonts.github.io/gf-guide/onboarding.html#new-fonts\n\n        If you want to have your family name added to the CamelCase\n        exceptions list, please submit a pull request to the\n        camelcased_familyname_exceptions.txt file.\n\n        Similarly, abbreviations can be submitted to the\n        abbreviations_familyname_exceptions.txt file.\n\n        These are located in the Lib/fontbakery/data/googlefonts/ directory\n        of the FontBakery source code currently hosted at\n        https://github.com/fonttools/fontbakery/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Directory name in GFonts repo structure must match NameID 1 of the regular.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/dirname_matches_nameid_1>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "A static fonts directory with at least two fonts must accompany variable fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/vf_has_static_fonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider adding a subdirectory called \"static/\" and including in it static font files. [code: missing]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Variable font family directories kept in the google/fonts git repo may include\n        a static/ subdir containing static fonts.\n\n        These files are meant to be served for users that still lack support for\n        variable fonts in their web browsers.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "A font repository should not include FontBakery report files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/fb_report>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A FontBakery report is ephemeral and so should be used for posting issues on a\n        bug-tracker instead of being hosted in the font project repository.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check upstream.yaml file contains all required fields",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/upstream_yaml_has_required_fields>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: upstream_yaml",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If a family has been pushed using the gftools packager, we must check that all\n        the required fields in the upstream.yaml file have been populated.\n    ",
                    "result": "SKIP",
                    "severity": 10
                },
                {
                    "description": "A font repository should not include ZIP files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/zip_files>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people check in ZIPs into their font project repositories. While we\n        accept the practice of checking in binaries, we believe that a ZIP is a step\n        too far ;)\n\n        Note: a source purist position is that only source files and build scripts\n        should be checked in.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check generally enforces Google Fonts\u2019 vertical metrics specifications.\n        In particular:\n        * lineGap must be 0\n        * Sum of hhea ascender + abs(descender) + linegap must be\n          between 120% and 200% of UPM\n        * Warning if sum is over 150% of UPM\n\n        The threshold levels 150% (WARN) and 200% (FAIL) are somewhat arbitrarily chosen\n        and may hint at a glaring mistake in the metrics calculations or UPM settings.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/VerticalMetrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Vertical metrics have not regressed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the family already exists on Google Fonts, we need to ensure that the\n        checked family's vertical metrics are similar. This check will test the\n        following schema which was outlined in Font Bakery issue #1162 [1]:\n\n        - The family should visually have the same vertical metrics as the Regular\n          style hosted on Google Fonts.\n\n        - If the family on Google Fonts has differing hhea and typo metrics, the family\n          being checked should use the typo metrics for both the hhea and typo entries.\n\n        - If the family on Google Fonts has use typo metrics not enabled and the family\n          being checked has it enabled, the hhea and typo metrics should use the family\n          on Google Fonts winAscent and winDescent values.\n\n        - If the upms differ, the values must be scaled so the visual appearance is\n          the same.\n\n        [1] https://github.com/fonttools/fontbakery/issues/1162\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts CJK vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font, not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        CJK fonts have different vertical metrics when compared to Latin fonts.\n        We follow the schema developed by dr Ken Lunde for Source Han Sans and\n        the Noto CJK fonts.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/Spec#cjk-vertical-metrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a CJK family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check CJK family has the same vertical metrics as the same family\n        hosted on Google Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font contain less than 150 CJK characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_not_enough_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_claiming_to_be_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Kana has 150 characters and it's the smallest CJK writing system.\n\n        If a font contains less CJK glyphs than this writing system, we inform the\n        user that some glyphs may be encoded incorrectly.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances don't have duplicate names",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont_duplicate_instance_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check's purpose is to detect duplicate named instances names in a\n        given variable font.\n        Repeating instance names may be the result of instances for several VF axes\n        defined in `fvar`, but since currently only weight+italic tokens are allowed\n        in instance names as per GF specs, they ended up repeating.\n        Instead, only a base set of fonts for the most default representation of the\n        family can be defined through instances in the `fvar` table, all other\n        instances will have to be left to access through the `STAT` table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs do not contain the ital axis.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/unsupported_axes>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'ital' axis is not supported yet in Google Chrome.\n\n        For the time being, we need to ensure that VFs do not contain this axis.\n        Once browser support is better, we can deprecate this check.\n\n        For more info regarding browser support, see:\n        https://arrowtype.github.io/vf-slnt-test/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs with duplexed axes do not vary horizontal advance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/duplexed_axis_reflow>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Certain axes, such as grade (GRAD) or roundness (ROND), should not\n        change any advanceWidth or kerning data across the font's design space.\n        This is because altering the advance width of glyphs can cause text reflow.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes values are within gf_axisregistry bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_bounds>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Each axis range in a METADATA.pb file must be registered, and within the bounds\n        of the axis definition in the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes tags are defined in gf_axisregistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_valid_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure all axes in a METADATA.pb file are registered in the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        Why does Google Fonts have its own Axis Registry?\n\n        We support a superset of the OpenType axis registry axis set, and use\n        additional metadata for each axis. Axes present in a font file but not in this\n        registry will not function via our API. No variable font is expected to\n        support all of the axes here.\n\n        Any font foundry or distributor library that offers variable fonts has a\n        implicit, latent, de-facto axis registry, which can be extracted by scanning\n        the library for axes' tags, labels, and min/def/max values. While in 2016\n        Microsoft originally offered to include more axes in the OpenType 1.8\n        specification (github.com/microsoft/OpenTypeDesignVariationAxisTags), as of\n        August 2020, this effort has stalled. We hope more foundries and distributors\n        will publish documents like this that make their axes explicit, to encourage\n        of adoption of variable fonts throughout the industry, and provide source\n        material for a future update to the OpenType specification's axis registry.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate defaults on fvar table match registered fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gf_axisregistry/fvar_axis_defaults>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that axis defaults have a corresponding fallback name registered at the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        This is necessary for the following reasons:\n\n        To get ZIP files downloads on Google Fonts to be accurate \u2014 otherwise the\n        chosen default font is not generated. The Newsreader family, for instance, has\n        a default value on the 'opsz' axis of 16pt. If 16pt was not a registered\n        fallback position, then the ZIP file would instead include another position\n        as default (such as 14pt).\n\n        For the Variable fonts to display the correct location on the specimen page.\n\n        For VF with no weight axis to be displayed at all. For instance, Ballet, which\n        has no weight axis, was not appearing in sandbox because default position on\n        'opsz' axis was 16pt, and it was not yet a registered fallback positon.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate STAT particle names and values match the fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT/gf_axisregistry>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that particle names and values on STAT table match the fallback names\n        in each axis entry at the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate VF axes match the ones declared on METADATA.pb.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_axis_enumeration>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All font variation axes present in the font files must be properly declared\n        on METADATA.pb so that they can be served by the GFonts API.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure METADATA.pb does not use escaped strings.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/escaped_strings>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In some cases we've seen designer names and other fields with escaped strings\n        in METADATA files. Nowadays the strings can be full unicode strings and\n        do not need escaping.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Designers are listed correctly on the Google Fonts catalog?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_profiles>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "It seems that Christopher J. Fynn is still not listed on the designers catalog. Please submit a photo and a link to a webpage where people can learn more about the work of this designer/typefoundry. [code: profile-not-found]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has a catalog of designers.\n\n        This check ensures that the online entries of the catalog can be found based\n        on the designer names listed on the METADATA.pb file.\n\n        It also validates the URLs and file formats are all correctly set.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Ensure variable fonts include an avar table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_avar_table>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Most variable fonts should include an avar table to correctly define\n        axes progression rates.\n\n        For example, a weight axis from 0% to 100% doesn't map directly to 100 to 1000,\n        because a 10% progression from 0% may be too much to define the 200,\n        while 90% may be too little to define the 900.\n\n        If the progression rates of axes is linear, this check can be ignored.\n        Fontmake will also skip adding an avar table if the progression rates\n        are linear. However, we still recommend designers visually proof each\n        instance is at the expected weight, width etc.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "On a family update, the DESCRIPTION.en_us.html file should ideally also be updated.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/family_update>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The DESCRIPTION.en_us.html file in this family has not changed in comparison to the latest font release on the google/fonts github repo.\nPlease consider mentioning note-worthy improvements made to the family recently. [code: description-not-updated]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want to ensure that any significant changes to the font family are\n        properly mentioned in the DESCRIPTION file.\n\n        In general, it means that the contents of the DESCRIPTION.en_us.html file\n        will typically change if when font files are updated. Please treat this check\n        as a reminder to do so whenever appropriate!\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check small caps glyphs are available.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/missing_small_caps_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure small caps glyphs are available if\n        a font declares smcp or c2sc OT features.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure Stylistic Sets have description.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/stylisticset_description>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Stylistic sets should provide description text. Programs such as InDesign,\n        TextEdit and Inkscape use that info to display to the users so that they know\n        what a given stylistic set offers.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) is set in all fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/os2/use_typo_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All fonts on the Google Fonts collection should have OS/2.fsSelection bit 7\n        (USE_TYPO_METRICS) set. This requirement is part of the vertical metrics scheme\n        established as a Google Fonts policy aiming at a common ground supported by\n        all major font rendering environments.\n\n        For more details, read:\n        https://github.com/googlefonts/gf-docs/blob/main/VerticalMetrics/README.md\n\n        Below is the portion of that document that is most relevant to this check:\n\n        Use_Typo_Metrics must be enabled. This will force MS Applications to use the\n        OS/2 Typo values instead of the Win values. By doing this, we can freely set\n        the Win values to avoid clipping and control the line height with the typo\n        values. It has the added benefit of future line height compatibility. When\n        a new script is added, we simply change the Win values to the new yMin\n        and yMax, without needing to worry if the line height have changed.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Ensure fonts have ScriptLangTags declared on the 'meta' table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/meta/script_lang_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file does not have a 'meta' table. [code: lacks-meta-table]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType 'meta' table originated at Apple. Microsoft added it to OT with\n        just two DataMap records:\n\n        - dlng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font is designed for.\n\n        - slng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font supports.\n\n\n        The slng structure is intended to describe which languages and scripts the\n        font overall supports. For example, a Traditional Chinese font that also\n        contains Latin characters, can indicate Hant,Latn, showing that it supports\n        Hant, the Traditional Chinese variant of the Hani script, and it also\n        supports the Latn script.\n\n        The dlng structure is far more interesting. A font may contain various glyphs,\n        but only a particular subset of the glyphs may be truly \"leading\" in the design,\n        while other glyphs may have been included for technical reasons. Such a\n        Traditional Chinese font could only list Hant there, showing that it\u2019s designed\n        for Traditional Chinese, but the font would omit Latn, because the developers\n        don\u2019t think the font is really recommended for purely Latin-script use.\n\n        The tags used in the structures can comprise just script, or also language\n        and script. For example, if a font has Bulgarian Cyrillic alternates in the\n        locl feature for the cyrl BGR OT languagesystem, it could also indicate in\n        dlng explicitly that it supports bul-Cyrl. (Note that the scripts and languages\n        in meta use the ISO language and script codes, not the OpenType ones).\n\n        This check ensures that the font has the meta table containing the\n        slng and dlng structures.\n\n        All families in the Google Fonts collection should contain the 'meta' table.\n        Windows 10 already uses it when deciding on which fonts to fall back to.\n        The Google Fonts API and also other environments could use the data for\n        smarter filtering. Most importantly, those entries should be added\n        to the Noto fonts.\n\n        In the font making process, some environments store this data in external\n        files already. But the meta table provides a convenient way to store this\n        inside the font file, so some tools may add the data, and unrelated tools\n        may read this data. This makes the solution much more portable and universal.\n    ",
                    "result": "WARN",
                    "severity": 3
                },
                {
                    "description": "Ensure fonts do not contain any pre-production tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/no_debugging_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Tables such as `Debg` are useful in the pre-production stages of font\n        development, but add unnecessary bloat to a production font and should\n        be removed before release.\n    ",
                    "result": "PASS",
                    "severity": 6
                },
                {
                    "description": "Check font family directory name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/family_directory_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Directory name is \"uchen\", as expected.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want the directory name of a font family to be predictable and directly\n        derived from the family name, all lowercased and removing spaces.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font can render its own name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/render_own_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can successfully render its own name (Uchen)",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A base expectation is that a font family's regular/default (400 roman) style\n        can render its 'menu name' (nameID 1) in itself.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check samples can be rendered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/can_render_samples>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to prevent tofu from being seen on fonts.google.com, this check\n        verifies that all samples specified by METADATA.pb can be properly\n        rendered by the font.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check if category on METADATA.pb matches what can be inferred from the family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category_hints>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes the font familyname contains words that hint at which is the most\n        likely correct category to be declared on METADATA.pb\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has the expected color font tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/colorfont_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks Good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        COLR v0 fonts are widely supported in most browsers so they do not require\n        an SVG color table. However, some environments (e.g. Safari, Adobe apps)\n        do not currently support COLR v1 so we need to add an SVG table to these fonts,\n        except in the case of variable fonts, since SVG does not support\n        OpenType Variations.\n\n        To automatically generate compatible SVG/COLR tables,\n        run the maximum_color tool in nanoemoji:\n        https://github.com/googlefonts/nanoemoji\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Color layers should have a minimum brightness",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/color_cpal_brightness>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Layers of a COLRv0 font should not be too dark or too bright. When layer colors\n        are set explicitly, they can't be changed and they may turn out illegible\n        against dark or bright backgrounds.\n\n        While traditional color-less fonts can be colored in design apps or CSS, a\n        black color definition in a COLRv0 font actually means that that layer will be\n        rendered in black regardless of the background color. This leads to text\n        becoming invisible against a dark background, for instance when using a dark\n        theme in a web browser or operating system.\n\n        This check ensures that layer colors are at least 10% bright and at most 90%\n        bright, when not already set to the current color (0xFFFF).\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Put an empty glyph on GID 1 right after the .notdef glyph for COLRv0 fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/empty_glyph_on_gid1_for_colrv0>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A rendering bug in Windows 10 paints whichever glyph is on GID 1 on top of\n        some glyphs, colored or not. This only occurs for COLR version 0 fonts.\n\n        Having a glyph with no contours on GID 1 is a practical workaround for that.\n\n        See https://github.com/googlefonts/gftools/issues/609\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Noto fonts must have an ARTICLE.en_us.html file",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/noto_has_article>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_noto",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Noto fonts are displayed in a different way on the fonts.google.com\n         web site, and so must also contain an article about them.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: Google Fonts>",
                null,
                null
            ],
            "result": {
                "FAIL": 12,
                "INFO": 6,
                "PASS": 83,
                "SKIP": 28,
                "WARN": 8
            }
        },
        {
            "checks": [
                {
                    "description": "Checking all files are in the same directory.",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/single_directory>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "All files are in the same directory.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the set of font files passed in the command line is not all in the\n        same directory, then we warn the user since the tool will interpret the\n        set of files as belonging to a single family (and it is unlikely that\n        the user would store the files from a single family spreaded\n        in several separate directories).\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Each font in a family must have the same set of vertical metrics values.",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/vertical_metrics>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Vertical metrics are the same across the family.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want all fonts within a family to have the same vertical metrics so\n        their line spacing is consistent across the family.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table records must not have trailing spaces.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/name/trailing_spaces>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No trailing spaces on name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 usWinAscent & usWinDescent.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/win_ascent_and_descent>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWinAscent & usWinDescent values look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's winAscent and winDescent values should be greater than or equal to\n        the head table's yMax, abs(yMin) values. If they are less than these values,\n        clipping can occur on Windows platforms\n        (https://github.com/RedHatBrand/Overpass/issues/33).\n\n        If the font includes tall/deep writing systems such as Arabic or Devanagari,\n        the winAscent and winDescent can be greater than the yMax and absolute yMin\n        values to accommodate vowel marks.\n\n        When the 'win' Metrics are significantly greater than the UPM, the linespacing\n        can appear too loose. To counteract this, enabling the OS/2 fsSelection\n        bit 7 (Use_Typo_Metrics), will force Windows to use the OS/2 'typo' values\n        instead. This means the font developer can control the linespacing with\n        the 'typo' values, whilst avoiding clipping by setting the 'win' values to\n        values greater than the yMax and absolute yMin.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 Metrics match hhea Metrics.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/os2_metrics_match_hhea>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.sTypoAscender/Descender values match hhea.ascent/descent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OS/2 and hhea vertical metric values should match. This will produce the\n        same linespacing on Mac, GNU+Linux and Windows.\n\n        - Mac OS X uses the hhea values.\n        - Windows uses OS/2 or Win, depending on the OS or fsSelection bit value.\n\n        When OS/2 and hhea vertical metrics match, the same linespacing results on\n        macOS, GNU+Linux and Windows. Note that fixing this issue in a previously\n        released font may cause reflow in user documents and unhappy users.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking with ots-sanitize.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/ots>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "ots-sanitize passed this file",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Do we have the latest version of FontBakery installed?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/fontbakery_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "FontBakery is up-to-date.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Running old versions of FontBakery can lead to a poor report which may\n        include false WARNs and FAILs due do bugs, as well as outdated\n        quality assurance criteria.\n\n        Older versions will also not report problems that are detected by new checks\n        added to the tool in more recent updates.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains '.notdef' as its first glyph?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType specification v1.8.2 recommends that the first glyph is the\n        '.notdef' glyph without a codepoint assigned and with a drawing:\n\n        The .notdef glyph is very important for providing the user feedback\n        that a glyph is not found in the font. This glyph should not be left\n        without an outline as the user will only see what looks like a space\n        if a glyph is missing and not be aware of the active font\u2019s limitation.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#glyph-0-the-notdef-glyph\n\n        Pre-v1.8, it was recommended that fonts should also contain 'space', 'CR'\n        and '.null' glyphs. This might have been relevant for MacOS 9 applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains glyphs for whitespace characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains glyphs for whitespace characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has **proper** whitespace glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphnames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has **AGL recommended** names for whitespace glyphs.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check enforces adherence to recommended whitespace\n        (codepoints 0020 and 00A0) glyph names according to the Adobe Glyph List.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Whitespace glyphs have ink?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_ink>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no whitespace glyph with ink.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font contains all required tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/required_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font contains the following optional tables:\n\n\t- loca\n\n\t- prep\n\n\t- GPOS\n\n\t- GSUB\n\n\t- gasp\n\n\t- VDMX [code: optional-tables]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "Font contains all required tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#required-tables\n\n        Whether TrueType or CFF outlines are used in an OpenType font, the following\n        tables are required for the font to function correctly:\n\n        - cmap (Character to glyph mapping)\u23ce\n        - head (Font header)\u23ce\n        - hhea (Horizontal header)\u23ce\n        - hmtx (Horizontal metrics)\u23ce\n        - maxp (Maximum profile)\u23ce\n        - name (Naming table)\u23ce\n        - OS/2 (OS/2 and Windows specific metrics)\u23ce\n        - post (PostScript information)\n\n        The spec also documents that variable fonts require the following table:\n\n        - STAT (Style attributes)\n\n        Depending on the typeface and coverage of a font, certain tables are\n        recommended for optimum quality.\n\n        For example:\u23ce\n        - the performance of a non-linear font is improved if the VDMX, LTSH,\n          and hdmx tables are present.\u23ce\n        - Non-monospaced Latin fonts should have a kern table.\u23ce\n        - A gasp table is necessary if a designer wants to influence the sizes\n          at which grayscaling is used under Windows. Etc.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Are there unwanted tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unwanted_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no unwanted tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some font editors store source data in their own SFNT tables, and these\n        can sometimes sneak into final release files, which should only have\n        OpenType spec tables.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check correctness of STAT table strings",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_strings>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        On the STAT table, the \"Italic\" keyword must not be used on AxisValues\n        for variation axes other than 'ital'.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Glyph names are all valid?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/valid_glyphnames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph names are all valid.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft's recommendations for OpenType Fonts states the following:\n\n        'NOTE: The PostScript glyph name must be no longer than 31 characters,\n        include only uppercase or lowercase English letters, European digits,\n        the period or the underscore, i.e. from the set [A-Za-z0-9_.] and\n        should start with a letter, except the special glyph name \".notdef\"\n        which starts with a period.'\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#post-table\n\n\n        In practice, though, particularly in modern environments, glyph names\n        can be as long as 63 characters.\n\n        According to the \"Adobe Glyph List Specification\" available at:\n\n        https://github.com/adobe-type-tools/agl-specification\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains unique glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unique_glyphnames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph names are all unique.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Duplicate glyph names prevent font installation on Mac OS X.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "List all superfamily filepaths",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/list>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/uchen [code: family-path]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is a merely informative check that lists all sibling families\n        detected by fontbakery.\n\n        Only the fontfiles in these directories will be considered in\n        superfamily-level checks.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Each font in set of sibling families must have the same set of vertical metrics values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/vertical_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Sibling families were not detected.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We may want all fonts within a super-family (all sibling families) to have\n        the same vertical metrics so their line spacing is consistent\n        across the super-family.\n\n        This is an experimental extended version of\n        com.google.fonts/check/family/vertical_metrics and for now it will only\n        result in WARNs.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure indic fonts have the Indian Rupee Sign glyph.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/rupee>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_indic_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per Bureau of Indian Standards every font supporting one of the\n        official Indian languages needs to include Unicode Character\n        \u201c\u20b9\u201d (U+20B9) Indian Rupee Sign.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font contains no unreachable glyphs",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unreachable_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs could not be reached by codepoint or substitution rules:\n\n\t- Acute\n\n\t- Breve\n\n\t- Cedilla\n\n\t- Hungarumlaut\n\n\t- Ogonek\n\n\t- f_f_j\n\n\t- f_j\n\n\t- nonmarkingreturn\n\n\t- uni00610324\n\n\t- uni00620324\n\n\t- uni00640324\n\n\t- uni00650324\n\n\t- uni00690324\n\n\t- uni006C0325\n\n\t- uni006E0302\n\n\t- uni006F0324\n\n\t- uni00720325\n\n\t- uni00790324\n\n\t- uni00F80324\n\n\t- uni02560324\n\n\t- uni0F010F14\n\n\t- uni0F400F39\n\n\t- uni0F400F390F740F7C\n\n\t- uni0F400F740F7AA\n\n\t- uni0F400FA6\n\n\t- uni0F400FA7\n\n\t- uni0F410F390F7C\n\n\t- uni0F420F390F7C\n\n\t- uni0F420FB20F740F7C\n\n\t- uni0F440F390F7C\n\n\t- uni0F440FB10F7C\n\n\t- uni0F440FB20F740F7C\n\n\t- uni0F460F740F7C\n\n\t- uni0F460FB10F7C\n\n\t- uni0F490F39\n\n\t- uni0F4C0FB30F71.b\n\n\t- uni0F520FA2\n\n\t- uni0F530F390F7C\n\n\t- uni0F530F900F7C\n\n\t- uni0F530F9F0F740F7C\n\n\t- uni0F530FB20F7C\n\n\t- uni0F530FB70F390F7C\n\n\t- uni0F540F390F7A\n\n\t- uni0F540F390F7C\n\n\t- uni0F540F510FA80F72\n\n\t- uni0F540F510FA80F7C\n\n\t- uni0F540F9F0FB10FAD\n\n\t- uni0F540F9F0FB10FAD0F710F72\n\n\t- uni0F550F390F7A\n\n\t- uni0F550F390F7C\n\n\t- uni0F550F990F7C\n\n\t- uni0F560F740F7C\n\n\t- uni0F560FB10F39\n\n\t- uni0F570FB10F710F7C\n\n\t- uni0F580F9F0F7C\n\n\t- uni0F5A0F740F7C\n\n\t- uni0F5B0F990FAD\n\n\t- uni0F5B0F990FB10F72\n\n\t- uni0F5B0F990FB2\n\n\t- uni0F5B0F990FB20F710F80\n\n\t- uni0F5B0F990FB20F80\n\n\t- uni0F5C0F710F72\n\n\t- uni0F5D0F39\n\n\t- uni0F5E0F740F7C\n\n\t- uni0F600F740F72.calt\n\n\t- uni0F610F39\n\n\t- uni0F610FB10F7C\n\n\t- uni0F617D\n\n\t- uni0F620F39\n\n\t- uni0F620F710F800F7E\n\n\t- uni0F620F900F90\n\n\t- uni0F620F920FB10F390F7C\n\n\t- uni0F620FA10F39\n\n\t- uni0F620FB20F7C\n\n\t- uni0F630F39\n\n\t- uni0F630FB10F7C\n\n\t- uni0F640F910F7C\n\n\t- uni0F660F9F0FB10F7C\n\n\t- uni0F660FA10F39\n\n\t- uni0F660FA30F390F7C\n\n\t- uni0F71.alt\n\n\t- uni0F71.alt2\n\n\t- uni0F71.alt3\n\n\t- uni0F72.altN\n\n\t- uni0F720301.altF\n\n\t- uni0F720F7A.altF\n\n\t- uni0F720F83.altF\n\n\t- uni0F75.alt\n\n\t- uni0F75.alt2\n\n\t- uni0F75.alt3\n\n\t- uni0F75.alt4\n\n\t- uni0F7A0301.altF\n\n\t- uni0F7A0F7E.altF\n\n\t- uni0F7A0F7E.altN\n\n\t- uni0F7A0F83.altF\n\n\t- uni0F7B.altN\n\n\t- uni0F7B0F7E.altF\n\n\t- uni0F7B0F7E.altN\n\n\t- uni0F7C0301.altF\n\n\t- uni0F7C0F7E.altF\n\n\t- uni0F7C0F83.altF\n\n\t- uni0F7D.altN\n\n\t- uni0F7D0F7E.altN\n\n\t- uni0F7E0F7E\n\n\t- uni0F80.altN\n\n\t- uni0F800F7E.altF\n\n\t- uni0F800F7E.altN\n\n\t- uni0F82.altF\n\n\t- uni0F83.altF\n\n\t- uni0F8B0F99\n\n\t- uni0FB30F71.alt1\n [code: unreachable-glyphs]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs are either accessible directly through Unicode codepoints or through\n        substitution rules.\n\n        In Color Fonts, glyphs are also referenced by the COLR table.\n\n        Any glyphs not accessible by either of these means\n        are redundant and serve only to increase the font's file size.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check if each glyph has the recommended amount of contours.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/contour_count>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check inspects the glyph outlines and detects the total number of contours in each of them. The expected values are infered from the typical ammounts of contours observed in a large collection of reference font families. The divergences listed below may simply indicate a significantly different design on some of your glyphs. On the other hand, some of these may flag actual bugs in the font such as glyphs mapped to an incorrect codepoint. Please consider reviewing the design and codepoint assignment of these to make sure they are correct.\n\nThe following glyphs do not have the recommended number of contours:\n\n\t- Glyph name: percent\tContours detected: 4\tExpected: 5\n\n\t- Glyph name: Q\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: acircumflex\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: ecircumflex\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: ocircumflex\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: ucircumflex\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: circledash\tContours detected: 6\tExpected: 16 or 12\n\n\t- Glyph name: uniFFFC\tContours detected: 18\tExpected: 22\n\n\t- Glyph name: Q\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: acircumflex\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: ecircumflex\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: fl\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: ocircumflex\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: percent\tContours detected: 4\tExpected: 5\n\n\t- Glyph name: ucircumflex\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: uniFFFC\tContours detected: 18\tExpected: 22\n [code: contour-count]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Visually QAing thousands of glyphs by hand is tiring. Most glyphs can only\n        be constructured in a handful of ways. This means a glyph's contour count\n        will only differ slightly amongst different fonts, e.g a 'g' could either\n        be 2 or 3 contours, depending on whether its double story or single story.\n\n        However, a quotedbl should have 2 contours, unless the font belongs\n        to a display family.\n\n        This check currently does not cover variable fonts because there's plenty\n        of alternative ways of constructing glyphs with multiple outlines for each\n        feature in a VarFont. The expected contour count data for this check is\n        currently optimized for the typical construction of glyphs in static fonts.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain a soft hyphen?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_hyphen>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a 'Soft Hyphen' character. [code: softhyphen]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'Soft Hyphen' character (codepoint 0x00AD) is used to mark\n        a hyphenation possibility within a word in the absence of or\n        overriding dictionary hyphenation.\n\n        It is sometimes designed empty with no width (such as a control character),\n        sometimes the same as the traditional hyphen, sometimes double encoded with\n        the hyphen.\n\n        That being said, it is recommended to not include it in the font at all,\n        because discretionary hyphenation should be handled at the level of the\n        shaping engine, not the font. Also, even if present, the software would\n        not display that character.\n\n        More discussion at:\n        https://typedrawers.com/discussion/2046/special-dash-things-softhyphen-horizontalbar\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain chws and vchw features?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_chws_feature>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The W3C recommends the addition of chws and vchw features to CJK fonts\n        to enhance the spacing of glyphs in environments which do not fully support\n        JLREQ layout rules.\n\n        The chws_tool utility (https://github.com/googlefonts/chws_tool) can be used\n        to add these features automatically.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure component transforms do not perform scaling or rotation.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/transformed_components>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No glyphs had components with scaling or rotation",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some families have glyphs which have been constructed by using\n        transformed components e.g the 'u' being constructed from a flipped 'n'.\n\n        From a designers point of view, this sounds like a win (less work).\n        However, such approaches can lead to rasterization issues, such as\n        having the 'u' not sitting on the baseline at certain sizes after\n        running the font through ttfautohint.\n\n        Other issues are outlines that end up reversed when only one dimension\n        is flipped while the other isn't.\n\n        As of July 2019, Marc Foley observed that ttfautohint assigns cvt values\n        to transformed glyphs as if they are not transformed and the result is\n        they render very badly, and that vttLib does not support flipped components.\n\n        When building the font with fontmake, the problem can be fixed by adding\n        this to the command line:\n\n        --filter DecomposeTransformedComponentsFilter\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure no GPOS7 lookups are present.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos7>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has no GPOS7 lookups",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Versions of fonttools >=4.14.0 (19 August 2020) perform an optimisation on\n        chained contextual lookups, expressing GSUB6 as GSUB5 and GPOS8 and GPOS7\n        where possible (when there are no suffixes/prefixes for all rules in\n        the lookup).\n\n        However, makeotf has never generated these lookup types and they are rare\n        in practice. Perhaps before of this, Mac's CoreText shaper does not correctly\n        interpret GPOS7, meaning that these lookups will be ignored by the shaper,\n        and fonts containing these lookups will have unintended positioning errors.\n\n        To fix this warning, rebuild the font with a recent version of fonttools.\n    ",
                    "result": "PASS",
                    "severity": 9
                },
                {
                    "description": "Ensure that the font can be rasterized by FreeType.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/freetype_rasterizer>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can be rasterized by FreeType.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Malformed fonts can cause FreeType to crash.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Font has the proper sfntVersion value?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/sfnt_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has the correct sfntVersion value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OpenType fonts that contain TrueType outlines should use the value of 0x00010000\n        for the sfntVersion. OpenType fonts containing CFF data (version 1 or 2) should\n        use 0x4F54544F ('OTTO', when re-interpreted as a Tag) for sfntVersion.\n\n        Fonts with the wrong sfntVersion value are rejected by FreeType.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#table-directory\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Space and non-breaking space have the same width?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_widths>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Space and non-breaking space have the same width.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the space and nbspace glyphs have different widths, then Google Workspace\n        has problems with the font.\n\n        The nbspace is used to replace the space character in multiple situations in\n        documents; such as the space before punctuation in languages that do that. It\n        avoids the punctuation to be separated from the last word and go to next line.\n\n        This is automatic substitution by the text editors, not by fonts. It's also used\n        by designers in text composition practice to create nicely shaped paragraphs.\n        If the space and the nbspace are not the same width, it breaks the text\n        composition of documents.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Detect any interpolation issues in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/interpolation_issues>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When creating a variable font, the designer must make sure that corresponding\n        paths have the same start points across masters, as well as that corresponding\n        component shapes are placed in the same order within a glyph across masters.\n        If this is not done, the glyph will not interpolate correctly.\n\n        Here we check for the presence of potential interpolation errors using the\n        fontTools.varLib.interpolatable module.\n    ",
                    "result": "SKIP",
                    "severity": 4
                },
                {
                    "description": "Check math signs have the same width.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/math_signs_width>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The most common width is 590 among a set of 2 math glyphs.\nThe following math glyphs have a different width, though:\n\nWidth = 592:\nless, greater\n\nWidth = 364:\nequal\n\nWidth = 509:\nlogicalnot\n\nWidth = 607:\nplusminus\n\nWidth = 631:\ndivide\n\nWidth = 388:\nminus\n [code: width-outliers]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        It is a common practice to have math signs sharing the same width\n        (preferably the same width as tabular figures accross the entire font family).\n\n        This probably comes from the will to avoid additional tabular math signs\n        knowing that their design can easily share the same width.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Checking Vertical Metric Linegaps.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/linegaps>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 sTypoLineGap and hhea lineGap are both 0.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The LineGap value is a space added to the line height created by the union\n        of the (typo/hhea)Ascender and (typo/hhea)Descender. It is handled differently\n        according to the environment.\n\n        This leading value will be added above the text line in most desktop apps.\n        It will be shared above and under in web browsers, and ignored in Windows\n        if Use_Typo_Metrics is disabled.\n\n        For better linespacing consistency across platforms,\n        (typo/hhea)LineGap values must be 0.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking STAT table entries in static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_in_statics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Adobe feature syntax allows for the definition of a STAT table. Fonts built\n        with a hand-coded STAT table in feature syntax may be built either as static\n        or variable, but will end up with the same STAT table.\n\n        This is a problem, because a STAT table which works on variable fonts\n        will not be appropriate for static instances. The examples in the OpenType spec\n        of non-variable fonts with a STAT table show that the table entries must be\n        restricted to those entries which refer to the static font's position in\n        the designspace. i.e. a Regular weight static should only have the following\n        entry for the weight axis:\n\n        <AxisIndex value=\"0\"/>\n        <Flags value=\"2\"/>  <!-- ElidableAxisValueName -->\n        <ValueNameID value=\"265\"/>  <!-- Regular -->\n        <Value value=\"400.0\"/>\n\n        However, if the STAT table intended for a variable font is compiled into a\n        static, it will have many entries for this axis. In this case, Windows will\n        read the first entry only, causing all instances to report themselves\n        as \"Thin Condensed\".\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check accent of Lcaron, dcaron, lcaron, tcaron (derived from com.google.fonts/check/alt_caron)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/alt_caron:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Lcaron, dcaron, lcaron, tcaron should NOT be composed with quoteright\n        or quotesingle or comma or caron(comb). It should be composed with a\n        distinctive glyph which doesn't look like an apostrophe.\n\n        Source:\n        https://ilovetypography.com/2009/01/24/on-diacritics/\n        http://diacritics.typo.cz/index.php?id=5\n        https://www.typotheque.com/articles/lcaron\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: Universal>",
                null,
                null
            ],
            "result": {
                "INFO": 2,
                "PASS": 21,
                "SKIP": 6,
                "WARN": 4
            }
        },
        {
            "checks": [
                {
                    "description": "Is the CFF subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_call_depth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The Type 2 Charstring Format, Technical Note #5177\",\n        the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is the CFF2 subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff2_call_depth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff2",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The CFF2 CharString Format\", the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font use deprecated CFF operators or operations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_deprecated_operators>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'dotsection' operator and the use of 'endchar' to build accented characters\n        from the Adobe Standard Encoding Character Set (\"seac\") are deprecated in CFF.\n        Adobe recommends repairing any fonts that use these, especially endchar-as-seac,\n        because a rendering issue was discovered in Microsoft Word with a font that\n        makes use of this operation. The check treats that usage as a FAIL.\n        There are no known ill effects of using dotsection, so that check is a WARN.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.cff>",
                null,
                null
            ],
            "result": {
                "SKIP": 3
            }
        },
        {
            "checks": [
                {
                    "description": "Fonts have equal unicode encodings?",
                    "key": [
                        "<Section: fontbakery.profiles.cmap>",
                        "<FontBakeryCheck:com.google.fonts/check/family/equal_unicode_encodings>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Fonts have equal unicode encodings.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.cmap>",
                null,
                null
            ],
            "result": {
                "PASS": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Make sure all font files have the same version value.",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/family/equal_font_versions>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "All font files have the same version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking unitsPerEm value is reasonable.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filtered: Google Fonts has a stricter policy which is enforced by com.google.fonts/check/unitsperem_strict",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec:\n\n        The value of unitsPerEm at the head table must be a value\n        between 16 and 16384. Any value in this range is valid.\n\n        In fonts that have TrueType outlines, a power of 2 is recommended\n        as this allows performance optimizations in some rasterizers.\n\n        But 1000 is a commonly used value. And 2000 may become\n        increasingly more common on Variable Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking font version fields (head and name table).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/font_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All font version fields match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking head.macStyle value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/mac_style>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "head macStyle ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "head macStyle BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The values of the flags on the macStyle entry on the 'head' OpenType table\n        that describe whether a font is bold and/or italic must be coherent with the\n        actual style of the font as inferred by its filename.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.head>",
                null,
                null
            ],
            "result": {
                "PASS": 3,
                "SKIP": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Fonts have consistent PANOSE proportion?",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/family/panose_proportion>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Fonts have consistent PANOSE proportion.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Fonts have consistent PANOSE family type?",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/family/panose_familytype>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Fonts have consistent PANOSE family type.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check that OS/2.fsSelection bold & italic settings are unique for each NameID1",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.adobe.fonts/check/family/bold_italic_unique_for_nameid1>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "The OS/2.fsSelection bold & italic settings were unique within each compatible family group.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per the OpenType spec: name ID 1 'is used in combination with Font Subfamily\n        name (name ID 2), and should be shared among at most four fonts that differ\n        only in weight or style.\n\n        This four-way distinction should also be reflected in the OS/2.fsSelection\n        field, using bits 0 and 5.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check if OS/2 xAvgCharWidth is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/xavgcharwidth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 xAvgCharWidth value is correct.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check if OS/2 fsSelection matches head macStyle bold and italic bits.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.adobe.fonts/check/fsselection_matches_macstyle>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The OS/2.fsSelection and head.macStyle bold and italic settings match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The bold and italic bits in OS/2.fsSelection must match the bold and italic\n        bits in head.macStyle per the OpenType spec.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check code page character ranges",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/code_pages>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "At least one code page is defined.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        At least some programs (such as Word and Sublime Text) under Windows 7\n        do not recognize fonts unless code page bits are properly set on the\n        ulCodePageRange1 (and/or ulCodePageRange2) fields of the OS/2 table.\n\n        More specifically, the fonts are selectable in the font menu, but whichever\n        Windows API these applications use considers them unsuitable for any\n        character set, so anything set in these fonts is rendered with Arial as a\n        fallback font.\n\n        This check currently does not identify which code pages should be set.\n        Auto-detecting coverage is not trivial since the OpenType specification\n        leaves the interpretation of whether a given code page is \"functional\"\n        or not open to the font developer to decide.\n\n        So here we simply detect as a FAIL when a given font has no code page\n        declared at all.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID against configuration.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.thetypefounders/check/vendor_id>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Add the `vendor_id` key to a `fontbakery.yaml` file on your font project directory to enable this check.\nYou'll also need to use the `--configuration` flag when invoking fontbakery.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When a font project's Vendor ID is specified explicitly on FontBakery's\n        configuration file, all binaries must have a matching vendor identifier\n        value in the OS/2 table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking OS/2 fsSelection value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/fsselection>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsSelection REGULAR bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.os2>",
                null,
                null
            ],
            "result": {
                "PASS": 7,
                "SKIP": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Fonts have consistent underline thickness?",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/family/underline_thickness>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Fonts have consistent underline thickness.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Dave C Lemon (Adobe Type Team) recommends setting the underline thickness to be\n        consistent across the family.\n\n        If thicknesses are not family consistent, words set on the same line which have\n        different styles look strange.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font has correct post table version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/post_table_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has an acceptable post format 2.0 table version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Format 2.5 of the 'post' table was deprecated in OpenType 1.3 and\n        should not be used.\n\n        According to Thomas Phinney, the possible problem with post format 3\n        is that under the right combination of circumstances, one can generate\n        PDF from a font with a post format 3 table, and not have accurate backing\n        store for any text that has non-default glyphs for a given codepoint.\n\n        It will look fine but not be searchable. This can affect Latin text with\n        high-end typography, and some complex script writing systems, especially\n        with higher-quality fonts. Those circumstances generally involve creating\n        a PDF by first printing a PostScript stream to disk, and then creating a\n        PDF from that stream without reference to the original source document.\n        There are some workflows where this applies,but these are not common\n        use cases.\n\n        Apple recommends against use of post format version 4 as \"no longer\n        necessary and should be avoided\". Please see the Apple TrueType reference\n        documentation for additional details.\n\n        https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6post.html\n\n        Acceptable post format versions are 2 and 3 for TTF and OTF CFF2 builds,\n        and post format 3 for CFF builds.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking post.italicAngle value. (derived from com.google.fonts/check/italic_angle)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_angle:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Value of post.italicAngle is 0.0 with style=\"Regular\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'post' table italicAngle property should be a reasonable amount, likely\n        not more than 30\u00b0. Note that in the OpenType specification, the value is\n        negative for a rightward lean.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/post\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.post>",
                null,
                null
            ],
            "result": {
                "PASS": 3
            }
        },
        {
            "checks": [
                {
                    "description": "Verify that each group of fonts with the same nameID 1 has maximum of 4 fonts.",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/family/max_4_fonts_per_family_name>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "There were no more than 4 fonts per family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per the OpenType spec:\n\n        'The Font Family name [...] should be shared among at most four fonts that\n        differ only in weight or style [...]'\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Verify that family names in the name table are consistent across all fonts in the family. Checks Typographic Family name (nameID 16) if present, otherwise uses Font Family name (nameID 1)",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/family/consistent_family_name>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Font family names are consistent across the family.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per the OpenType spec:\n            * \"...many existing applications that use this pair of names assume that a\n              Font Family name is shared by at most four fonts that form a font\n              style-linking group\"\n            * \"For extended typographic families that includes fonts other than the\n              four basic styles(regular, italic, bold, bold italic), it is strongly\n              recommended that name IDs 16 and 17 be used in fonts to create an\n              extended, typographic grouping.\"\n            * \"If name ID 16 is absent, then name ID 1 is considered to be the\n              typographic family name.\"\n\n        https://learn.microsoft.com/en-us/typography/opentype/spec/name\n\n        Fonts within a font family all must have consistent names\n        in the Typographic Family name (nameID 16)\n        or Font Family name (nameID 1), depending on which it uses.\n\n        Inconsistent font/typographic family names across fonts in a family\n        can result in unexpected behaviors, such as broken style linking.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table for empty records.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/empty_records>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No empty name table records found.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check the name table for empty records,\n        as this can cause problems in Adobe apps.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Description strings in the name table must not contain copyright info.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/no_copyright_on_description>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Description strings in the name table do not contain any copyright string.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking correctness of monospaced metadata.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/monospace>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not monospaced and all related metadata look good. [code: good]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are various metadata in the OpenType spec to specify if a font is\n        monospaced or not. If the font is not truly monospaced, then no monospaced\n        metadata should be set (as sometimes they mistakenly are...)\n\n        Requirements for monospace fonts:\n\n        * post.isFixedPitch - \"Set to 0 if the font is proportionally spaced,\n          non-zero if the font is not proportionally spaced (monospaced)\"\n          (https://www.microsoft.com/typography/otspec/post.htm)\n\n        * hhea.advanceWidthMax must be correct, meaning no glyph's width value\n          is greater. (https://www.microsoft.com/typography/otspec/hhea.htm)\n\n        * OS/2.panose.bProportion must be set to 9 (monospace) on latin text fonts.\n\n        * OS/2.panose.bSpacing must be set to 3 (monospace) on latin hand written\n          or latin symbol fonts.\n\n        * Spec says: \"The PANOSE definition contains ten digits each of which currently\n          describes up to sixteen variations. Windows uses bFamilyType, bSerifStyle\n          and bProportion in the font mapper to determine family type. It also uses\n          bProportion to determine if the font is monospaced.\"\n          (https://www.microsoft.com/typography/otspec/os2.htm#pan\n           https://monotypecom-test.monotype.de/services/pan2)\n\n        * OS/2.xAvgCharWidth must be set accurately.\n          \"OS/2.xAvgCharWidth is used when rendering monospaced fonts,\n          at least by Windows GDI\"\n          (http://typedrawers.com/discussion/comment/15397/#Comment_15397)\n\n        Also we should report an error for glyphs not of average width.\n\n\n        Please also note:\n\n        Thomas Phinney told us that a few years ago (as of December 2019), if you gave\n        a font a monospace flag in Panose, Microsoft Word would ignore the actual\n        advance widths and treat it as monospaced.\n\n        Source: https://typedrawers.com/discussion/comment/45140/#Comment_45140\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does full font name begin with the font family name?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/match_familyname_fullfont>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Full font name begins with the font family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The FULL_FONT_NAME entry in the \u2018name\u2019 table should start with the same string\n        as the Family Name (FONT_FAMILY_NAME, TYPOGRAPHIC_FAMILY_NAME or\n        WWS_FAMILY_NAME).\n\n        If the Family Name is not included as the first part of the Full Font Name, and\n        the user embeds the font in a document using a Microsoft Office app, the app\n        will fail to render the font when it opens the document again.\n\n        NOTE: Up until version 1.5, the OpenType spec included the following exception\n        in the definition of Full Font Name:\n\n            \"An exception to the [above] definition of Full font name is for Microsoft\n            platform strings for CFF OpenType fonts: in this case, the Full font name\n            string must be identical to the PostScript FontName in the CFF Name INDEX.\"\n\n        https://docs.microsoft.com/en-us/typography/opentype/otspec150/name#name-ids\n    ",
                    "result": "PASS"
                },
                {
                    "description": "PostScript name follows OpenType specification requirements?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/postscript_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "PostScript name follows requirements. [code: psname-ok]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font follows the family naming recommendations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/family_naming_recommendations>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font follows the family naming recommendations.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "CFF table FontName must match name table ID 6 (PostScript name).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_vs_cff>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should match\n        the FontName string in the 'CFF ' table.\n\n        The 'CFF ' table has a lot of information that is duplicated in other tables.\n        This information should be consistent across tables, because there's\n        no guarantee which table an app will get the data from.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Name table ID 6 (PostScript name) must be consistent across platforms.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_name_consistency>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Entries in the \"name\" table for ID 6 (PostScript name) are consistent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should be\n        consistent across platforms.\n\n        This is the TTF/CFF2 equivalent of the CFF 'name/postscript_vs_cff' check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table IDs 1, 2, 16, 17 to conform to Italic style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/italic_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not Italic.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that several entries in the name table\n        conform to the font's Upright or Italic style,\n        namely IDs 1 & 2 as well as 16 & 17 if they're present.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.name>",
                null,
                null
            ],
            "result": {
                "PASS": 9,
                "SKIP": 2
            }
        },
        {
            "checks": [
                {
                    "description": "Does the number of glyphs in the loca table match the maxp table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.loca>",
                        "<FontBakeryCheck:com.google.fonts/check/loca/maxp_num_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'loca' table matches numGlyphs in 'maxp' table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.loca>",
                null,
                null
            ],
            "result": {
                "PASS": 1
            }
        },
        {
            "checks": [
                {
                    "description": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/maxadvancewidth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check hhea.caretSlopeRise and hhea.caretSlopeRun",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/caret_slope>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "hhea.caretSlopeRise and hhea.caretSlopeRun match with post.italicAngle.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks whether hhea.caretSlopeRise and hhea.caretSlopeRun\n        match with post.italicAngle.\n\n        For Upright fonts, you can set hhea.caretSlopeRise to 1\n        and hhea.caretSlopeRun to 0.\n\n        For Italic fonts, you can set hhea.caretSlopeRise to head.unitsPerEm\n        and calculate hhea.caretSlopeRun like this:\n        round(math.tan(\n          math.radians(-1 * font[\"post\"].italicAngle)) * font[\"head\"].unitsPerEm)\n\n        This check allows for a 0.1\u00b0 rounding difference between the Italic angle\n        as calculated by the caret slope and post.italicAngle\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.hhea>",
                null,
                null
            ],
            "result": {
                "PASS": 2
            }
        },
        {
            "checks": [
                {
                    "description": "Does the font have a DSIG table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.dsig>",
                        "<FontBakeryCheck:com.google.fonts/check/dsig>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a digital signature (DSIG table) which is only required - even if only a placeholder - on old programs like MS Office 2013 in order to work properly.\nThe current recommendation is to completely remove the DSIG table. [code: found-DSIG]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft Office 2013 and below products expect fonts to have a digital\n        signature declared in a DSIG table in order to implement OpenType features.\n        The EOL date for Microsoft Office 2013 products is 4/11/2023.\n        This issue does not impact Microsoft Office 2016 and above products.\n\n        As we approach the EOL date, it is now considered better to\n        completely remove the table.\n\n        But if you still want your font to support OpenType features on Office 2013,\n        then you may find it handy to add a fake signature on a placeholder DSIG table\n        by running one of the helper scripts provided at\n        https://github.com/googlefonts/gftools\n\n        Reference: https://github.com/fonttools/fontbakery/issues/1845\n    ",
                    "result": "WARN"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.dsig>",
                null,
                null
            ],
            "result": {
                "WARN": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Check glyphs in mark glyph class are non-spacing.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_spacing_marks>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not has spacing glyphs in the GDEF mark glyph class.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class should be non-spacing.\n\n        Spacing glyphs in the GDEF mark glyph class may have incorrect anchor\n        positioning that was only intended for building composite glyphs during design.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check mark characters are in GDEF mark glyph class.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_mark_chars>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following mark characters could be in the GDEF mark glyph class:\n\t uni0300 (U+0300), uni0301 (U+0301), uni0302 (U+0302), uni0303 (U+0303), uni0304 (U+0304), uni0307 (U+0307), uni0308 (U+0308), uni030A (U+030A), uni0310 (U+0310), uni0320 (U+0320), uni0323 (U+0323), uni0324 (U+0324), uni0325 (U+0325), uni034F (U+034F), uni0F18 (U+0F18), uni0F19 (U+0F19), uni0F35 (U+0F35), uni0F37 (U+0F37), uni0F39 (U+0F39), uni0F71 (U+0F71), uni0F72 (U+0F72), uni0F73 (U+0F73), uni0F74 (U+0F74), uni0F75 (U+0F75), uni0F76 (U+0F76), uni0F77 (U+0F77), uni0F78 (U+0F78), uni0F79 (U+0F79), uni0F7A (U+0F7A), uni0F7B (U+0F7B), uni0F7C (U+0F7C), uni0F7D (U+0F7D), uni0F7E (U+0F7E), uni0F80 (U+0F80), uni0F81 (U+0F81), uni0F82 (U+0F82), uni0F83 (U+0F83), uni0F84 (U+0F84), uni0F86 (U+0F86), uni0F87 (U+0F87), uni0F8D (U+0F8D), uni0F8E (U+0F8E), uni0F8F (U+0F8F), uni0F90 (U+0F90), uni0F91 (U+0F91), uni0F92 (U+0F92), uni0F93 (U+0F93), uni0F94 (U+0F94), uni0F95 (U+0F95), uni0F96 (U+0F96), uni0F97 (U+0F97), uni0F99 (U+0F99), uni0F9A (U+0F9A), uni0F9B (U+0F9B), uni0F9C (U+0F9C), uni0F9D (U+0F9D), uni0F9E (U+0F9E), uni0F9F (U+0F9F), uni0FA0 (U+0FA0), uni0FA1 (U+0FA1), uni0FA2 (U+0FA2), uni0FA3 (U+0FA3), uni0FA4 (U+0FA4), uni0FA5 (U+0FA5), uni0FA6 (U+0FA6), uni0FA7 (U+0FA7), uni0FA8 (U+0FA8), uni0FA9 (U+0FA9), uni0FAA (U+0FAA), uni0FAB (U+0FAB), uni0FAC (U+0FAC), uni0FAD (U+0FAD), uni0FAE (U+0FAE), uni0FAF (U+0FAF), uni0FB0 (U+0FB0), uni0FB1 (U+0FB1), uni0FB2 (U+0FB2), uni0FB3 (U+0FB3), uni0FB4 (U+0FB4), uni0FB5 (U+0FB5), uni0FB6 (U+0FB6), uni0FB7 (U+0FB7), uni0FB8 (U+0FB8), uni0FB9 (U+0FB9), uni0FBA (U+0FBA), uni0FBB (U+0FBB), uni0FBC (U+0FBC), uni0FC6 (U+0FC6), uniFE00 (U+FE00), uniFE01 (U+FE01), uniFE02 (U+FE02), uniFE03 (U+FE03), uniFE04 (U+FE04), uniFE05 (U+FE05), uniFE06 (U+FE06), uniFE07 (U+FE07), uniFE08 (U+FE08), uniFE09 (U+FE09), uniFE0A (U+FE0A), uniFE0B (U+FE0B), uniFE0C (U+FE0C), uniFE0D (U+FE0D), uniFE0E (U+FE0E) and uniFE0F (U+FE0F) [code: mark-chars]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Mark characters should be in the GDEF mark glyph class.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check GDEF mark glyph class doesn't have characters that are not marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_non_mark_chars>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not have non-mark characters in the GDEF mark glyph class.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class become non-spacing and may be repositioned\n        if they have mark anchors.\n\n        Only combining mark glyphs should be in that class. Any non-mark glyph\n        must not be in that class, in particular spacing glyphs.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.gdef>",
                null,
                null
            ],
            "result": {
                "PASS": 2,
                "WARN": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Does GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gpos>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos_kerning_info>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "GPOS table check for kerning information passed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.gpos>",
                null,
                null
            ],
            "result": {
                "PASS": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Is there a usable \"kern\" table declared in the font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.kern>",
                        "<FontBakeryCheck:com.google.fonts/check/kern_table>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not declare an optional \"kern\" table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though all fonts should have their kerning implemented in the GPOS table,\n        there may be kerning info at the kern table as well.\n\n        Some applications such as MS PowerPoint require kerning info on the kern table.\n        More specifically, they require a format 0 kern subtable from a kern table\n        version 0 with only glyphs defined in the cmap table, which is the only one\n        that Windows understands (and which is also the simplest and more limited\n        of all the kern subtables).\n\n        Google Fonts ingests fonts made for download and use on desktops, and does\n        all web font optimizations in the serving pipeline (using libre libraries\n        that anyone can replicate.)\n\n        Ideally, TTFs intended for desktop users (and thus the ones intended for\n        Google Fonts) should have both KERN and GPOS tables.\n\n        Given all of the above, we currently treat kerning on a v0 kern table\n        as a good-to-have (but optional) feature.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.kern>",
                null,
                null
            ],
            "result": {
                "PASS": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Is there any unused data at the end of the glyf table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_unused_data>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no unused data at the end of the glyf table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check for points out of bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/points_out_of_bounds>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have coordinates which are out of bounds:\n\t* ('uni0254', 151.01837158203125, 500.9990234375)\n\t* ('uni0254', 216.014404296875, 500.9990234375) and ('uni0254', 259.01177978515625, 500.9990234375)\n\nThis happens a lot when points are not extremes, which is usually bad. However, fixing this alert by adding points on extremes may do more harm than good, especially with italics, calligraphic-script, handwriting, rounded and other fonts. So it is common to ignore this message. [code: points-out-of-bounds]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "result": "WARN"
                },
                {
                    "description": "Check glyphs do not have duplicate components which have the same x,y coordinates.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_non_transformed_duplicate_components>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs do not contain duplicate components which have the same x,y coordinates.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been cases in which fonts had faulty double quote marks, with each\n        of them containing two single quote marks as components with the same\n        x, y coordinates which makes them visually look like single quote marks.\n\n        This check ensures that glyphs do not contain duplicate components\n        which have the same x,y coordinates.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.glyf>",
                null,
                null
            ],
            "result": {
                "PASS": 2,
                "WARN": 1
            }
        },
        {
            "checks": [
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 400 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wght_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        If a variable font has a 'wght' (Weight) axis, then the coordinate of\n        its 'Regular' instance is required to be 400.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must be 100 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wdth_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        If a variable font has a 'wdth' (Width) axis, then the coordinate of\n        its 'Regular' instance is required to be 100.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_slnt_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'slnt' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_slnt\n\n        If a variable font has a 'slnt' (Slant) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'ital' (Italic) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_ital_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_ital_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'ital' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_ital\n\n        If a variable font has a 'ital' (Italic) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'opsz' (Optical Size) axis coordinate should be between 10 and 16 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_opsz_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_opsz_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'opsz' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_opsz\n\n        If a variable font has an 'opsz' (Optical Size) axis, then\n        the coordinate of its 'Regular' instance is recommended to be\n        a value in the range 10 to 16.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 700 on the 'Bold' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/bold_wght_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The Open-Type spec's registered\n        design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n        does not specify a required value for the 'Bold' instance of a variable font.\n\n        But Dave Crossland suggested that we should enforce\n        a required value of 700 in this case (NOTE: a distinction\n        is made between \"no bold instance present\" vs \"bold instance is present\n        but its wght coordinate is not == 700\").\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be within spec range of 1 to 1000 on all instances.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wght_valid_range>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        On the 'wght' (Weight) axis, the valid coordinate range is 1-1000.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must strictly greater than zero.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wdth_valid_range>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        On the 'wdth' (Width) axis, the valid numeric range is strictly greater than\n        zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate specifies positive values in its range?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/slnt_range>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec says at\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt that:\n\n        [...] the scale for the Slant axis is interpreted as the angle of slant\n        in counter-clockwise degrees from upright. This means that a typical,\n        right-leaning oblique design will have a negative slant value. This matches\n        the scale used for the italicAngle field in the post table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of axisNameID used by each VariationAxisRecord is greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_axis_nameid>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The axisNameID field provides a name ID that can be used to obtain strings\n        from the 'name' table that can be used to refer to the axis in application\n        user interfaces. The name ID must be greater than 255 and less than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of subfamilyNameID used by each InstanceRecord is 2, 17, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_subfamily_nameid>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The subfamilyNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 17 (typographic subfamily) strings for the given instance. Values of\n        2 or 17 can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of postScriptNameID used by each InstanceRecord is 6, 0xFFFF, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_postscript_nameid>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The postScriptNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 6 (PostScript name) strings for the given instance. Values of 6 and\n        0xFFFF can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that when an instance record is included for the default instance, its subfamilyNameID value is set to a name ID whose string is equal to the string of either name ID 2 or 17, and its postScriptNameID value is set to a name ID whose string is equal to the string of name ID 6.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_default_instance_nameids>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9.1\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The default instance of a font is that instance for which the coordinate\n        value of each axis is the defaultValue specified in the corresponding\n        variation axis record. An instance record is not required for the default\n        instance, though an instance record can be provided. When enumerating named\n        instances, the default instance should be enumerated even if there is no\n        corresponding instance record. If an instance record is included for the\n        default instance (that is, an instance record has coordinates set to default\n        values), then the nameID value should be set to either 2 or 17 or to a\n        name ID with the same value as name ID 2 or 17. Also, if a postScriptNameID is\n        included in instance records, and the postScriptNameID value should be set\n        to 6 or to a name ID with the same value as name ID 6.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have the same size.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/same_size_instance_records>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a given font must be the same size, with\n        all either including or omitting the postScriptNameID field. [...]\n        If the value is 0xFFFF, then the value is ignored, and no PostScript name\n        equivalent is provided for the instance.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have distinct data.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/distinct_instance_records>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a font should have distinct coordinates\n        and distinct subfamilyNameID and postScriptName ID values. If two or more\n        records share the same coordinates, the same nameID values or the same\n        postScriptNameID values, then all but the first can be ignored.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate foundry-defined design-variation axis tag names.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/foundry_defined_tag_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's syntactic requirements for\n        foundry-defined design-variation axis tags available at\n        https://learn.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg\n\n        Foundry-defined tags must begin with an uppercase letter\n        and must use only uppercase letters or digits.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.fvar>",
                null,
                null
            ],
            "result": {
                "SKIP": 16
            }
        },
        {
            "checks": [
                {
                    "description": "Ensure VFs have 'ital' STAT axis.",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_in_stat>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that related Upright and Italic VFs have a\n        'ital' axis in STAT table.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "All fvar axes have a correspondent Axis Record on STAT table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/stat_axis_record_for_each_axis>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, there must be an Axis Record\n        for every axis defined in the fvar table.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-records\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "STAT table has Axis Value tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.adobe.fonts/check/stat_has_axis_value_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, in a variable font, it is strongly recommended\n        that axis value tables be included for every element of typographic subfamily\n        names for all of the named instances defined in the 'fvar' table.\n\n        Axis value tables are particularly important for variable fonts, but can also\n        be used in non-variable fonts. When used in non-variable fonts, axis value\n        tables for particular values should be implemented consistently across fonts\n        in the family.\n\n        If present, Format 4 Axis Value tables are checked to ensure they have more than\n        one AxisValueRecord (a strong recommendation from the OpenType spec).\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-value-tables\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is boolean value (derived from com.google.fonts/check/italic_axis_in_stat_is_boolean)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_in_stat_is_boolean:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the value of the 'ital' STAT axis is boolean (either 0 or 1),\n        and elided for the Upright and not elided for the Italic,\n        and that the Upright is linked to the Italic.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is last. (derived from com.google.fonts/check/italic_axis_last)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_last:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the 'ital' STAT axis is last in axis order.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.stat>",
                null,
                null
            ],
            "result": {
                "PASS": 1,
                "SKIP": 4
            }
        },
        {
            "checks": [
                {
                    "description": "Does the font have any invalid feature tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_feature_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid feature tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect tags can be indications of typos, leftover debugging code or\n        questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid script tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_script_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid script tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect script tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid language tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_language_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid language tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect language tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.layout>",
                null,
                null
            ],
            "result": {
                "PASS": 3
            }
        },
        {
            "checks": [
                {
                    "description": "Check that texts shape as per expectation",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/regression>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and compares expected shaping against actual shaping, reporting\n        any differences.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no forbidden glyphs are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/forbidden>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports if any glyphs are generated in the shaping which should\n        not be produced. (For example, .notdef glyphs, visible viramas, etc.)\n\n        Shaping test suites should be written by the font engineer and referenced in\n        the FontBakery configuration file. For more information about write shaping\n        test files and how to configure FontBakery to read the shaping test suites,\n        see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no collisions are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/collides>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports instances where the glyphs collide in unexpected ways.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure dotted circle glyph is present and can attach marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/dotted_circle>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has no nonspacing mark glyphs.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The dotted circle character (U+25CC) is inserted by shaping engines before\n        mark glyphs which do not have an associated base, especially in the context\n        of broken syllabic clusters.\n\n        For fonts containing combining marks, it is recommended that the dotted circle\n        character be included so that these isolated marks can be displayed properly;\n        for fonts supporting complex scripts, this should be considered mandatory.\n\n        Additionally, when a dotted circle glyph is present, it should be able to\n        display all marks correctly, meaning that it should contain anchors for all\n        attaching marks.\n    ",
                    "result": "SKIP",
                    "severity": 3
                },
                {
                    "description": "Ensure soft_dotted characters lose their dot when combined with marks that replace the dot.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/uchen/Uchen-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_dotted>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The dot of soft dotted characters used in orthographies _must_ disappear in the following strings: i\u030a i\u0310 j\u0300 j\u0301 j\u0303 j\u0304 j\u0308\n\nThe dot of soft dotted characters _should_ disappear in other cases, for example: i\u0303 i\u0307 i\u0320\u0303 i\u0320\u0307 i\u0320\u030a i\u0320\u0310 i\u0323\u0303 i\u0323\u0307 i\u0323\u030a i\u0323\u0310 i\u0324\u0303 i\u0324\u0307 i\u0324\u030a i\u0324\u0310 i\u0325\u0303 i\u0325\u0307 i\u0325\u030a i\u0325\u0310 j\u0302 j\u0307\n\nYour font does *not* cover the following languages that require the soft-dotted feature: Navajo (Latn, 166,319 speakers), Dutch (Latn, 31,709,104 speakers), Belarusian (Cyrl, 10,064,517 speakers), Aghem (Latn, 38,843 speakers), Lithuanian (Latn, 2,357,094 speakers), Igbo (Latn, 27,823,640 speakers), Ukrainian (Cyrl, 29,273,587 speakers), Basaa (Latn, 332,940 speakers). [code: soft-dotted]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An accent placed on characters with a \"soft dot\", like i or j, causes\n        the dot to disappear.\n        An explicit dot above can be added where required.\n        See \"Diacritics on i and j\" in Section 7.1, \"Latin\" in The Unicode Standard.\n\n        Characters with the Soft_Dotted property are listed in\n        https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n\n        See also:\n        https://googlefonts.github.io/gf-guide/diacritics.html#soft-dotted-glyphs\n    ",
                    "result": "WARN",
                    "severity": 3
                }
            ],
            "key": [
                "<Section: Shaping Checks>",
                null,
                null
            ],
            "result": {
                "SKIP": 4,
                "WARN": 1
            }
        }
    ]
}