{
    "result": {
        "FAIL": 49,
        "INFO": 22,
        "PASS": 371,
        "SKIP": 184,
        "WARN": 63
    },
    "sections": [
        {
            "checks": [
                {
                    "description": "Ensure that all variable font files have the same set of axes and axis ranges.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/consistent_axes>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: VFs",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to facilitate the construction of intuitive and friendly user\n        interfaces, all variable font files in a given family should have the same set\n        of variation axes. Also, each axis must have a consistent setting of min/max\n        value ranges accross all the files.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All tabular figures must have the same width across the RIBBI-family.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/tnum_horizontal_metrics>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Tabular figures need to have the same metrics in all styles in order to allow\n        tables to be set with proper typographic control, but to maintain the placement\n        of decimals and numeric columns between rows.\n\n        Here's a good explanation of this:\n        https://www.typography.com/techniques/fonts-for-financials/#tabular-figs\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does font file include unacceptable control character glyphs?",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/control_chars>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Unacceptable control characters were not identified.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Use of some unacceptable control characters in the U+0000 - U+001F range can\n        lead to rendering issues on some platforms.\n\n        Acceptable control characters are defined as .null (U+0000) and\n        CR (U+000D) for this test.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure Italic styles have Roman counterparts.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/italics_have_roman_counterparts>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        For each font family on Google Fonts, every Italic style must have\n        a Roman sibling.\n\n        This kind of problem was first observed at [1] where the Bold style was\n        missing but BoldItalic was included.\n\n        [1] https://github.com/google/fonts/pull/1482\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check axis ordering on the STAT table.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT/axis_order>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "This font does not have a STAT table: /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf [code: missing-STAT]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "This font does not have a STAT table: /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf [code: missing-STAT]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "This font does not have a STAT table: /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf [code: missing-STAT]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "From a total of 3 font files, 3 of them (100.00%) lack a STAT table.\n\n\tAnd these are the most common STAT axis orderings:\n\t [code: summary]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is (for now) a merely informative check to detect what's the axis ordering\n        declared on the STAT table of fonts in the Google Fonts collection.\n\n        We may later update this to enforce some unified axis ordering scheme,\n        yet to be determined.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Check README.md has a sample image.",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/sample_image>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: readme_contents, readme_directory",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to showcase what a font family looks like, the project's README.md\n        file should ideally include a sample image and highlight it in the upper\n        portion of the document, no more than 10 lines away from the top of the file.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking file is named canonically.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/canonical_filename>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font filename is correct, \"Cardo-Italic.ttf\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's filename must be composed as \"<familyname>-<stylename>.ttf\":\n\n        - Nunito-Regular.ttf\n\n        - Oswald-BoldItalic.ttf\n\n\n        Variable fonts must list the axis tags in alphabetical order in\n        square brackets and separated by commas:\n\n        - Roboto[wdth,wght].ttf\n\n        - Familyname-Italic[wght].ttf\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/broken_links>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the DESCRIPTION file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website. For that reason, all hyperlinks\n        in it must be properly working.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "URLs on DESCRIPTION file must not display http(s) prefix.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/urls>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website.\n\n        Google Fonts has a content formatting policy for that snippet that expects the\n        text content of links not to include the http:// or https:// prefixes.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain a upstream Git repo URL?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/git_url>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please host your font project on a public Git repo (such as GitHub or GitLab) and place a link in the DESCRIPTION.en_us.html file. [code: lacks-git-url]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The contents of the DESCRIPTION.en-us.html file are displayed on the\n        Google Fonts website in the about section of each font family specimen page.\n\n        Since all of the Google Fonts collection is composed of libre-licensed fonts,\n        this check enforces a policy that there must be a hypertext link in that page\n        directing users to the repository where the font project files are\n        made available.\n\n        Such hosting is typically done on sites like Github, Gitlab, GNU Savannah or\n        any other git-based version control service.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Is this a proper HTML snippet?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/valid_html>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/cardo/DESCRIPTION.en_us.html is a propper HTML file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people write malformed HTML markup. This check should ensure the\n        file is good.\n\n        Additionally, when packaging families for being pushed to the `google/fonts`\n        git repo, if there is no DESCRIPTION.en_us.html file, some older versions of\n        the `add_font.py` tool insert a placeholder description file which contains\n        invalid html. This file needs to either be replaced with an existing\n        description file or edited by hand.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html must have more than 200 bytes.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/min_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "DESCRIPTION.en_us.html is larger than 200 bytes.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html should end in a linebreak.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/eof_linebreak>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The last characther on DESCRIPTION.en_us.html is not a line-break. Please add it. [code: missing-eof-linebreak]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some older text-handling tools sometimes misbehave if the last line of data\n        in a text file is not terminated with a newline character (also known as '\\n').\n\n        We know that this is a very small detail, but for the sake of keeping all\n        DESCRIPTION.en_us.html files uniformly formatted throughout the GFonts\n        collection, we chose to adopt the practice of placing this final linebreak\n        character on them.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check METADATA.pb parse correctly.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/parses>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb parsed successfuly.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to ensure that the METADATA.pb file is not\n        malformed.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not be 'unknown'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unknown_designer>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font designer field is not 'unknown'.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not contain 'Multiple designers'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/multiple_designers>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        For a while the string \"Multiple designers\" was used as a placeholder on\n        METADATA.pb files. We should replace all those instances with actual designer\n        names so that proper credits are displayed on the Google Fonts family\n        specimen pages.\n\n        If there's more than a single designer, the designer names must be\n        separated by commas.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Multiple values in font designer field in METADATA.pb must be separated by commas.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We must use commas instead of forward slashes because the server-side code\n        at the fonts.google.com directory will segment the string on the commas into\n        a list of names and display the first item in the list as the\n        \"principal designer\" while the remaining names are identified as \"contributors\".\n\n        See eg https://fonts.google.com/specimen/Rubik\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does METADATA.pb copyright field contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/broken_links>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the METADATA.pb file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb lists all font binaries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/undeclared_fonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The set of font binaries available, except the ones on a \"static\" subdir,\n        must match exactly those declared on the METADATA.pb file.\n\n        Also, to avoid confusion, we expect that font files (other than statics)\n        are not placed on subdirectories.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb category field is valid.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are only five acceptable values for the category field in a METADATA.pb\n        file:\n\n        - MONOSPACE\n\n        - SANS_SERIF\n\n        - SERIF\n\n        - DISPLAY\n\n        - HANDWRITING\n\n        This check is meant to avoid typos in this field.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 fsType does not impose restrictions.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fstype>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsType is properly set to zero.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The fsType in the OS/2 table is a legacy DRM-related field. Fonts in the\n        Google Fonts collection must have it set to zero (also known as\n        \"Installable Embedding\"). This setting indicates that the fonts can be\n        embedded in documents and permanently installed by applications on\n        remote systems.\n\n        More detailed info is available at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/os2#fstype\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vendor_id>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 VendorID 'FSFS' looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft keeps a list of font vendors and their respective contact info. This\n        list is updated regularly and is indexed by a 4-char \"Vendor ID\" which is\n        stored in the achVendID field of the OS/2 table.\n\n        Registering your ID is not mandatory, but it is a good practice since some\n        applications may display the type designer / type foundry contact info on some\n        dialog and also because that info will be visible on Microsoft's website:\n\n        https://docs.microsoft.com/en-us/typography/vendors/\n\n        This check verifies whether or not a given font's vendor ID is registered in\n        that list or if it has some of the default values used by the most common\n        font editors.\n\n        Each new FontBakery release includes a cached copy of that list of vendor IDs.\n        If you registered recently, you're safe to ignore warnings emitted by this\n        check, since your ID will soon be included in one of our upcoming releases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check Google Fonts glyph coverage.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyph_coverage>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects that fonts in its collection support at least the minimal\n        set of characters defined in the `GF-latin-core` glyph-set.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check for METADATA subsets with zero support.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unsupported_subsets>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that the subsets specified on a METADATA.pb file are\n        actually supported (even if only partially) by the font files.\n\n        Subsets for which none of the codepoints are supported will cause the\n        check to FAIL.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check for codepoints not covered by METADATA subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unreachable_subsetting>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following codepoints supported by the font are not covered by\n    any subsets defined in the font's metadata file, and will never\n    be served. You can solve this by either manually adding additional\n    subset declarations to METADATA.pb, or by editing the glyphset\n    definitions.\n\n * U+0250 LATIN SMALL LETTER TURNED A: not included in any glyphset definition\n * U+0251 LATIN SMALL LETTER ALPHA: not included in any glyphset definition\n * U+0252 LATIN SMALL LETTER TURNED ALPHA: not included in any glyphset definition\n * U+0253 LATIN SMALL LETTER B WITH HOOK: not included in any glyphset definition\n * U+0254 LATIN SMALL LETTER OPEN O: not included in any glyphset definition\n * U+0255 LATIN SMALL LETTER C WITH CURL: not included in any glyphset definition\n * U+0256 LATIN SMALL LETTER D WITH TAIL: not included in any glyphset definition\n * U+0257 LATIN SMALL LETTER D WITH HOOK: not included in any glyphset definition\n * U+0258 LATIN SMALL LETTER REVERSED E: not included in any glyphset definition\n * U+025A LATIN SMALL LETTER SCHWA WITH HOOK: not included in any glyphset definition\n * U+025B LATIN SMALL LETTER OPEN E: not included in any glyphset definition\n * U+025C LATIN SMALL LETTER REVERSED OPEN E: not included in any glyphset definition\n * U+025D LATIN SMALL LETTER REVERSED OPEN E WITH HOOK: not included in any glyphset definition\n * U+025E LATIN SMALL LETTER CLOSED REVERSED OPEN E: not included in any glyphset definition\n * U+025F LATIN SMALL LETTER DOTLESS J WITH STROKE: not included in any glyphset definition\n * U+0260 LATIN SMALL LETTER G WITH HOOK: not included in any glyphset definition\n * U+0261 LATIN SMALL LETTER SCRIPT G: not included in any glyphset definition\n * U+0262 LATIN LETTER SMALL CAPITAL G: not included in any glyphset definition\n * U+0263 LATIN SMALL LETTER GAMMA: not included in any glyphset definition\n * U+0264 LATIN SMALL LETTER RAMS HORN: not included in any glyphset definition\n * U+0265 LATIN SMALL LETTER TURNED H: not included in any glyphset definition\n * U+0266 LATIN SMALL LETTER H WITH HOOK: not included in any glyphset definition\n * U+0267 LATIN SMALL LETTER HENG WITH HOOK: not included in any glyphset definition\n * U+0268 LATIN SMALL LETTER I WITH STROKE: not included in any glyphset definition\n * U+0269 LATIN SMALL LETTER IOTA: not included in any glyphset definition\n * U+026A LATIN LETTER SMALL CAPITAL I: not included in any glyphset definition\n * U+026B LATIN SMALL LETTER L WITH MIDDLE TILDE: not included in any glyphset definition\n * U+026C LATIN SMALL LETTER L WITH BELT: not included in any glyphset definition\n * U+026D LATIN SMALL LETTER L WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+026E LATIN SMALL LETTER LEZH: not included in any glyphset definition\n * U+026F LATIN SMALL LETTER TURNED M: not included in any glyphset definition\n * U+0270 LATIN SMALL LETTER TURNED M WITH LONG LEG: not included in any glyphset definition\n * U+0271 LATIN SMALL LETTER M WITH HOOK: not included in any glyphset definition\n * U+0272 LATIN SMALL LETTER N WITH LEFT HOOK: not included in any glyphset definition\n * U+0273 LATIN SMALL LETTER N WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0274 LATIN LETTER SMALL CAPITAL N: not included in any glyphset definition\n * U+0275 LATIN SMALL LETTER BARRED O: not included in any glyphset definition\n * U+0276 LATIN LETTER SMALL CAPITAL OE: not included in any glyphset definition\n * U+0277 LATIN SMALL LETTER CLOSED OMEGA: not included in any glyphset definition\n * U+0278 LATIN SMALL LETTER PHI: not included in any glyphset definition\n * U+0279 LATIN SMALL LETTER TURNED R: not included in any glyphset definition\n * U+027A LATIN SMALL LETTER TURNED R WITH LONG LEG: not included in any glyphset definition\n * U+027B LATIN SMALL LETTER TURNED R WITH HOOK: not included in any glyphset definition\n * U+027C LATIN SMALL LETTER R WITH LONG LEG: not included in any glyphset definition\n * U+027D LATIN SMALL LETTER R WITH TAIL: not included in any glyphset definition\n * U+027E LATIN SMALL LETTER R WITH FISHHOOK: not included in any glyphset definition\n * U+027F LATIN SMALL LETTER REVERSED R WITH FISHHOOK: not included in any glyphset definition\n * U+0280 LATIN LETTER SMALL CAPITAL R: not included in any glyphset definition\n * U+0281 LATIN LETTER SMALL CAPITAL INVERTED R: not included in any glyphset definition\n * U+0282 LATIN SMALL LETTER S WITH HOOK: not included in any glyphset definition\n * U+0283 LATIN SMALL LETTER ESH: not included in any glyphset definition\n * U+0284 LATIN SMALL LETTER DOTLESS J WITH STROKE AND HOOK: not included in any glyphset definition\n * U+0285 LATIN SMALL LETTER SQUAT REVERSED ESH: not included in any glyphset definition\n * U+0286 LATIN SMALL LETTER ESH WITH CURL: not included in any glyphset definition\n * U+0287 LATIN SMALL LETTER TURNED T: not included in any glyphset definition\n * U+0288 LATIN SMALL LETTER T WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0289 LATIN SMALL LETTER U BAR: not included in any glyphset definition\n * U+028A LATIN SMALL LETTER UPSILON: not included in any glyphset definition\n * U+028B LATIN SMALL LETTER V WITH HOOK: not included in any glyphset definition\n * U+028C LATIN SMALL LETTER TURNED V: not included in any glyphset definition\n * U+028D LATIN SMALL LETTER TURNED W: not included in any glyphset definition\n * U+028E LATIN SMALL LETTER TURNED Y: not included in any glyphset definition\n * U+028F LATIN LETTER SMALL CAPITAL Y: not included in any glyphset definition\n * U+0290 LATIN SMALL LETTER Z WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0291 LATIN SMALL LETTER Z WITH CURL: not included in any glyphset definition\n * U+0292 LATIN SMALL LETTER EZH: not included in any glyphset definition\n * U+0293 LATIN SMALL LETTER EZH WITH CURL: not included in any glyphset definition\n * U+0294 LATIN LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+0295 LATIN LETTER PHARYNGEAL VOICED FRICATIVE: not included in any glyphset definition\n * U+0296 LATIN LETTER INVERTED GLOTTAL STOP: not included in any glyphset definition\n * U+0297 LATIN LETTER STRETCHED C: not included in any glyphset definition\n * U+0298 LATIN LETTER BILABIAL CLICK: not included in any glyphset definition\n * U+0299 LATIN LETTER SMALL CAPITAL B: not included in any glyphset definition\n * U+029A LATIN SMALL LETTER CLOSED OPEN E: not included in any glyphset definition\n * U+029B LATIN LETTER SMALL CAPITAL G WITH HOOK: not included in any glyphset definition\n * U+029C LATIN LETTER SMALL CAPITAL H: not included in any glyphset definition\n * U+029D LATIN SMALL LETTER J WITH CROSSED-TAIL: not included in any glyphset definition\n * U+029E LATIN SMALL LETTER TURNED K: not included in any glyphset definition\n * U+029F LATIN LETTER SMALL CAPITAL L: not included in any glyphset definition\n * U+02A0 LATIN SMALL LETTER Q WITH HOOK: not included in any glyphset definition\n * U+02A1 LATIN LETTER GLOTTAL STOP WITH STROKE: not included in any glyphset definition\n * U+02A2 LATIN LETTER REVERSED GLOTTAL STOP WITH STROKE: not included in any glyphset definition\n * U+02A3 LATIN SMALL LETTER DZ DIGRAPH: not included in any glyphset definition\n * U+02A4 LATIN SMALL LETTER DEZH DIGRAPH: not included in any glyphset definition\n * U+02A5 LATIN SMALL LETTER DZ DIGRAPH WITH CURL: not included in any glyphset definition\n * U+02A6 LATIN SMALL LETTER TS DIGRAPH: not included in any glyphset definition\n * U+02A7 LATIN SMALL LETTER TESH DIGRAPH: not included in any glyphset definition\n * U+02A8 LATIN SMALL LETTER TC DIGRAPH WITH CURL: not included in any glyphset definition\n * U+02A9 LATIN SMALL LETTER FENG DIGRAPH: not included in any glyphset definition\n * U+02AA LATIN SMALL LETTER LS DIGRAPH: not included in any glyphset definition\n * U+02AB LATIN SMALL LETTER LZ DIGRAPH: not included in any glyphset definition\n * U+02AC LATIN LETTER BILABIAL PERCUSSIVE: not included in any glyphset definition\n * U+02AD LATIN LETTER BIDENTAL PERCUSSIVE: not included in any glyphset definition\n * U+02AE LATIN SMALL LETTER TURNED H WITH FISHHOOK: not included in any glyphset definition\n * U+02AF LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL: not included in any glyphset definition\n * U+02B0 MODIFIER LETTER SMALL H: not included in any glyphset definition\n * U+02B1 MODIFIER LETTER SMALL H WITH HOOK: not included in any glyphset definition\n * U+02B2 MODIFIER LETTER SMALL J: not included in any glyphset definition\n * U+02B3 MODIFIER LETTER SMALL R: not included in any glyphset definition\n * U+02B4 MODIFIER LETTER SMALL TURNED R: not included in any glyphset definition\n * U+02B5 MODIFIER LETTER SMALL TURNED R WITH HOOK: not included in any glyphset definition\n * U+02B6 MODIFIER LETTER SMALL CAPITAL INVERTED R: not included in any glyphset definition\n * U+02B7 MODIFIER LETTER SMALL W: not included in any glyphset definition\n * U+02B8 MODIFIER LETTER SMALL Y: not included in any glyphset definition\n * U+02B9 MODIFIER LETTER PRIME: not included in any glyphset definition\n * U+02BA MODIFIER LETTER DOUBLE PRIME: not included in any glyphset definition\n * U+02BD MODIFIER LETTER REVERSED COMMA: not included in any glyphset definition\n * U+02BE MODIFIER LETTER RIGHT HALF RING: not included in any glyphset definition\n * U+02BF MODIFIER LETTER LEFT HALF RING: not included in any glyphset definition\n * U+02C0 MODIFIER LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+02C1 MODIFIER LETTER REVERSED GLOTTAL STOP: not included in any glyphset definition\n * U+02C2 MODIFIER LETTER LEFT ARROWHEAD: not included in any glyphset definition\n * U+02C3 MODIFIER LETTER RIGHT ARROWHEAD: not included in any glyphset definition\n * U+02C4 MODIFIER LETTER UP ARROWHEAD: not included in any glyphset definition\n * U+02C5 MODIFIER LETTER DOWN ARROWHEAD: not included in any glyphset definition\n * U+02C7 CARON: try adding one of: tifinagh, canadian-aboriginal\n * U+02C8 MODIFIER LETTER VERTICAL LINE: not included in any glyphset definition\n * U+02C9 MODIFIER LETTER MACRON: not included in any glyphset definition\n * U+02CA MODIFIER LETTER ACUTE ACCENT: not included in any glyphset definition\n * U+02CB MODIFIER LETTER GRAVE ACCENT: not included in any glyphset definition\n * U+02CC MODIFIER LETTER LOW VERTICAL LINE: not included in any glyphset definition\n * U+02CD MODIFIER LETTER LOW MACRON: try adding lisu\n * U+02CE MODIFIER LETTER LOW GRAVE ACCENT: not included in any glyphset definition\n * U+02CF MODIFIER LETTER LOW ACUTE ACCENT: not included in any glyphset definition\n * U+02D0 MODIFIER LETTER TRIANGULAR COLON: not included in any glyphset definition\n * U+02D1 MODIFIER LETTER HALF TRIANGULAR COLON: not included in any glyphset definition\n * U+02D2 MODIFIER LETTER CENTRED RIGHT HALF RING: not included in any glyphset definition\n * U+02D3 MODIFIER LETTER CENTRED LEFT HALF RING: not included in any glyphset definition\n * U+02D4 MODIFIER LETTER UP TACK: not included in any glyphset definition\n * U+02D5 MODIFIER LETTER DOWN TACK: not included in any glyphset definition\n * U+02D6 MODIFIER LETTER PLUS SIGN: not included in any glyphset definition\n * U+02D7 MODIFIER LETTER MINUS SIGN: not included in any glyphset definition\n * U+02D8 BREVE: try adding canadian-aboriginal\n * U+02D9 DOT ABOVE: try adding canadian-aboriginal\n * U+02DB OGONEK: try adding canadian-aboriginal\n * U+02DD DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+02DE MODIFIER LETTER RHOTIC HOOK: not included in any glyphset definition\n * U+02DF MODIFIER LETTER CROSS ACCENT: not included in any glyphset definition\n * U+02E0 MODIFIER LETTER SMALL GAMMA: not included in any glyphset definition\n * U+02E1 MODIFIER LETTER SMALL L: not included in any glyphset definition\n * U+02E2 MODIFIER LETTER SMALL S: not included in any glyphset definition\n * U+02E3 MODIFIER LETTER SMALL X: not included in any glyphset definition\n * U+02E4 MODIFIER LETTER SMALL REVERSED GLOTTAL STOP: not included in any glyphset definition\n * U+02E5 MODIFIER LETTER EXTRA-HIGH TONE BAR: not included in any glyphset definition\n * U+02E6 MODIFIER LETTER HIGH TONE BAR: not included in any glyphset definition\n * U+02E7 MODIFIER LETTER MID TONE BAR: not included in any glyphset definition\n * U+02E8 MODIFIER LETTER LOW TONE BAR: not included in any glyphset definition\n * U+02E9 MODIFIER LETTER EXTRA-LOW TONE BAR: not included in any glyphset definition\n * U+02EA MODIFIER LETTER YIN DEPARTING TONE MARK: not included in any glyphset definition\n * U+02EB MODIFIER LETTER YANG DEPARTING TONE MARK: not included in any glyphset definition\n * U+02EC MODIFIER LETTER VOICING: not included in any glyphset definition\n * U+02ED MODIFIER LETTER UNASPIRATED: not included in any glyphset definition\n * U+02EE MODIFIER LETTER DOUBLE APOSTROPHE: not included in any glyphset definition\n * U+02EF MODIFIER LETTER LOW DOWN ARROWHEAD: not included in any glyphset definition\n * U+02F0 MODIFIER LETTER LOW UP ARROWHEAD: not included in any glyphset definition\n * U+02F1 MODIFIER LETTER LOW LEFT ARROWHEAD: not included in any glyphset definition\n * U+02F2 MODIFIER LETTER LOW RIGHT ARROWHEAD: not included in any glyphset definition\n * U+02F3 MODIFIER LETTER LOW RING: not included in any glyphset definition\n * U+02F4 MODIFIER LETTER MIDDLE GRAVE ACCENT: not included in any glyphset definition\n * U+02F5 MODIFIER LETTER MIDDLE DOUBLE GRAVE ACCENT: not included in any glyphset definition\n * U+02F6 MODIFIER LETTER MIDDLE DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+02F7 MODIFIER LETTER LOW TILDE: not included in any glyphset definition\n * U+02F8 MODIFIER LETTER RAISED COLON: not included in any glyphset definition\n * U+02F9 MODIFIER LETTER BEGIN HIGH TONE: not included in any glyphset definition\n * U+02FA MODIFIER LETTER END HIGH TONE: not included in any glyphset definition\n * U+02FB MODIFIER LETTER BEGIN LOW TONE: not included in any glyphset definition\n * U+02FC MODIFIER LETTER END LOW TONE: not included in any glyphset definition\n * U+02FD MODIFIER LETTER SHELF: not included in any glyphset definition\n * U+02FE MODIFIER LETTER OPEN SHELF: not included in any glyphset definition\n * U+02FF MODIFIER LETTER LOW LEFT ARROW: not included in any glyphset definition\n * U+0300 COMBINING GRAVE ACCENT: try adding one of: coptic, cherokee, tai-le\n * U+0301 COMBINING ACUTE ACCENT: try adding one of: coptic, tifinagh, cherokee, tai-le\n * U+0302 COMBINING CIRCUMFLEX ACCENT: try adding one of: coptic, tifinagh, cherokee\n * U+0303 COMBINING TILDE: not included in any glyphset definition\n * U+0304 COMBINING MACRON: try adding one of: coptic, tifinagh, cherokee, gothic\n * U+0305 COMBINING OVERLINE: try adding one of: coptic, gothic\n * U+0306 COMBINING BREVE: try adding tifinagh\n * U+0307 COMBINING DOT ABOVE: try adding one of: tifinagh, malayalam, canadian-aboriginal, tai-le, coptic\n * U+0308 COMBINING DIAERESIS: try adding one of: coptic, tai-le, gothic\n * U+0309 COMBINING HOOK ABOVE: try adding tifinagh\n * U+030A COMBINING RING ABOVE: not included in any glyphset definition\n * U+030B COMBINING DOUBLE ACUTE ACCENT: try adding cherokee\n * U+030C COMBINING CARON: try adding one of: cherokee, tai-le\n * U+030D COMBINING VERTICAL LINE ABOVE: not included in any glyphset definition\n * U+030E COMBINING DOUBLE VERTICAL LINE ABOVE: not included in any glyphset definition\n * U+030F COMBINING DOUBLE GRAVE ACCENT: not included in any glyphset definition\n * U+0310 COMBINING CANDRABINDU: not included in any glyphset definition\n * U+0311 COMBINING INVERTED BREVE: try adding coptic\n * U+0312 COMBINING TURNED COMMA ABOVE: not included in any glyphset definition\n * U+0313 COMBINING COMMA ABOVE: not included in any glyphset definition\n * U+0314 COMBINING REVERSED COMMA ABOVE: not included in any glyphset definition\n * U+0315 COMBINING COMMA ABOVE RIGHT: not included in any glyphset definition\n * U+0316 COMBINING GRAVE ACCENT BELOW: not included in any glyphset definition\n * U+0317 COMBINING ACUTE ACCENT BELOW: not included in any glyphset definition\n * U+0318 COMBINING LEFT TACK BELOW: not included in any glyphset definition\n * U+0319 COMBINING RIGHT TACK BELOW: not included in any glyphset definition\n * U+031A COMBINING LEFT ANGLE ABOVE: not included in any glyphset definition\n * U+031B COMBINING HORN: not included in any glyphset definition\n * U+031C COMBINING LEFT HALF RING BELOW: not included in any glyphset definition\n * U+031D COMBINING UP TACK BELOW: not included in any glyphset definition\n * U+031E COMBINING DOWN TACK BELOW: not included in any glyphset definition\n * U+031F COMBINING PLUS SIGN BELOW: not included in any glyphset definition\n * U+0320 COMBINING MINUS SIGN BELOW: not included in any glyphset definition\n * U+0321 COMBINING PALATALIZED HOOK BELOW: not included in any glyphset definition\n * U+0322 COMBINING RETROFLEX HOOK BELOW: not included in any glyphset definition\n * U+0323 COMBINING DOT BELOW: try adding one of: coptic, tifinagh, malayalam, cherokee\n * U+0324 COMBINING DIAERESIS BELOW: try adding cherokee\n * U+0325 COMBINING RING BELOW: not included in any glyphset definition\n * U+0326 COMBINING COMMA BELOW: not included in any glyphset definition\n * U+0327 COMBINING CEDILLA: not included in any glyphset definition\n * U+0328 COMBINING OGONEK: not included in any glyphset definition\n * U+0329 COMBINING VERTICAL LINE BELOW: not included in any glyphset definition\n * U+032A COMBINING BRIDGE BELOW: not included in any glyphset definition\n * U+032B COMBINING INVERTED DOUBLE ARCH BELOW: not included in any glyphset definition\n * U+032C COMBINING CARON BELOW: not included in any glyphset definition\n * U+032D COMBINING CIRCUMFLEX ACCENT BELOW: not included in any glyphset definition\n * U+032E COMBINING BREVE BELOW: not included in any glyphset definition\n * U+032F COMBINING INVERTED BREVE BELOW: not included in any glyphset definition\n * U+0330 COMBINING TILDE BELOW: try adding cherokee\n * U+0331 COMBINING MACRON BELOW: try adding one of: tifinagh, cherokee, gothic\n * U+0332 COMBINING LOW LINE: not included in any glyphset definition\n * U+0333 COMBINING DOUBLE LOW LINE: not included in any glyphset definition\n * U+0334 COMBINING TILDE OVERLAY: not included in any glyphset definition\n * U+0335 COMBINING SHORT STROKE OVERLAY: not included in any glyphset definition\n * U+0336 COMBINING LONG STROKE OVERLAY: not included in any glyphset definition\n * U+0337 COMBINING SHORT SOLIDUS OVERLAY: not included in any glyphset definition\n * U+0338 COMBINING LONG SOLIDUS OVERLAY: not included in any glyphset definition\n * U+0339 COMBINING RIGHT HALF RING BELOW: not included in any glyphset definition\n * U+033A COMBINING INVERTED BRIDGE BELOW: not included in any glyphset definition\n * U+033B COMBINING SQUARE BELOW: not included in any glyphset definition\n * U+033C COMBINING SEAGULL BELOW: not included in any glyphset definition\n * U+033D COMBINING X ABOVE: not included in any glyphset definition\n * U+033E COMBINING VERTICAL TILDE: not included in any glyphset definition\n * U+033F COMBINING DOUBLE OVERLINE: try adding coptic\n * U+0340 COMBINING GRAVE TONE MARK: not included in any glyphset definition\n * U+0341 COMBINING ACUTE TONE MARK: not included in any glyphset definition\n * U+0342 COMBINING GREEK PERISPOMENI: not included in any glyphset definition\n * U+0343 COMBINING GREEK KORONIS: not included in any glyphset definition\n * U+0344 COMBINING GREEK DIALYTIKA TONOS: not included in any glyphset definition\n * U+0345 COMBINING GREEK YPOGEGRAMMENI: not included in any glyphset definition\n * U+0346 COMBINING BRIDGE ABOVE: not included in any glyphset definition\n * U+0347 COMBINING EQUALS SIGN BELOW: not included in any glyphset definition\n * U+0348 COMBINING DOUBLE VERTICAL LINE BELOW: not included in any glyphset definition\n * U+0349 COMBINING LEFT ANGLE BELOW: not included in any glyphset definition\n * U+034A COMBINING NOT TILDE ABOVE: not included in any glyphset definition\n * U+034B COMBINING HOMOTHETIC ABOVE: not included in any glyphset definition\n * U+034C COMBINING ALMOST EQUAL TO ABOVE: not included in any glyphset definition\n * U+034D COMBINING LEFT RIGHT ARROW BELOW: not included in any glyphset definition\n * U+034E COMBINING UPWARDS ARROW BELOW: not included in any glyphset definition\n * U+034F COMBINING GRAPHEME JOINER: not included in any glyphset definition\n * U+0350 COMBINING RIGHT ARROWHEAD ABOVE: not included in any glyphset definition\n * U+0351 COMBINING LEFT HALF RING ABOVE: not included in any glyphset definition\n * U+0352 COMBINING FERMATA: not included in any glyphset definition\n * U+0353 COMBINING X BELOW: not included in any glyphset definition\n * U+0354 COMBINING LEFT ARROWHEAD BELOW: not included in any glyphset definition\n * U+0355 COMBINING RIGHT ARROWHEAD BELOW: not included in any glyphset definition\n * U+0356 COMBINING RIGHT ARROWHEAD AND UP ARROWHEAD BELOW: not included in any glyphset definition\n * U+0357 COMBINING RIGHT HALF RING ABOVE: not included in any glyphset definition\n * U+0358 COMBINING DOT ABOVE RIGHT: not included in any glyphset definition\n * U+0359 COMBINING ASTERISK BELOW: not included in any glyphset definition\n * U+035A COMBINING DOUBLE RING BELOW: not included in any glyphset definition\n * U+035B COMBINING ZIGZAG ABOVE: not included in any glyphset definition\n * U+035C COMBINING DOUBLE BREVE BELOW: not included in any glyphset definition\n * U+035D COMBINING DOUBLE BREVE: not included in any glyphset definition\n * U+035E COMBINING DOUBLE MACRON: try adding coptic\n * U+035F COMBINING DOUBLE MACRON BELOW: not included in any glyphset definition\n * U+0360 COMBINING DOUBLE TILDE: not included in any glyphset definition\n * U+0361 COMBINING DOUBLE INVERTED BREVE: try adding coptic\n * U+0362 COMBINING DOUBLE RIGHTWARDS ARROW BELOW: not included in any glyphset definition\n * U+0363 COMBINING LATIN SMALL LETTER A: not included in any glyphset definition\n * U+0364 COMBINING LATIN SMALL LETTER E: not included in any glyphset definition\n * U+0365 COMBINING LATIN SMALL LETTER I: not included in any glyphset definition\n * U+0366 COMBINING LATIN SMALL LETTER O: not included in any glyphset definition\n * U+0367 COMBINING LATIN SMALL LETTER U: not included in any glyphset definition\n * U+0368 COMBINING LATIN SMALL LETTER C: not included in any glyphset definition\n * U+0369 COMBINING LATIN SMALL LETTER D: not included in any glyphset definition\n * U+036A COMBINING LATIN SMALL LETTER H: not included in any glyphset definition\n * U+036B COMBINING LATIN SMALL LETTER M: not included in any glyphset definition\n * U+036C COMBINING LATIN SMALL LETTER R: not included in any glyphset definition\n * U+036D COMBINING LATIN SMALL LETTER T: not included in any glyphset definition\n * U+036E COMBINING LATIN SMALL LETTER V: not included in any glyphset definition\n * U+036F COMBINING LATIN SMALL LETTER X: not included in any glyphset definition\n * U+0485 COMBINING CYRILLIC DASIA PNEUMATA: try adding cyrillic-ext\n * U+0486 COMBINING CYRILLIC PSILI PNEUMATA: try adding cyrillic-ext\n * U+0591 HEBREW ACCENT ETNAHTA: not included in any glyphset definition\n * U+0592 HEBREW ACCENT SEGOL: not included in any glyphset definition\n * U+0593 HEBREW ACCENT SHALSHELET: not included in any glyphset definition\n * U+0594 HEBREW ACCENT ZAQEF QATAN: not included in any glyphset definition\n * U+0595 HEBREW ACCENT ZAQEF GADOL: not included in any glyphset definition\n * U+0596 HEBREW ACCENT TIPEHA: not included in any glyphset definition\n * U+0597 HEBREW ACCENT REVIA: not included in any glyphset definition\n * U+0598 HEBREW ACCENT ZARQA: not included in any glyphset definition\n * U+0599 HEBREW ACCENT PASHTA: not included in any glyphset definition\n * U+059A HEBREW ACCENT YETIV: not included in any glyphset definition\n * U+059B HEBREW ACCENT TEVIR: not included in any glyphset definition\n * U+059C HEBREW ACCENT GERESH: not included in any glyphset definition\n * U+059D HEBREW ACCENT GERESH MUQDAM: not included in any glyphset definition\n * U+059E HEBREW ACCENT GERSHAYIM: not included in any glyphset definition\n * U+059F HEBREW ACCENT QARNEY PARA: not included in any glyphset definition\n * U+05A0 HEBREW ACCENT TELISHA GEDOLA: not included in any glyphset definition\n * U+05A1 HEBREW ACCENT PAZER: not included in any glyphset definition\n * U+05A2 HEBREW ACCENT ATNAH HAFUKH: not included in any glyphset definition\n * U+05A3 HEBREW ACCENT MUNAH: not included in any glyphset definition\n * U+05A4 HEBREW ACCENT MAHAPAKH: not included in any glyphset definition\n * U+05A5 HEBREW ACCENT MERKHA: not included in any glyphset definition\n * U+05A6 HEBREW ACCENT MERKHA KEFULA: not included in any glyphset definition\n * U+05A7 HEBREW ACCENT DARGA: not included in any glyphset definition\n * U+05A8 HEBREW ACCENT QADMA: not included in any glyphset definition\n * U+05A9 HEBREW ACCENT TELISHA QETANA: not included in any glyphset definition\n * U+05AA HEBREW ACCENT YERAH BEN YOMO: not included in any glyphset definition\n * U+05AB HEBREW ACCENT OLE: not included in any glyphset definition\n * U+05AC HEBREW ACCENT ILUY: not included in any glyphset definition\n * U+05AD HEBREW ACCENT DEHI: not included in any glyphset definition\n * U+05AE HEBREW ACCENT ZINOR: not included in any glyphset definition\n * U+05AF HEBREW MARK MASORA CIRCLE: not included in any glyphset definition\n * U+05BD HEBREW POINT METEG: not included in any glyphset definition\n * U+05BF HEBREW POINT RAFE: not included in any glyphset definition\n * U+05C4 HEBREW MARK UPPER DOT: not included in any glyphset definition\n * U+05C5 HEBREW MARK LOWER DOT: not included in any glyphset definition\n * U+05C6 HEBREW PUNCTUATION NUN HAFUKHA: not included in any glyphset definition\n * U+05F0 HEBREW LIGATURE YIDDISH DOUBLE VAV: not included in any glyphset definition\n * U+05F1 HEBREW LIGATURE YIDDISH VAV YOD: not included in any glyphset definition\n * U+05F2 HEBREW LIGATURE YIDDISH DOUBLE YOD: not included in any glyphset definition\n * U+0660 ARABIC-INDIC DIGIT ZERO: try adding one of: thaana, arabic\n * U+0661 ARABIC-INDIC DIGIT ONE: try adding one of: thaana, arabic\n * U+0662 ARABIC-INDIC DIGIT TWO: try adding one of: thaana, arabic\n * U+0663 ARABIC-INDIC DIGIT THREE: try adding one of: thaana, arabic\n * U+0664 ARABIC-INDIC DIGIT FOUR: try adding one of: thaana, arabic\n * U+0665 ARABIC-INDIC DIGIT FIVE: try adding one of: thaana, arabic\n * U+0666 ARABIC-INDIC DIGIT SIX: try adding one of: thaana, arabic\n * U+0667 ARABIC-INDIC DIGIT SEVEN: try adding one of: thaana, arabic\n * U+0668 ARABIC-INDIC DIGIT EIGHT: try adding one of: thaana, arabic\n * U+0669 ARABIC-INDIC DIGIT NINE: try adding one of: thaana, arabic\n * U+10FB GEORGIAN PARAGRAPH SEPARATOR: not included in any glyphset definition\n * U+16A0 RUNIC LETTER FEHU FEOH FE F: try adding runic\n * U+16A1 RUNIC LETTER V: try adding runic\n * U+16A2 RUNIC LETTER URUZ UR U: try adding runic\n * U+16A3 RUNIC LETTER YR: try adding runic\n * U+16A4 RUNIC LETTER Y: try adding runic\n * U+16A5 RUNIC LETTER W: try adding runic\n * U+16A6 RUNIC LETTER THURISAZ THURS THORN: try adding runic\n * U+16A7 RUNIC LETTER ETH: try adding runic\n * U+16A8 RUNIC LETTER ANSUZ A: try adding runic\n * U+16A9 RUNIC LETTER OS O: try adding runic\n * U+16AA RUNIC LETTER AC A: try adding runic\n * U+16AB RUNIC LETTER AESC: try adding runic\n * U+16AC RUNIC LETTER LONG-BRANCH-OSS O: try adding runic\n * U+16AD RUNIC LETTER SHORT-TWIG-OSS O: try adding runic\n * U+16AE RUNIC LETTER O: try adding runic\n * U+16AF RUNIC LETTER OE: try adding runic\n * U+16B0 RUNIC LETTER ON: try adding runic\n * U+16B1 RUNIC LETTER RAIDO RAD REID R: try adding runic\n * U+16B2 RUNIC LETTER KAUNA: try adding runic\n * U+16B3 RUNIC LETTER CEN: try adding runic\n * U+16B4 RUNIC LETTER KAUN K: try adding runic\n * U+16B5 RUNIC LETTER G: try adding runic\n * U+16B6 RUNIC LETTER ENG: try adding runic\n * U+16B7 RUNIC LETTER GEBO GYFU G: try adding runic\n * U+16B8 RUNIC LETTER GAR: try adding runic\n * U+16B9 RUNIC LETTER WUNJO WYNN W: try adding runic\n * U+16BA RUNIC LETTER HAGLAZ H: try adding runic\n * U+16BB RUNIC LETTER HAEGL H: try adding runic\n * U+16BC RUNIC LETTER LONG-BRANCH-HAGALL H: try adding runic\n * U+16BD RUNIC LETTER SHORT-TWIG-HAGALL H: try adding runic\n * U+16BE RUNIC LETTER NAUDIZ NYD NAUD N: try adding runic\n * U+16BF RUNIC LETTER SHORT-TWIG-NAUD N: try adding runic\n * U+16C0 RUNIC LETTER DOTTED-N: try adding runic\n * U+16C1 RUNIC LETTER ISAZ IS ISS I: try adding runic\n * U+16C2 RUNIC LETTER E: try adding runic\n * U+16C3 RUNIC LETTER JERAN J: try adding runic\n * U+16C4 RUNIC LETTER GER: try adding runic\n * U+16C5 RUNIC LETTER LONG-BRANCH-AR AE: try adding runic\n * U+16C6 RUNIC LETTER SHORT-TWIG-AR A: try adding runic\n * U+16C7 RUNIC LETTER IWAZ EOH: try adding runic\n * U+16C8 RUNIC LETTER PERTHO PEORTH P: try adding runic\n * U+16C9 RUNIC LETTER ALGIZ EOLHX: try adding runic\n * U+16CA RUNIC LETTER SOWILO S: try adding runic\n * U+16CB RUNIC LETTER SIGEL LONG-BRANCH-SOL S: try adding runic\n * U+16CC RUNIC LETTER SHORT-TWIG-SOL S: try adding runic\n * U+16CD RUNIC LETTER C: try adding runic\n * U+16CE RUNIC LETTER Z: try adding runic\n * U+16CF RUNIC LETTER TIWAZ TIR TYR T: try adding runic\n * U+16D0 RUNIC LETTER SHORT-TWIG-TYR T: try adding runic\n * U+16D1 RUNIC LETTER D: try adding runic\n * U+16D2 RUNIC LETTER BERKANAN BEORC BJARKAN B: try adding runic\n * U+16D3 RUNIC LETTER SHORT-TWIG-BJARKAN B: try adding runic\n * U+16D4 RUNIC LETTER DOTTED-P: try adding runic\n * U+16D5 RUNIC LETTER OPEN-P: try adding runic\n * U+16D6 RUNIC LETTER EHWAZ EH E: try adding runic\n * U+16D7 RUNIC LETTER MANNAZ MAN M: try adding runic\n * U+16D8 RUNIC LETTER LONG-BRANCH-MADR M: try adding runic\n * U+16D9 RUNIC LETTER SHORT-TWIG-MADR M: try adding runic\n * U+16DA RUNIC LETTER LAUKAZ LAGU LOGR L: try adding runic\n * U+16DB RUNIC LETTER DOTTED-L: try adding runic\n * U+16DC RUNIC LETTER INGWAZ: try adding runic\n * U+16DD RUNIC LETTER ING: try adding runic\n * U+16DE RUNIC LETTER DAGAZ DAEG D: try adding runic\n * U+16DF RUNIC LETTER OTHALAN ETHEL O: try adding runic\n * U+16E0 RUNIC LETTER EAR: try adding runic\n * U+16E1 RUNIC LETTER IOR: try adding runic\n * U+16E2 RUNIC LETTER CWEORTH: try adding runic\n * U+16E3 RUNIC LETTER CALC: try adding runic\n * U+16E4 RUNIC LETTER CEALC: try adding runic\n * U+16E5 RUNIC LETTER STAN: try adding runic\n * U+16E6 RUNIC LETTER LONG-BRANCH-YR: try adding runic\n * U+16E7 RUNIC LETTER SHORT-TWIG-YR: try adding runic\n * U+16E8 RUNIC LETTER ICELANDIC-YR: try adding runic\n * U+16E9 RUNIC LETTER Q: try adding runic\n * U+16EA RUNIC LETTER X: try adding runic\n * U+16EB RUNIC SINGLE PUNCTUATION: try adding runic\n * U+16EC RUNIC MULTIPLE PUNCTUATION: try adding runic\n * U+16ED RUNIC CROSS PUNCTUATION: try adding runic\n * U+16EE RUNIC ARLAUG SYMBOL: try adding runic\n * U+16EF RUNIC TVIMADUR SYMBOL: try adding runic\n * U+16F0 RUNIC BELGTHOR SYMBOL: try adding runic\n * U+1D00 LATIN LETTER SMALL CAPITAL A: not included in any glyphset definition\n * U+1D01 LATIN LETTER SMALL CAPITAL AE: not included in any glyphset definition\n * U+1D04 LATIN LETTER SMALL CAPITAL C: not included in any glyphset definition\n * U+1D05 LATIN LETTER SMALL CAPITAL D: not included in any glyphset definition\n * U+1D06 LATIN LETTER SMALL CAPITAL ETH: not included in any glyphset definition\n * U+1D07 LATIN LETTER SMALL CAPITAL E: not included in any glyphset definition\n * U+1D0A LATIN LETTER SMALL CAPITAL J: not included in any glyphset definition\n * U+1D0B LATIN LETTER SMALL CAPITAL K: not included in any glyphset definition\n * U+1D0C LATIN LETTER SMALL CAPITAL L WITH STROKE: not included in any glyphset definition\n * U+1D0D LATIN LETTER SMALL CAPITAL M: not included in any glyphset definition\n * U+1D0F LATIN LETTER SMALL CAPITAL O: not included in any glyphset definition\n * U+1D18 LATIN LETTER SMALL CAPITAL P: not included in any glyphset definition\n * U+1D1B LATIN LETTER SMALL CAPITAL T: not included in any glyphset definition\n * U+1D1C LATIN LETTER SMALL CAPITAL U: not included in any glyphset definition\n * U+1D20 LATIN LETTER SMALL CAPITAL V: not included in any glyphset definition\n * U+1D21 LATIN LETTER SMALL CAPITAL W: not included in any glyphset definition\n * U+1D22 LATIN LETTER SMALL CAPITAL Z: not included in any glyphset definition\n * U+1D23 LATIN LETTER SMALL CAPITAL EZH: not included in any glyphset definition\n * U+1D6B LATIN SMALL LETTER UE: not included in any glyphset definition\n * U+1DC0 COMBINING DOTTED GRAVE ACCENT: not included in any glyphset definition\n * U+1DC1 COMBINING DOTTED ACUTE ACCENT: not included in any glyphset definition\n * U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW: try adding vietnamese\n * U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW: try adding vietnamese\n * U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE: try adding vietnamese\n * U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE: try adding vietnamese\n * U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE: try adding vietnamese\n * U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE: try adding vietnamese\n * U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW: try adding vietnamese\n * U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW: try adding vietnamese\n * U+1EBC LATIN CAPITAL LETTER E WITH TILDE: try adding vietnamese\n * U+1EBD LATIN SMALL LETTER E WITH TILDE: try adding vietnamese\n * U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE: try adding vietnamese\n * U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE: try adding vietnamese\n * U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW: try adding vietnamese\n * U+1ECB LATIN SMALL LETTER I WITH DOT BELOW: try adding vietnamese\n * U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW: try adding vietnamese\n * U+1ECD LATIN SMALL LETTER O WITH DOT BELOW: try adding vietnamese\n * U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE: try adding vietnamese\n * U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE: try adding vietnamese\n * U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW: try adding vietnamese\n * U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW: try adding vietnamese\n * U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE: try adding vietnamese\n * U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE: try adding vietnamese\n * U+2000 EN QUAD: not included in any glyphset definition\n * U+2001 EM QUAD: not included in any glyphset definition\n * U+2003 EM SPACE: not included in any glyphset definition\n * U+2004 THREE-PER-EM SPACE: not included in any glyphset definition\n * U+2005 FOUR-PER-EM SPACE: not included in any glyphset definition\n * U+2006 SIX-PER-EM SPACE: not included in any glyphset definition\n * U+2007 FIGURE SPACE: not included in any glyphset definition\n * U+2008 PUNCTUATION SPACE: not included in any glyphset definition\n * U+200A HAIR SPACE: not included in any glyphset definition\n * U+200C ZERO WIDTH NON-JOINER: try adding one of: thaana, tai-viet, tamil, saurashtra, kaithi, buginese, limbu, javanese, tagbanwa, avestan, gujarati, gurmukhi, devanagari, batak, phags-pa, sundanese, kayah-li, malayalam, syloti-nagri, khmer, sinhala, tai-tham, cham, balinese, rejang, myanmar, chakma, tifinagh, buhid, mandaic, tibetan, arabic, mongolian, telugu, new-tai-lue, hanunoo, oriya, tai-le, lepcha, kharoshthi, bengali, brahmi, kannada, meetei-mayek, thai, tagalog\n * U+200D ZERO WIDTH JOINER: try adding one of: thaana, tai-viet, tamil, saurashtra, kaithi, buginese, limbu, javanese, tagbanwa, avestan, gujarati, gurmukhi, devanagari, batak, phags-pa, sundanese, kayah-li, malayalam, syloti-nagri, sinhala, tai-tham, cham, balinese, rejang, myanmar, chakma, tifinagh, buhid, mandaic, tibetan, arabic, mongolian, telugu, new-tai-lue, hanunoo, oriya, tai-le, lepcha, kharoshthi, bengali, brahmi, kannada, meetei-mayek, thai, tagalog\n * U+200E LEFT-TO-RIGHT MARK: try adding one of: thaana, phags-pa, arabic\n * U+200F RIGHT-TO-LEFT MARK: try adding one of: thaana, phags-pa\n * U+2010 HYPHEN: try adding one of: cham, sundanese, kaithi, lisu, kayah-li, arabic, syloti-nagri, coptic, kharoshthi\n * U+2011 NON-BREAKING HYPHEN: try adding one of: arabic, syloti-nagri\n * U+2012 FIGURE DASH: not included in any glyphset definition\n * U+2015 HORIZONTAL BAR: not included in any glyphset definition\n * U+2016 DOUBLE VERTICAL LINE: not included in any glyphset definition\n * U+201B SINGLE HIGH-REVERSED-9 QUOTATION MARK: not included in any glyphset definition\n * U+201F DOUBLE HIGH-REVERSED-9 QUOTATION MARK: not included in any glyphset definition\n * U+2021 DOUBLE DAGGER: not included in any glyphset definition\n * U+2023 TRIANGULAR BULLET: not included in any glyphset definition\n * U+2024 ONE DOT LEADER: try adding armenian\n * U+2025 TWO DOT LEADER: try adding phags-pa\n * U+2027 HYPHENATION POINT: not included in any glyphset definition\n * U+202F NARROW NO-BREAK SPACE: try adding mongolian\n * U+2030 PER MILLE SIGN: not included in any glyphset definition\n * U+2031 PER TEN THOUSAND SIGN: not included in any glyphset definition\n * U+2035 REVERSED PRIME: not included in any glyphset definition\n * U+2038 CARET: not included in any glyphset definition\n * U+203B REFERENCE MARK: not included in any glyphset definition\n * U+203E OVERLINE: not included in any glyphset definition\n * U+203F UNDERTIE: not included in any glyphset definition\n * U+2040 CHARACTER TIE: not included in any glyphset definition\n * U+2041 CARET INSERTION POINT: not included in any glyphset definition\n * U+2042 ASTERISM: not included in any glyphset definition\n * U+2045 LEFT SQUARE BRACKET WITH QUILL: not included in any glyphset definition\n * U+2046 RIGHT SQUARE BRACKET WITH QUILL: not included in any glyphset definition\n * U+204A TIRONIAN SIGN ET: not included in any glyphset definition\n * U+204B REVERSED PILCROW SIGN: not included in any glyphset definition\n * U+204C BLACK LEFTWARDS BULLET: not included in any glyphset definition\n * U+204D BLACK RIGHTWARDS BULLET: not included in any glyphset definition\n * U+2058 FOUR DOT PUNCTUATION: try adding coptic\n * U+2059 FIVE DOT PUNCTUATION: try adding coptic\n * U+205A TWO DOT PUNCTUATION: not included in any glyphset definition\n * U+205B FOUR DOT MARK: not included in any glyphset definition\n * U+205C DOTTED CROSS: not included in any glyphset definition\n * U+205D TRICOLON: not included in any glyphset definition\n * U+205E VERTICAL FOUR DOTS: not included in any glyphset definition\n * U+2070 SUPERSCRIPT ZERO: not included in any glyphset definition\n * U+2075 SUPERSCRIPT FIVE: not included in any glyphset definition\n * U+2076 SUPERSCRIPT SIX: not included in any glyphset definition\n * U+2077 SUPERSCRIPT SEVEN: not included in any glyphset definition\n * U+2078 SUPERSCRIPT EIGHT: not included in any glyphset definition\n * U+2079 SUPERSCRIPT NINE: not included in any glyphset definition\n * U+207A SUPERSCRIPT PLUS SIGN: not included in any glyphset definition\n * U+207B SUPERSCRIPT MINUS: not included in any glyphset definition\n * U+207C SUPERSCRIPT EQUALS SIGN: not included in any glyphset definition\n * U+207D SUPERSCRIPT LEFT PARENTHESIS: not included in any glyphset definition\n * U+207E SUPERSCRIPT RIGHT PARENTHESIS: not included in any glyphset definition\n * U+207F SUPERSCRIPT LATIN SMALL LETTER N: not included in any glyphset definition\n * U+2080 SUBSCRIPT ZERO: not included in any glyphset definition\n * U+2081 SUBSCRIPT ONE: not included in any glyphset definition\n * U+2082 SUBSCRIPT TWO: not included in any glyphset definition\n * U+2083 SUBSCRIPT THREE: not included in any glyphset definition\n * U+2084 SUBSCRIPT FOUR: not included in any glyphset definition\n * U+2085 SUBSCRIPT FIVE: not included in any glyphset definition\n * U+2086 SUBSCRIPT SIX: not included in any glyphset definition\n * U+2087 SUBSCRIPT SEVEN: not included in any glyphset definition\n * U+2088 SUBSCRIPT EIGHT: not included in any glyphset definition\n * U+2089 SUBSCRIPT NINE: not included in any glyphset definition\n * U+208A SUBSCRIPT PLUS SIGN: not included in any glyphset definition\n * U+208B SUBSCRIPT MINUS: not included in any glyphset definition\n * U+208C SUBSCRIPT EQUALS SIGN: not included in any glyphset definition\n * U+208D SUBSCRIPT LEFT PARENTHESIS: not included in any glyphset definition\n * U+208E SUBSCRIPT RIGHT PARENTHESIS: not included in any glyphset definition\n * U+210C BLACK-LETTER CAPITAL H: not included in any glyphset definition\n * U+2112 SCRIPT CAPITAL L: not included in any glyphset definition\n * U+2114 L B BAR SYMBOL: not included in any glyphset definition\n * U+2116 NUMERO SIGN: try adding cyrillic\n * U+211E PRESCRIPTION TAKE: not included in any glyphset definition\n * U+211F RESPONSE: not included in any glyphset definition\n * U+2123 VERSICLE: not included in any glyphset definition\n * U+2126 OHM SIGN: not included in any glyphset definition\n * U+2127 INVERTED OHM SIGN: not included in any glyphset definition\n * U+212D BLACK-LETTER CAPITAL C: not included in any glyphset definition\n * U+2132 TURNED CAPITAL F: not included in any glyphset definition\n * U+2135 ALEF SYMBOL: not included in any glyphset definition\n * U+2180 ROMAN NUMERAL ONE THOUSAND C D: not included in any glyphset definition\n * U+2181 ROMAN NUMERAL FIVE THOUSAND: not included in any glyphset definition\n * U+2182 ROMAN NUMERAL TEN THOUSAND: not included in any glyphset definition\n * U+2183 ROMAN NUMERAL REVERSED ONE HUNDRED: not included in any glyphset definition\n * U+2190 LEFTWARDS ARROW: not included in any glyphset definition\n * U+2192 RIGHTWARDS ARROW: not included in any glyphset definition\n * U+2194 LEFT RIGHT ARROW: not included in any glyphset definition\n * U+2195 UP DOWN ARROW: not included in any glyphset definition\n * U+2196 NORTH WEST ARROW: not included in any glyphset definition\n * U+2197 NORTH EAST ARROW: not included in any glyphset definition\n * U+2198 SOUTH EAST ARROW: not included in any glyphset definition\n * U+2199 SOUTH WEST ARROW: not included in any glyphset definition\n * U+21B6 ANTICLOCKWISE TOP SEMICIRCLE ARROW: not included in any glyphset definition\n * U+21B7 CLOCKWISE TOP SEMICIRCLE ARROW: not included in any glyphset definition\n * U+21BA ANTICLOCKWISE OPEN CIRCLE ARROW: not included in any glyphset definition\n * U+21BB CLOCKWISE OPEN CIRCLE ARROW: not included in any glyphset definition\n * U+2202 PARTIAL DIFFERENTIAL: not included in any glyphset definition\n * U+2206 INCREMENT: not included in any glyphset definition\n * U+220F N-ARY PRODUCT: not included in any glyphset definition\n * U+2211 N-ARY SUMMATION: not included in any glyphset definition\n * U+2219 BULLET OPERATOR: try adding tai-tham\n * U+221A SQUARE ROOT: not included in any glyphset definition\n * U+221E INFINITY: not included in any glyphset definition\n * U+222B INTEGRAL: not included in any glyphset definition\n * U+2234 THEREFORE: not included in any glyphset definition\n * U+2235 BECAUSE: not included in any glyphset definition\n * U+2237 PROPORTION: not included in any glyphset definition\n * U+223B HOMOTHETIC: not included in any glyphset definition\n * U+223D REVERSED TILDE: not included in any glyphset definition\n * U+2248 ALMOST EQUAL TO: not included in any glyphset definition\n * U+224C ALL EQUAL TO: not included in any glyphset definition\n * U+2260 NOT EQUAL TO: not included in any glyphset definition\n * U+2264 LESS-THAN OR EQUAL TO: not included in any glyphset definition\n * U+2265 GREATER-THAN OR EQUAL TO: not included in any glyphset definition\n * U+2295 CIRCLED PLUS: not included in any glyphset definition\n * U+2297 CIRCLED TIMES: not included in any glyphset definition\n * U+22A5 UP TACK: not included in any glyphset definition\n * U+22C5 DOT OPERATOR: not included in any glyphset definition\n * U+22EE VERTICAL ELLIPSIS: not included in any glyphset definition\n * U+2300 DIAMETER SIGN: not included in any glyphset definition\n * U+2308 LEFT CEILING: not included in any glyphset definition\n * U+2309 RIGHT CEILING: not included in any glyphset definition\n * U+230A LEFT FLOOR: not included in any glyphset definition\n * U+230B RIGHT FLOOR: not included in any glyphset definition\n * U+2310 REVERSED NOT SIGN: not included in any glyphset definition\n * U+2318 PLACE OF INTEREST SIGN: not included in any glyphset definition\n * U+231C TOP LEFT CORNER: not included in any glyphset definition\n * U+231D TOP RIGHT CORNER: not included in any glyphset definition\n * U+231E BOTTOM LEFT CORNER: not included in any glyphset definition\n * U+231F BOTTOM RIGHT CORNER: not included in any glyphset definition\n * U+2325 OPTION KEY: not included in any glyphset definition\n * U+2329 LEFT-POINTING ANGLE BRACKET: not included in any glyphset definition\n * U+232A RIGHT-POINTING ANGLE BRACKET: not included in any glyphset definition\n * U+239B LEFT PARENTHESIS UPPER HOOK: not included in any glyphset definition\n * U+239C LEFT PARENTHESIS EXTENSION: not included in any glyphset definition\n * U+239D LEFT PARENTHESIS LOWER HOOK: not included in any glyphset definition\n * U+239E RIGHT PARENTHESIS UPPER HOOK: not included in any glyphset definition\n * U+239F RIGHT PARENTHESIS EXTENSION: not included in any glyphset definition\n * U+23A0 RIGHT PARENTHESIS LOWER HOOK: not included in any glyphset definition\n * U+23A7 LEFT CURLY BRACKET UPPER HOOK: not included in any glyphset definition\n * U+23A8 LEFT CURLY BRACKET MIDDLE PIECE: not included in any glyphset definition\n * U+23A9 LEFT CURLY BRACKET LOWER HOOK: not included in any glyphset definition\n * U+23AA CURLY BRACKET EXTENSION: not included in any glyphset definition\n * U+23AB RIGHT CURLY BRACKET UPPER HOOK: not included in any glyphset definition\n * U+23AC RIGHT CURLY BRACKET MIDDLE PIECE: not included in any glyphset definition\n * U+23AD RIGHT CURLY BRACKET LOWER HOOK: not included in any glyphset definition\n * U+23D1 METRICAL BREVE: not included in any glyphset definition\n * U+23D2 METRICAL LONG OVER SHORT: not included in any glyphset definition\n * U+23D3 METRICAL SHORT OVER LONG: not included in any glyphset definition\n * U+23D4 METRICAL LONG OVER TWO SHORTS: not included in any glyphset definition\n * U+23D5 METRICAL TWO SHORTS OVER LONG: not included in any glyphset definition\n * U+23D6 METRICAL TWO SHORTS JOINED: not included in any glyphset definition\n * U+23D7 METRICAL TRISEME: not included in any glyphset definition\n * U+23D8 METRICAL TETRASEME: not included in any glyphset definition\n * U+23D9 METRICAL PENTASEME: not included in any glyphset definition\n * U+2510 BOX DRAWINGS LIGHT DOWN AND LEFT: not included in any glyphset definition\n * U+25A1 WHITE SQUARE: not included in any glyphset definition\n * U+25AD WHITE RECTANGLE: not included in any glyphset definition\n * U+25B6 BLACK RIGHT-POINTING TRIANGLE: not included in any glyphset definition\n * U+25CA LOZENGE: not included in any glyphset definition\n * U+25CB WHITE CIRCLE: not included in any glyphset definition\n * U+25CF BLACK CIRCLE: not included in any glyphset definition\n * U+25E1 LOWER HALF CIRCLE: not included in any glyphset definition\n * U+25EF LARGE CIRCLE: not included in any glyphset definition\n * U+2605 BLACK STAR: not included in any glyphset definition\n * U+2609 SUN: not included in any glyphset definition\n * U+260A ASCENDING NODE: not included in any glyphset definition\n * U+260B DESCENDING NODE: not included in any glyphset definition\n * U+260C CONJUNCTION: not included in any glyphset definition\n * U+260D OPPOSITION: not included in any glyphset definition\n * U+2627 CHI RHO: not included in any glyphset definition\n * U+2629 CROSS OF JERUSALEM: not included in any glyphset definition\n * U+263D FIRST QUARTER MOON: not included in any glyphset definition\n * U+263E LAST QUARTER MOON: not included in any glyphset definition\n * U+263F MERCURY: not included in any glyphset definition\n * U+2640 FEMALE SIGN: not included in any glyphset definition\n * U+2641 EARTH: not included in any glyphset definition\n * U+2642 MALE SIGN: not included in any glyphset definition\n * U+2643 JUPITER: not included in any glyphset definition\n * U+2644 SATURN: not included in any glyphset definition\n * U+2645 URANUS: not included in any glyphset definition\n * U+2646 NEPTUNE: not included in any glyphset definition\n * U+2647 PLUTO: not included in any glyphset definition\n * U+2648 ARIES: not included in any glyphset definition\n * U+2649 TAURUS: not included in any glyphset definition\n * U+264A GEMINI: not included in any glyphset definition\n * U+264B CANCER: not included in any glyphset definition\n * U+264C LEO: not included in any glyphset definition\n * U+264D VIRGO: not included in any glyphset definition\n * U+264E LIBRA: not included in any glyphset definition\n * U+264F SCORPIUS: not included in any glyphset definition\n * U+2650 SAGITTARIUS: not included in any glyphset definition\n * U+2651 CAPRICORN: not included in any glyphset definition\n * U+2652 AQUARIUS: not included in any glyphset definition\n * U+2653 PISCES: not included in any glyphset definition\n * U+271B OPEN CENTRE CROSS: not included in any glyphset definition\n * U+271D LATIN CROSS: not included in any glyphset definition\n * U+2731 HEAVY ASTERISK: not included in any glyphset definition\n * U+2733 EIGHT SPOKED ASTERISK: not included in any glyphset definition\n * U+2734 EIGHT POINTED BLACK STAR: not included in any glyphset definition\n * U+2736 SIX POINTED BLACK STAR: not included in any glyphset definition\n * U+27C0 THREE DIMENSIONAL ANGLE: not included in any glyphset definition\n * U+27C1 WHITE TRIANGLE CONTAINING SMALL WHITE TRIANGLE: not included in any glyphset definition\n * U+27C2 PERPENDICULAR: not included in any glyphset definition\n * U+27E6 MATHEMATICAL LEFT WHITE SQUARE BRACKET: not included in any glyphset definition\n * U+27E7 MATHEMATICAL RIGHT WHITE SQUARE BRACKET: not included in any glyphset definition\n * U+27E8 MATHEMATICAL LEFT ANGLE BRACKET: not included in any glyphset definition\n * U+27E9 MATHEMATICAL RIGHT ANGLE BRACKET: not included in any glyphset definition\n * U+27EA MATHEMATICAL LEFT DOUBLE ANGLE BRACKET: not included in any glyphset definition\n * U+27EB MATHEMATICAL RIGHT DOUBLE ANGLE BRACKET: not included in any glyphset definition\n * U+27F2 ANTICLOCKWISE GAPPED CIRCLE ARROW: not included in any glyphset definition\n * U+27F3 CLOCKWISE GAPPED CIRCLE ARROW: not included in any glyphset definition\n * U+2938 RIGHT-SIDE ARC CLOCKWISE ARROW: not included in any glyphset definition\n * U+2939 LEFT-SIDE ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293A TOP ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293B BOTTOM ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293E LOWER RIGHT SEMICIRCULAR CLOCKWISE ARROW: not included in any glyphset definition\n * U+293F LOWER LEFT SEMICIRCULAR ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+2985 LEFT WHITE PARENTHESIS: not included in any glyphset definition\n * U+2986 RIGHT WHITE PARENTHESIS: not included in any glyphset definition\n * U+2E00 RIGHT ANGLE SUBSTITUTION MARKER: not included in any glyphset definition\n * U+2E01 RIGHT ANGLE DOTTED SUBSTITUTION MARKER: not included in any glyphset definition\n * U+2E02 LEFT SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E03 RIGHT SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E04 LEFT DOTTED SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E05 RIGHT DOTTED SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E06 RAISED INTERPOLATION MARKER: not included in any glyphset definition\n * U+2E07 RAISED DOTTED INTERPOLATION MARKER: not included in any glyphset definition\n * U+2E08 DOTTED TRANSPOSITION MARKER: not included in any glyphset definition\n * U+2E09 LEFT TRANSPOSITION BRACKET: not included in any glyphset definition\n * U+2E0A RIGHT TRANSPOSITION BRACKET: not included in any glyphset definition\n * U+2E0B RAISED SQUARE: not included in any glyphset definition\n * U+2E0C LEFT RAISED OMISSION BRACKET: not included in any glyphset definition\n * U+2E0D RIGHT RAISED OMISSION BRACKET: not included in any glyphset definition\n * U+2E0E EDITORIAL CORONIS: not included in any glyphset definition\n * U+2E0F PARAGRAPHOS: not included in any glyphset definition\n * U+2E10 FORKED PARAGRAPHOS: not included in any glyphset definition\n * U+2E11 REVERSED FORKED PARAGRAPHOS: not included in any glyphset definition\n * U+2E12 HYPODIASTOLE: not included in any glyphset definition\n * U+2E13 DOTTED OBELOS: not included in any glyphset definition\n * U+2E14 DOWNWARDS ANCORA: not included in any glyphset definition\n * U+2E15 UPWARDS ANCORA: not included in any glyphset definition\n * U+2E16 DOTTED RIGHT-POINTING ANGLE: not included in any glyphset definition\n * U+2E17 DOUBLE OBLIQUE HYPHEN: try adding coptic\n * U+2E19 PALM BRANCH: not included in any glyphset definition\n * U+2E20 LEFT VERTICAL BAR WITH QUILL: not included in any glyphset definition\n * U+2E21 RIGHT VERTICAL BAR WITH QUILL: not included in any glyphset definition\n * U+2E22 TOP LEFT HALF BRACKET: not included in any glyphset definition\n * U+2E23 TOP RIGHT HALF BRACKET: not included in any glyphset definition\n * U+2E24 BOTTOM LEFT HALF BRACKET: not included in any glyphset definition\n * U+2E25 BOTTOM RIGHT HALF BRACKET: not included in any glyphset definition\n * U+2E26 LEFT SIDEWAYS U BRACKET: not included in any glyphset definition\n * U+2E27 RIGHT SIDEWAYS U BRACKET: not included in any glyphset definition\n * U+2E28 LEFT DOUBLE PARENTHESIS: not included in any glyphset definition\n * U+2E29 RIGHT DOUBLE PARENTHESIS: not included in any glyphset definition\n * U+2E2A TWO DOTS OVER ONE DOT PUNCTUATION: not included in any glyphset definition\n * U+2E2B ONE DOT OVER TWO DOTS PUNCTUATION: not included in any glyphset definition\n * U+2E2C SQUARED FOUR DOT PUNCTUATION: not included in any glyphset definition\n * U+2E2D FIVE DOT MARK: not included in any glyphset definition\n * U+2E2E REVERSED QUESTION MARK: not included in any glyphset definition\n * U+3008 LEFT ANGLE BRACKET: try adding one of: yi, phags-pa, chinese-simplified, japanese, tai-le, chinese-traditional\n * U+3009 RIGHT ANGLE BRACKET: try adding one of: yi, phags-pa, chinese-simplified, japanese, tai-le, chinese-traditional\n * U+300A LEFT DOUBLE ANGLE BRACKET: try adding one of: yi, phags-pa, lisu, mongolian, chinese-simplified, japanese, tai-le, chinese-traditional\n * U+300B RIGHT DOUBLE ANGLE BRACKET: try adding one of: yi, phags-pa, lisu, mongolian, chinese-simplified, japanese, tai-le, chinese-traditional\n * U+300C LEFT CORNER BRACKET: try adding one of: yi, phags-pa, mongolian, chinese-simplified, japanese, chinese-traditional\n * U+300D RIGHT CORNER BRACKET: try adding one of: yi, phags-pa, mongolian, chinese-simplified, japanese, chinese-traditional\n * U+300E LEFT WHITE CORNER BRACKET: try adding one of: yi, phags-pa, mongolian, chinese-simplified, japanese, chinese-traditional\n * U+300F RIGHT WHITE CORNER BRACKET: try adding one of: yi, phags-pa, mongolian, chinese-simplified, japanese, chinese-traditional\n * U+3016 LEFT WHITE LENTICULAR BRACKET: try adding one of: yi, phags-pa, chinese-simplified\n * U+3017 RIGHT WHITE LENTICULAR BRACKET: try adding one of: yi, phags-pa, chinese-simplified\n * U+301A LEFT WHITE SQUARE BRACKET: try adding one of: yi, phags-pa\n * U+301B RIGHT WHITE SQUARE BRACKET: try adding one of: yi, phags-pa\n * U+E00A : not included in any glyphset definition\n * U+E010 : not included in any glyphset definition\n * U+E025 : not included in any glyphset definition\n * U+E033 : not included in any glyphset definition\n * U+E034 : not included in any glyphset definition\n * U+E03A : not included in any glyphset definition\n * U+E03D : not included in any glyphset definition\n * U+E03F : not included in any glyphset definition\n * U+E040 : not included in any glyphset definition\n * U+E041 : not included in any glyphset definition\n * U+E042 : not included in any glyphset definition\n * U+E066 : not included in any glyphset definition\n * U+E074 : not included in any glyphset definition\n * U+E075 : not included in any glyphset definition\n * U+E08F : not included in any glyphset definition\n * U+E099 : not included in any glyphset definition\n * U+E0B7 : not included in any glyphset definition\n * U+E0C3 : not included in any glyphset definition\n * U+E0D1 : not included in any glyphset definition\n * U+E0E8 : not included in any glyphset definition\n * U+E0E9 : not included in any glyphset definition\n * U+E0EE : not included in any glyphset definition\n * U+E101 : not included in any glyphset definition\n * U+E12A : not included in any glyphset definition\n * U+E135 : not included in any glyphset definition\n * U+E137 : not included in any glyphset definition\n * U+E13F : not included in any glyphset definition\n * U+E143 : not included in any glyphset definition\n * U+E150 : not included in any glyphset definition\n * U+E151 : not included in any glyphset definition\n * U+E152 : not included in any glyphset definition\n * U+E153 : not included in any glyphset definition\n * U+E154 : not included in any glyphset definition\n * U+E162 : not included in any glyphset definition\n * U+E163 : not included in any glyphset definition\n * U+E191 : not included in any glyphset definition\n * U+E192 : not included in any glyphset definition\n * U+E193 : not included in any glyphset definition\n * U+E194 : not included in any glyphset definition\n * U+E195 : not included in any glyphset definition\n * U+E197 : not included in any glyphset definition\n * U+E198 : not included in any glyphset definition\n * U+E199 : not included in any glyphset definition\n * U+E19B : not included in any glyphset definition\n * U+E19C : not included in any glyphset definition\n * U+E1A0 : not included in any glyphset definition\n * U+E1A1 : not included in any glyphset definition\n * U+E1A2 : not included in any glyphset definition\n * U+E1A3 : not included in any glyphset definition\n * U+E1A5 : not included in any glyphset definition\n * U+E1A6 : not included in any glyphset definition\n * U+E1A9 : not included in any glyphset definition\n * U+E1AA : not included in any glyphset definition\n * U+E1AB : not included in any glyphset definition\n * U+E1AC : not included in any glyphset definition\n * U+E1AD : not included in any glyphset definition\n * U+E1AE : not included in any glyphset definition\n * U+E1AF : not included in any glyphset definition\n * U+E1B0 : not included in any glyphset definition\n * U+E1B1 : not included in any glyphset definition\n * U+E1B2 : not included in any glyphset definition\n * U+E1B3 : not included in any glyphset definition\n * U+E1B4 : not included in any glyphset definition\n * U+E1B5 : not included in any glyphset definition\n * U+E1B6 : not included in any glyphset definition\n * U+E1B7 : not included in any glyphset definition\n * U+E1B8 : not included in any glyphset definition\n * U+E1B9 : not included in any glyphset definition\n * U+E1BA : not included in any glyphset definition\n * U+E1BB : not included in any glyphset definition\n * U+E1BC : not included in any glyphset definition\n * U+E1BD : not included in any glyphset definition\n * U+E1BE : not included in any glyphset definition\n * U+E1BF : not included in any glyphset definition\n * U+E1C0 : not included in any glyphset definition\n * U+E1C1 : not included in any glyphset definition\n * U+E1C2 : not included in any glyphset definition\n * U+E1C3 : not included in any glyphset definition\n * U+E1C4 : not included in any glyphset definition\n * U+E1C5 : not included in any glyphset definition\n * U+E1C6 : not included in any glyphset definition\n * U+E1C7 : not included in any glyphset definition\n * U+E1C8 : not included in any glyphset definition\n * U+E1C9 : not included in any glyphset definition\n * U+E1CA : not included in any glyphset definition\n * U+E1CB : not included in any glyphset definition\n * U+E1CC : not included in any glyphset definition\n * U+E1CD : not included in any glyphset definition\n * U+E1CE : not included in any glyphset definition\n * U+E1CF : not included in any glyphset definition\n * U+E1D1 : not included in any glyphset definition\n * U+E1D2 : not included in any glyphset definition\n * U+E208 : not included in any glyphset definition\n * U+E20C : not included in any glyphset definition\n * U+E21B : not included in any glyphset definition\n * U+E227 : not included in any glyphset definition\n * U+E24F : not included in any glyphset definition\n * U+E252 : not included in any glyphset definition\n * U+E253 : not included in any glyphset definition\n * U+E255 : not included in any glyphset definition\n * U+E257 : not included in any glyphset definition\n * U+E259 : not included in any glyphset definition\n * U+E26D : not included in any glyphset definition\n * U+E270 : not included in any glyphset definition\n * U+E27D : not included in any glyphset definition\n * U+E282 : not included in any glyphset definition\n * U+E288 : not included in any glyphset definition\n * U+E309 : not included in any glyphset definition\n * U+E30B : not included in any glyphset definition\n * U+E313 : not included in any glyphset definition\n * U+E315 : not included in any glyphset definition\n * U+E331 : not included in any glyphset definition\n * U+E338 : not included in any glyphset definition\n * U+E33A : not included in any glyphset definition\n * U+E33C : not included in any glyphset definition\n * U+E33F : not included in any glyphset definition\n * U+E340 : not included in any glyphset definition\n * U+E34B : not included in any glyphset definition\n * U+E34C : not included in any glyphset definition\n * U+E373 : not included in any glyphset definition\n * U+E375 : not included in any glyphset definition\n * U+E376 : not included in any glyphset definition\n * U+E378 : not included in any glyphset definition\n * U+E37C : not included in any glyphset definition\n * U+E384 : not included in any glyphset definition\n * U+E385 : not included in any glyphset definition\n * U+E39F : not included in any glyphset definition\n * U+E3D3 : not included in any glyphset definition\n * U+E3D4 : not included in any glyphset definition\n * U+E3E5 : not included in any glyphset definition\n * U+E3E6 : not included in any glyphset definition\n * U+E3E7 : not included in any glyphset definition\n * U+E40A : not included in any glyphset definition\n * U+E410 : not included in any glyphset definition\n * U+E425 : not included in any glyphset definition\n * U+E433 : not included in any glyphset definition\n * U+E434 : not included in any glyphset definition\n * U+E435 : not included in any glyphset definition\n * U+E436 : not included in any glyphset definition\n * U+E43A : not included in any glyphset definition\n * U+E43D : not included in any glyphset definition\n * U+E43F : not included in any glyphset definition\n * U+E440 : not included in any glyphset definition\n * U+E441 : not included in any glyphset definition\n * U+E442 : not included in any glyphset definition\n * U+E44D : not included in any glyphset definition\n * U+E466 : not included in any glyphset definition\n * U+E48F : not included in any glyphset definition\n * U+E491 : not included in any glyphset definition\n * U+E499 : not included in any glyphset definition\n * U+E4B7 : not included in any glyphset definition\n * U+E4C3 : not included in any glyphset definition\n * U+E4D1 : not included in any glyphset definition\n * U+E4E8 : not included in any glyphset definition\n * U+E4E9 : not included in any glyphset definition\n * U+E4EA : not included in any glyphset definition\n * U+E4EB : not included in any glyphset definition\n * U+E4EE : not included in any glyphset definition\n * U+E501 : not included in any glyphset definition\n * U+E517 : not included in any glyphset definition\n * U+E52A : not included in any glyphset definition\n * U+E535 : not included in any glyphset definition\n * U+E537 : not included in any glyphset definition\n * U+E53F : not included in any glyphset definition\n * U+E543 : not included in any glyphset definition\n * U+E550 : not included in any glyphset definition\n * U+E551 : not included in any glyphset definition\n * U+E552 : not included in any glyphset definition\n * U+E553 : not included in any glyphset definition\n * U+E554 : not included in any glyphset definition\n * U+E55C : not included in any glyphset definition\n * U+E562 : not included in any glyphset definition\n * U+E563 : not included in any glyphset definition\n * U+E568 : not included in any glyphset definition\n * U+E58C : not included in any glyphset definition\n * U+E596 : not included in any glyphset definition\n * U+E5B0 : not included in any glyphset definition\n * U+E5B1 : not included in any glyphset definition\n * U+E5B8 : not included in any glyphset definition\n * U+E5D2 : not included in any glyphset definition\n * U+E608 : not included in any glyphset definition\n * U+E60C : not included in any glyphset definition\n * U+E61B : not included in any glyphset definition\n * U+E627 : not included in any glyphset definition\n * U+E64F : not included in any glyphset definition\n * U+E652 : not included in any glyphset definition\n * U+E653 : not included in any glyphset definition\n * U+E655 : not included in any glyphset definition\n * U+E657 : not included in any glyphset definition\n * U+E659 : not included in any glyphset definition\n * U+E66D : not included in any glyphset definition\n * U+E670 : not included in any glyphset definition\n * U+E67D : not included in any glyphset definition\n * U+E682 : not included in any glyphset definition\n * U+E688 : not included in any glyphset definition\n * U+E68A : not included in any glyphset definition\n * U+E6EE : not included in any glyphset definition\n * U+E709 : not included in any glyphset definition\n * U+E70B : not included in any glyphset definition\n * U+E713 : not included in any glyphset definition\n * U+E715 : not included in any glyphset definition\n * U+E731 : not included in any glyphset definition\n * U+E732 : not included in any glyphset definition\n * U+E733 : not included in any glyphset definition\n * U+E734 : not included in any glyphset definition\n * U+E735 : not included in any glyphset definition\n * U+E738 : not included in any glyphset definition\n * U+E73A : not included in any glyphset definition\n * U+E73C : not included in any glyphset definition\n * U+E73F : not included in any glyphset definition\n * U+E740 : not included in any glyphset definition\n * U+E74B : not included in any glyphset definition\n * U+E74C : not included in any glyphset definition\n * U+E773 : not included in any glyphset definition\n * U+E775 : not included in any glyphset definition\n * U+E776 : not included in any glyphset definition\n * U+E778 : not included in any glyphset definition\n * U+E77C : not included in any glyphset definition\n * U+E784 : not included in any glyphset definition\n * U+E785 : not included in any glyphset definition\n * U+E79E : not included in any glyphset definition\n * U+E79F : not included in any glyphset definition\n * U+E7A2 : not included in any glyphset definition\n * U+E7C1 : not included in any glyphset definition\n * U+E7C2 : not included in any glyphset definition\n * U+E7C3 : not included in any glyphset definition\n * U+E7C5 : not included in any glyphset definition\n * U+E7C7 : not included in any glyphset definition\n * U+E7C8 : not included in any glyphset definition\n * U+E7D3 : not included in any glyphset definition\n * U+E7D4 : not included in any glyphset definition\n * U+E7E5 : not included in any glyphset definition\n * U+E7E6 : not included in any glyphset definition\n * U+E7E7 : not included in any glyphset definition\n * U+E7FF : not included in any glyphset definition\n * U+E801 : not included in any glyphset definition\n * U+E802 : not included in any glyphset definition\n * U+E803 : not included in any glyphset definition\n * U+E804 : not included in any glyphset definition\n * U+E805 : not included in any glyphset definition\n * U+E810 : not included in any glyphset definition\n * U+E811 : not included in any glyphset definition\n * U+EBEE : not included in any glyphset definition\n * U+EBEF : not included in any glyphset definition\n * U+EEE0 : not included in any glyphset definition\n * U+EEE1 : not included in any glyphset definition\n * U+EEE2 : not included in any glyphset definition\n * U+EEE3 : not included in any glyphset definition\n * U+EEE4 : not included in any glyphset definition\n * U+EEE5 : not included in any glyphset definition\n * U+EEE6 : not included in any glyphset definition\n * U+EEE7 : not included in any glyphset definition\n * U+EEE8 : not included in any glyphset definition\n * U+EEE9 : not included in any glyphset definition\n * U+EEEA : not included in any glyphset definition\n * U+EEEB : not included in any glyphset definition\n * U+EEEC : not included in any glyphset definition\n * U+EEED : not included in any glyphset definition\n * U+EEEE : not included in any glyphset definition\n * U+EEEF : not included in any glyphset definition\n * U+EEF0 : not included in any glyphset definition\n * U+EEF1 : not included in any glyphset definition\n * U+EEF2 : not included in any glyphset definition\n * U+EEF3 : not included in any glyphset definition\n * U+EEF4 : not included in any glyphset definition\n * U+EEF5 : not included in any glyphset definition\n * U+EEF6 : not included in any glyphset definition\n * U+EEF7 : not included in any glyphset definition\n * U+EEF8 : not included in any glyphset definition\n * U+EEF9 : not included in any glyphset definition\n * U+EEFA : not included in any glyphset definition\n * U+EEFB : not included in any glyphset definition\n * U+EEFC : not included in any glyphset definition\n * U+EF05 : not included in any glyphset definition\n * U+EF0C : not included in any glyphset definition\n * U+EF0E : not included in any glyphset definition\n * U+EF11 : not included in any glyphset definition\n * U+EF15 : not included in any glyphset definition\n * U+EF20 : not included in any glyphset definition\n * U+EF21 : not included in any glyphset definition\n * U+EF22 : not included in any glyphset definition\n * U+EF23 : not included in any glyphset definition\n * U+EF24 : not included in any glyphset definition\n * U+EF25 : not included in any glyphset definition\n * U+EF26 : not included in any glyphset definition\n * U+EF27 : not included in any glyphset definition\n * U+EF28 : not included in any glyphset definition\n * U+EF29 : not included in any glyphset definition\n * U+EF2A : not included in any glyphset definition\n * U+EF2B : not included in any glyphset definition\n * U+EF2C : not included in any glyphset definition\n * U+EF2D : not included in any glyphset definition\n * U+EF90 : not included in any glyphset definition\n * U+EF91 : not included in any glyphset definition\n * U+EF92 : not included in any glyphset definition\n * U+EF93 : not included in any glyphset definition\n * U+EF94 : not included in any glyphset definition\n * U+EF95 : not included in any glyphset definition\n * U+EF96 : not included in any glyphset definition\n * U+EF97 : not included in any glyphset definition\n * U+EF98 : not included in any glyphset definition\n * U+EF99 : not included in any glyphset definition\n * U+EF9A : not included in any glyphset definition\n * U+EF9B : not included in any glyphset definition\n * U+EF9C : not included in any glyphset definition\n * U+EFE0 : not included in any glyphset definition\n * U+EFE1 : not included in any glyphset definition\n * U+EFE2 : not included in any glyphset definition\n * U+EFE3 : not included in any glyphset definition\n * U+EFE4 : not included in any glyphset definition\n * U+EFE5 : not included in any glyphset definition\n * U+EFE6 : not included in any glyphset definition\n * U+EFE7 : not included in any glyphset definition\n * U+EFE8 : not included in any glyphset definition\n * U+EFE9 : not included in any glyphset definition\n * U+EFEA : not included in any glyphset definition\n * U+EFEB : not included in any glyphset definition\n * U+EFEC : not included in any glyphset definition\n * U+EFED : not included in any glyphset definition\n * U+EFEE : not included in any glyphset definition\n * U+EFEF : not included in any glyphset definition\n * U+EFF0 : not included in any glyphset definition\n * U+EFF1 : not included in any glyphset definition\n * U+EFF2 : not included in any glyphset definition\n * U+EFF3 : not included in any glyphset definition\n * U+EFF4 : not included in any glyphset definition\n * U+EFF5 : not included in any glyphset definition\n * U+EFF6 : not included in any glyphset definition\n * U+EFF7 : not included in any glyphset definition\n * U+EFF8 : not included in any glyphset definition\n * U+EFF9 : not included in any glyphset definition\n * U+EFFA : not included in any glyphset definition\n * U+EFFB : not included in any glyphset definition\n * U+EFFC : not included in any glyphset definition\n * U+EFFD : not included in any glyphset definition\n * U+EFFE : not included in any glyphset definition\n * U+EFFF : not included in any glyphset definition\n * U+F000 : not included in any glyphset definition\n * U+F00A : not included in any glyphset definition\n * U+F00B : not included in any glyphset definition\n * U+F00C : not included in any glyphset definition\n * U+F00D : not included in any glyphset definition\n * U+F011 : not included in any glyphset definition\n * U+F012 : not included in any glyphset definition\n * U+F013 : not included in any glyphset definition\n * U+F014 : not included in any glyphset definition\n * U+F016 : not included in any glyphset definition\n * U+F017 : not included in any glyphset definition\n * U+F018 : not included in any glyphset definition\n * U+F019 : not included in any glyphset definition\n * U+F01B : not included in any glyphset definition\n * U+F01C : not included in any glyphset definition\n * U+F01D : not included in any glyphset definition\n * U+F01E : not included in any glyphset definition\n * U+F020 : not included in any glyphset definition\n * U+F021 : not included in any glyphset definition\n * U+F023 : not included in any glyphset definition\n * U+F025 : not included in any glyphset definition\n * U+F026 : not included in any glyphset definition\n * U+F027 : not included in any glyphset definition\n * U+F028 : not included in any glyphset definition\n * U+F02A : not included in any glyphset definition\n * U+F02B : not included in any glyphset definition\n * U+F02C : not included in any glyphset definition\n * U+F106 : not included in any glyphset definition\n * U+F109 : not included in any glyphset definition\n * U+F10A : not included in any glyphset definition\n * U+F10B : not included in any glyphset definition\n * U+F10C : not included in any glyphset definition\n * U+F10D : not included in any glyphset definition\n * U+F10E : not included in any glyphset definition\n * U+F10F : not included in any glyphset definition\n * U+F110 : not included in any glyphset definition\n * U+F11A : not included in any glyphset definition\n * U+F125 : not included in any glyphset definition\n * U+F126 : not included in any glyphset definition\n * U+F127 : not included in any glyphset definition\n * U+F129 : not included in any glyphset definition\n * U+F13A : not included in any glyphset definition\n * U+F142 : not included in any glyphset definition\n * U+F149 : not included in any glyphset definition\n * U+F14F : not included in any glyphset definition\n * U+F151 : not included in any glyphset definition\n * U+F152 : not included in any glyphset definition\n * U+F153 : not included in any glyphset definition\n * U+F154 : not included in any glyphset definition\n * U+F155 : not included in any glyphset definition\n * U+F156 : not included in any glyphset definition\n * U+F157 : not included in any glyphset definition\n * U+F158 : not included in any glyphset definition\n * U+F159 : not included in any glyphset definition\n * U+F15A : not included in any glyphset definition\n * U+F15B : not included in any glyphset definition\n * U+F160 : not included in any glyphset definition\n * U+F161 : not included in any glyphset definition\n * U+F163 : not included in any glyphset definition\n * U+F16E : not included in any glyphset definition\n * U+F16F : not included in any glyphset definition\n * U+F1C0 : not included in any glyphset definition\n * U+F1C1 : not included in any glyphset definition\n * U+F1C2 : not included in any glyphset definition\n * U+F1C3 : not included in any glyphset definition\n * U+F1C4 : not included in any glyphset definition\n * U+F1C5 : not included in any glyphset definition\n * U+F1C6 : not included in any glyphset definition\n * U+F1D2 : not included in any glyphset definition\n * U+F1D3 : not included in any glyphset definition\n * U+F1D4 : not included in any glyphset definition\n * U+F1D5 : not included in any glyphset definition\n * U+F1D6 : not included in any glyphset definition\n * U+F1D7 : not included in any glyphset definition\n * U+F1F0 : not included in any glyphset definition\n * U+F1F1 : not included in any glyphset definition\n * U+F1F2 : not included in any glyphset definition\n * U+F1F3 : not included in any glyphset definition\n * U+F1FD : not included in any glyphset definition\n * U+F1FE : not included in any glyphset definition\n * U+F200 : not included in any glyphset definition\n * U+F201 : not included in any glyphset definition\n * U+F202 : not included in any glyphset definition\n * U+F203 : not included in any glyphset definition\n * U+F204 : not included in any glyphset definition\n * U+F205 : not included in any glyphset definition\n * U+F206 : not included in any glyphset definition\n * U+F207 : not included in any glyphset definition\n * U+F208 : not included in any glyphset definition\n * U+F209 : not included in any glyphset definition\n * U+F20A : not included in any glyphset definition\n * U+F20B : not included in any glyphset definition\n * U+F20C : not included in any glyphset definition\n * U+F20D : not included in any glyphset definition\n * U+F20E : not included in any glyphset definition\n * U+F210 : not included in any glyphset definition\n * U+F211 : not included in any glyphset definition\n * U+F212 : not included in any glyphset definition\n * U+F213 : not included in any glyphset definition\n * U+F300 : not included in any glyphset definition\n * U+F310 : not included in any glyphset definition\n * U+F312 : not included in any glyphset definition\n * U+F313 : not included in any glyphset definition\n * U+F314 : not included in any glyphset definition\n * U+F315 : not included in any glyphset definition\n * U+F316 : not included in any glyphset definition\n * U+F317 : not included in any glyphset definition\n * U+F318 : not included in any glyphset definition\n * U+F319 : not included in any glyphset definition\n * U+F6BE : not included in any glyphset definition\n * U+F6C3 : not included in any glyphset definition\n * U+F6C9 : not included in any glyphset definition\n * U+F6CA : not included in any glyphset definition\n * U+F6CB : not included in any glyphset definition\n * U+F6CC : not included in any glyphset definition\n * U+F6CD : not included in any glyphset definition\n * U+F6CE : not included in any glyphset definition\n * U+F6CF : not included in any glyphset definition\n * U+F6F4 : not included in any glyphset definition\n * U+F6F5 : not included in any glyphset definition\n * U+F6F6 : not included in any glyphset definition\n * U+F6F7 : not included in any glyphset definition\n * U+F6F8 : not included in any glyphset definition\n * U+F6F9 : not included in any glyphset definition\n * U+F6FA : not included in any glyphset definition\n * U+F6FB : not included in any glyphset definition\n * U+F6FC : not included in any glyphset definition\n * U+F6FD : not included in any glyphset definition\n * U+F6FE : not included in any glyphset definition\n * U+F6FF : not included in any glyphset definition\n * U+F700 : not included in any glyphset definition\n * U+F701 : not included in any glyphset definition\n * U+F702 : not included in any glyphset definition\n * U+F703 : not included in any glyphset definition\n * U+F704 : not included in any glyphset definition\n * U+F705 : not included in any glyphset definition\n * U+F706 : not included in any glyphset definition\n * U+F707 : not included in any glyphset definition\n * U+F708 : not included in any glyphset definition\n * U+F709 : not included in any glyphset definition\n * U+F70A : not included in any glyphset definition\n * U+F70B : not included in any glyphset definition\n * U+F70C : not included in any glyphset definition\n * U+F714 : not included in any glyphset definition\n * U+F715 : not included in any glyphset definition\n * U+F716 : not included in any glyphset definition\n * U+F717 : not included in any glyphset definition\n * U+F718 : not included in any glyphset definition\n * U+F719 : not included in any glyphset definition\n * U+F71A : not included in any glyphset definition\n * U+F71B : not included in any glyphset definition\n * U+F71C : not included in any glyphset definition\n * U+F721 : not included in any glyphset definition\n * U+F726 : not included in any glyphset definition\n * U+F730 : not included in any glyphset definition\n * U+F731 : not included in any glyphset definition\n * U+F732 : not included in any glyphset definition\n * U+F733 : not included in any glyphset definition\n * U+F734 : not included in any glyphset definition\n * U+F735 : not included in any glyphset definition\n * U+F736 : not included in any glyphset definition\n * U+F737 : not included in any glyphset definition\n * U+F738 : not included in any glyphset definition\n * U+F739 : not included in any glyphset definition\n * U+F73F : not included in any glyphset definition\n * U+F743 : not included in any glyphset definition\n * U+F760 : not included in any glyphset definition\n * U+F761 : not included in any glyphset definition\n * U+F762 : not included in any glyphset definition\n * U+F763 : not included in any glyphset definition\n * U+F764 : not included in any glyphset definition\n * U+F765 : not included in any glyphset definition\n * U+F766 : not included in any glyphset definition\n * U+F767 : not included in any glyphset definition\n * U+F768 : not included in any glyphset definition\n * U+F769 : not included in any glyphset definition\n * U+F76A : not included in any glyphset definition\n * U+F76B : not included in any glyphset definition\n * U+F76C : not included in any glyphset definition\n * U+F76D : not included in any glyphset definition\n * U+F76E : not included in any glyphset definition\n * U+F76F : not included in any glyphset definition\n * U+F770 : not included in any glyphset definition\n * U+F771 : not included in any glyphset definition\n * U+F772 : not included in any glyphset definition\n * U+F773 : not included in any glyphset definition\n * U+F774 : not included in any glyphset definition\n * U+F775 : not included in any glyphset definition\n * U+F776 : not included in any glyphset definition\n * U+F777 : not included in any glyphset definition\n * U+F778 : not included in any glyphset definition\n * U+F779 : not included in any glyphset definition\n * U+F77A : not included in any glyphset definition\n * U+F77D : not included in any glyphset definition\n * U+F77E : not included in any glyphset definition\n * U+F77F : not included in any glyphset definition\n * U+F7A1 : not included in any glyphset definition\n * U+F7A8 : not included in any glyphset definition\n * U+F7AF : not included in any glyphset definition\n * U+F7B4 : not included in any glyphset definition\n * U+F7B8 : not included in any glyphset definition\n * U+F7BF : not included in any glyphset definition\n * U+F7E0 : not included in any glyphset definition\n * U+F7E1 : not included in any glyphset definition\n * U+F7E2 : not included in any glyphset definition\n * U+F7E3 : not included in any glyphset definition\n * U+F7E4 : not included in any glyphset definition\n * U+F7E5 : not included in any glyphset definition\n * U+F7E6 : not included in any glyphset definition\n * U+F7E7 : not included in any glyphset definition\n * U+F7E8 : not included in any glyphset definition\n * U+F7E9 : not included in any glyphset definition\n * U+F7EA : not included in any glyphset definition\n * U+F7EB : not included in any glyphset definition\n * U+F7EC : not included in any glyphset definition\n * U+F7ED : not included in any glyphset definition\n * U+F7EE : not included in any glyphset definition\n * U+F7EF : not included in any glyphset definition\n * U+F7F0 : not included in any glyphset definition\n * U+F7F1 : not included in any glyphset definition\n * U+F7F2 : not included in any glyphset definition\n * U+F7F3 : not included in any glyphset definition\n * U+F7F4 : not included in any glyphset definition\n * U+F7F5 : not included in any glyphset definition\n * U+F7F6 : not included in any glyphset definition\n * U+F7F8 : not included in any glyphset definition\n * U+F7F9 : not included in any glyphset definition\n * U+F7FA : not included in any glyphset definition\n * U+F7FB : not included in any glyphset definition\n * U+F7FC : not included in any glyphset definition\n * U+F7FD : not included in any glyphset definition\n * U+F7FE : not included in any glyphset definition\n * U+F7FF : not included in any glyphset definition\n * U+F800 : not included in any glyphset definition\n * U+F801 : not included in any glyphset definition\n * U+F802 : not included in any glyphset definition\n * U+F803 : not included in any glyphset definition\n * U+F804 : not included in any glyphset definition\n * U+F805 : not included in any glyphset definition\n * U+F806 : not included in any glyphset definition\n * U+F852 : not included in any glyphset definition\n * U+F853 : not included in any glyphset definition\n * U+F856 : not included in any glyphset definition\n * U+F857 : not included in any glyphset definition\n * U+F860 : not included in any glyphset definition\n * U+F861 : not included in any glyphset definition\n * U+F862 : not included in any glyphset definition\n * U+F863 : not included in any glyphset definition\n * U+F864 : not included in any glyphset definition\n * U+F865 : not included in any glyphset definition\n * U+F866 : not included in any glyphset definition\n * U+FB00 LATIN SMALL LIGATURE FF: not included in any glyphset definition\n * U+FB01 LATIN SMALL LIGATURE FI: not included in any glyphset definition\n * U+FB02 LATIN SMALL LIGATURE FL: not included in any glyphset definition\n * U+FB03 LATIN SMALL LIGATURE FFI: not included in any glyphset definition\n * U+FB04 LATIN SMALL LIGATURE FFL: not included in any glyphset definition\n * U+FB05 LATIN SMALL LIGATURE LONG S T: not included in any glyphset definition\n * U+FB06 LATIN SMALL LIGATURE ST: not included in any glyphset definition\n * U+FB1D HEBREW LETTER YOD WITH HIRIQ: not included in any glyphset definition\n * U+FB1E HEBREW POINT JUDEO-SPANISH VARIKA: not included in any glyphset definition\n * U+FB1F HEBREW LIGATURE YIDDISH YOD YOD PATAH: not included in any glyphset definition\n * U+FB20 HEBREW LETTER ALTERNATIVE AYIN: not included in any glyphset definition\n * U+FB21 HEBREW LETTER WIDE ALEF: not included in any glyphset definition\n * U+FB22 HEBREW LETTER WIDE DALET: not included in any glyphset definition\n * U+FB23 HEBREW LETTER WIDE HE: not included in any glyphset definition\n * U+FB24 HEBREW LETTER WIDE KAF: not included in any glyphset definition\n * U+FB25 HEBREW LETTER WIDE LAMED: not included in any glyphset definition\n * U+FB26 HEBREW LETTER WIDE FINAL MEM: not included in any glyphset definition\n * U+FB27 HEBREW LETTER WIDE RESH: not included in any glyphset definition\n * U+FB28 HEBREW LETTER WIDE TAV: not included in any glyphset definition\n * U+FB29 HEBREW LETTER ALTERNATIVE PLUS SIGN: not included in any glyphset definition\n * U+FB4C HEBREW LETTER BET WITH RAFE: not included in any glyphset definition\n * U+FB4D HEBREW LETTER KAF WITH RAFE: not included in any glyphset definition\n * U+FB4E HEBREW LETTER PE WITH RAFE: not included in any glyphset definition\n * U+FB4F HEBREW LIGATURE ALEF LAMED: not included in any glyphset definition\n\nOr you can add the above codepoints to one of the subsets supported by the font: `menu`, `greek`, `greek-ext`, `hebrew`, `latin`, `latin-ext` [code: unreachable-subsetting]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that all encoded glyphs in the font are covered by a\n        subset declared in the METADATA.pb. Google Fonts splits the font into\n        a set of subset fonts based on the contents of the `subsets` field and\n        the subset definitions in the `glyphsets` repository.\n\n        Any encoded glyphs which are not by any of these subset definitions\n        will not be served in the subsetted fonts, and so will be unreachable to\n        the end user.\n    ",
                    "result": "WARN",
                    "severity": 2
                },
                {
                    "description": "Substitute copyright, registered and trademark symbols in name table entries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/unwanted_chars>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No need to substitute copyright, registered and trademark symbols in name table entries of this font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check the OS/2 usWeightClass is appropriate for the font's best SubFamily name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/usweightclass>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass is good",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects variable fonts, static ttfs and static otfs to have\n        differing OS/2 usWeightClass values.\n\n        - For Variable Fonts, Thin-Black must be 100-900\n\n        - For static ttfs, Thin-Black can be 100-900 or 250-900\n\n        - For static otfs, Thin-Black must be 250-900\n\n        If static otfs are set lower than 250, text may appear blurry in\n        legacy Windows applications.\n\n        Glyphsapp users can change the usWeightClass value of an instance by adding\n        a 'weightClass' customParameter.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has a license.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/has_license>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Found license at '/Users/simon/others-repos/fonts/ofl/cardo/OFL.txt'",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check license file has good copyright string.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "First line in license file is:\n\n\"copyright (c) 2002-2011, david j. perry (hospes02@scholarsfonts.net)\"\n\nwhich does not match the expected format, similar to:\n\n\"Copyright 2022 The Familyname Project Authors (git url)\" [code: bad-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An OFL.txt file's first line should be the font copyright e.g:\n        \"Copyright 2019 The Montserrat Project Authors\n        (https://github.com/julietaula/montserrat)\"\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Check OFL body text is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_body_text>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OFL license body text is correct",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check OFL body text is correct.\n        Often users will accidently delete parts of the body text.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check copyright namerecords match license file.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "License file OFL.txt exists but NameID 13 (LICENSE DESCRIPTION) value on platform 1 (MACINTOSH) is not specified for that. Value was: \"This Font Software is licensed under the SIL Open Font License, Version 1.1.  This license is available with a FAQ at: https://scripts.sil.org/OFL.\" Must be changed to \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\" [code: wrong]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "License file OFL.txt exists but NameID 13 (LICENSE DESCRIPTION) value on platform 3 (WINDOWS) is not specified for that. Value was: \"This Font Software is licensed under the SIL Open Font License, Version 1.1.  This license is available with a FAQ at: https://scripts.sil.org/OFL.\" Must be changed to \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\" [code: wrong]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "For now we're still accepting http URLs, but you should consider using https instead.\n [code: http]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known licensing description must be provided in the NameID 14\n        (LICENSE DESCRIPTION) entries of the name table.\n\n        The source of truth for this check (to determine which license is in use) is\n        a file placed side-by-side to your font project including the licensing terms.\n\n        Depending on the chosen license, one of the following string snippets is\n        expected to be found on the NameID 13 (LICENSE DESCRIPTION) entries of the\n        name table:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set\n        of legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "License URL matches License text on name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license_url>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Could not infer the font license. Please ensure NameID 13 (LICENSE DESCRIPTION) is properly set.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known license URL must be provided in the NameID 14 (LICENSE INFO URL)\n        entry of the name table.\n\n        The source of truth for this check is the licensing text found on the NameID 13\n        entry (LICENSE DESCRIPTION).\n\n        The string snippets used for detecting licensing terms are:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set of\n        legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Description strings in the name table must not exceed 200 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/description_max_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All description name records have reasonably small lengths.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An old FontLab version had a bug which caused it to store copyright notices\n        in nameID 10 entries.\n\n        In order to detect those and distinguish them from actual legitimate usage of\n        this name table entry, we expect that such strings do not exceed a reasonable\n        length of 200 chars.\n\n        Longer strings are likely instances of the FontLab bug.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Show hinting filesize impact.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/hinting_impact>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Hinting filesize impact:\n\n |               | /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf          |\n |:------------- | ---------------:|\n | Dehinted Size | 253.7kb |\n | Hinted Size   | 256.2kb   |\n | Increase      | 2.6kb      |\n | Change        | 1.0 %  |\n [code: size-impact]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check is merely informative, displaying and useful comparison of filesizes\n        of hinted versus unhinted font files.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Ensure files are not too large.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/file_size>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font had a reasonable file size",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Serving extremely large font files on Google Fonts causes usability issues.\n        This check ensures that file sizes are reasonable.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Version format is correct in 'name' table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/version_format>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The NameID.VERSION_STRING (nameID=5) value must follow the pattern \"Version X.Y\" with X.Y greater than or equal to 1.000. Current version string is: \"Version 0.991\" [code: bad-version-strings]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "The NameID.VERSION_STRING (nameID=5) value must follow the pattern \"Version X.Y\" with X.Y greater than or equal to 1.000. Current version string is: \"Version 0.991\" [code: bad-version-strings]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Font has ttfautohint params?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/has_ttfautohint_params>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "Font has old ttfautohint applied?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/old_ttfautohint>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Could not detect which version of ttfautohint was used in this font. It is typically specified as a comment in the font version entries of the 'name' table. Such font version strings are currently: ['Version 0.991', 'Version 0.991'] [code: version-not-detected]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check if font has been hinted with an outdated version of ttfautohint.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "EPAR table present in font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/epar>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "EPAR table not present in font. To learn more see https://github.com/fonttools/fontbakery/issues/818 [code: lacks-EPAR]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The EPAR table is/was a way of expressing common licensing permissions and\n        restrictions in metadata; while almost nothing supported it, Dave Crossland\n        wonders that adding it to everything in Google Fonts could help make it\n        more popular.\n\n        More info is available at:\n        https://davelab6.github.io/epar/\n    ",
                    "result": "INFO",
                    "severity": 1
                },
                {
                    "description": "Is the Grid-fitting and Scan-conversion Procedure ('gasp') table set to optimize rendering?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gasp>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "These are the ppm ranges declared on the gasp table:\n\nPPM <= 65535:\n\tflag = 0x03\n\t- Use grid-fitting\n\t- Use grayscale rendering\n [code: ranges]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "The gasp range 0xFFFF value 0x03 should be set to 0x0F. [code: unset-flags]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Traditionally version 0 'gasp' tables were set so that font sizes below 8 ppem\n        had no grid fitting but did have antialiasing. From 9-16 ppem, just grid\n        fitting.\n        And fonts above 17ppem had both antialiasing and grid fitting toggled on.\n        The use of accelerated graphics cards and higher resolution screens make this\n        approach obsolete. Microsoft's DirectWrite pushed this even further with much\n        improved rendering built into the OS and apps.\n\n        In this scenario it makes sense to simply toggle all 4 flags ON for all font\n        sizes.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Make sure family name does not begin with a digit.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/familyname_first_char>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font family name first character is not a digit.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Font family names which start with a numeral are often not discoverable\n        in Windows applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there non-ASCII characters in ASCII-only NAME table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/ascii_only_entries>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the ASCII-only NAME table entries contain non-ASCII characteres.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec requires ASCII for the POSTSCRIPT_NAME (nameID 6).\n\n        For COPYRIGHT_NOTICE (nameID 0) ASCII is required because that string should be\n        the same in CFF fonts which also have this requirement in the OpenType spec.\n\n        Note:\n        A common place where we find non-ASCII strings is on name table entries\n        with NameID > 18, which are expressly for localising the ASCII-only IDs\n        into Hindi / Arabic / etc.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only has unique \"full_name\" values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_full_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique \"full_name\" values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only contains unique style:weight pairs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_weight_style_pairs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique style:weight pairs.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb license is \"APACHE2\", \"UFL\" or \"OFL\"?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/license>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font license is declared in METADATA.pb as \"OFL\"",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb should contain at least \"menu\" and \"latin\" subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/menu_and_latin>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb contains \"menu\" and \"latin\" subsets.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb subsets should be alphabetically ordered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/subsets_order>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb subsets are not sorted in alphabetical order: Got ['menu', 'greek', 'greek-ext', 'hebrew', 'latin', 'latin-ext'] and expected ['greek', 'greek-ext', 'hebrew', 'latin', 'latin-ext', 'menu'] [code: not-sorted]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Check METADATA.pb includes production subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/includes_production_subsets>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No missing subsets",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb file includes the same subsets as the family in production.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice is the same in all fonts?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright is consistent across family",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check that METADATA.pb family values are all the same.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/familyname>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Family name is the same in all metadata \"fonts\" items.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: According to Google Fonts standards, families should have a Regular style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/has_regular>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family has a Regular style.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Regular should be 400.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/regular_is_400>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Regular has weight = 400.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.name field matches family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.post_script_name matches postscript name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/post_script_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Postscript name \"Cardo-Italic\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name value matches fullname declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/full_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font fullname \"Cardo Italic\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "Font fullname \"Cardo Italic\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name value should be same as the family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/font_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK: Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OK: Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures consistency between the font name declared on the name table\n        and the contents of the METADATA.pb file.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name and font.post_script_name fields have equivalent values ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_fullname_postscript>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"full_name\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename and font.post_script_name fields have equivalent values?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_filename_postscript>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"filename\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.name field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_full_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Cardo\" in \"Cardo Italic\")",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Cardo\" in \"Cardo Italic\")",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_filename_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb filename field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.post_script_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_post_script_name_values>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check name ID 25 to end with \"Italic\" for Italic VFs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_nameid25>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Not an Italic VF.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Due to a bug in (at least) Adobe Indesign, name ID 25\n        needs to be different for Italic VFs than their Upright counterparts.\n        Google Fonts chooses to append \"Italic\" here.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright notices match canonical pattern in METADATA.pb",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Copyright notices should match a pattern similar to:\n \"Copyright 2020 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"copyright (c) 2002-2011, david j. perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The expected pattern for the copyright string adheres to the following rules:\n\n        * It must say \"Copyright\" followed by a 4 digit year (optionally followed by\n          a hyphen and another 4 digit year)\n\n        * Then it must say \"The <familyname> Project Authors\"\n\n        * And within parentheses, a URL for a git repository must be provided\n\n        * The check is case insensitive and does not validate whether the familyname\n          is correct, even though we'd expect it is (and we may soon update the check\n          to validate that aspect as well!)\n\n\n        Here is an example of a valid copyright string:\n\n        \"Copyright 2017 The Archivo Black Project Authors\n         (https://github.com/Omnibus-Type/ArchivoBlack)\"\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notices match canonical pattern in fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Copyright (c) 2002-2011, David J. Perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Copyright (c) 2002-2011, David J. Perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notice on METADATA.pb should not contain 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/reserved_font_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb copyright field does not contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice shouldn't exceed 500 chars.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright_max_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright notice string is shorter than 500 chars.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font filenames match font.filename entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/filenames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filenames in METADATA.pb look good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Note:\n        This check only looks for files in the current directory.\n\n        Font files in subdirectories are checked by these other two checks:\n         - com.google.fonts/check/metadata/undeclared_fonts\n         - com.google.fonts/check/repo/vf_has_static_fonts\n\n        We may want to merge them all into a single check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.style \"italic\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/italic_style>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK: METADATA.pb font.style \"italic\" matches font internals.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.style \"normal\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/normal_style>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check only applies to normal fonts.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "METADATA.pb font.name and font.full_name fields match the values declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_and_full_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb familyname and fullName fields match corresponding name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check font name is the same as family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_name_familyname>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name is the same as family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check that font weight has a canonical value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_weight_value>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font weight has a canonical value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check METADATA.pb font weights are correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/os2_weightclass>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass or wght axis value matches weight specified at METADATA.pb",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb font weights are correct.\n\n        For static fonts, the metadata weight should be the same as the static font's\n        OS/2 usWeightClass.\n\n        For variable fonts, the weight value should be 400 if the font's wght axis range\n        includes 400, otherwise it should be the value closest to 400.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb weight matches postScriptName for static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_weight_postscript>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Weight value matches postScriptName.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font styles are named canonically?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_style_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font styles are named canonically.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check URL on copyright string is the same as in repository_url field.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_repo_urls>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes, perhaps due to copy-pasting, projects may declare different URLs\n        between the font.coyright and the family.sources.repository_url fields.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check for primary_script",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/primary_script>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Try to guess font's primary script and see if that's set in METADATA.pb.\n        This is an educated guess based on the number of glyphs per script in the font\n        and should be taken with caution.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Stricter unitsPerEm criteria for Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem_strict>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font em size is good (unitsPerEm = 2048).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though the OpenType spec allows unitsPerEm to be any value between 16\n        and 16384, the Google Fonts project aims at a narrower set of reasonable values.\n\n        The spec suggests usage of powers of two in order to get some performance\n        improvements on legacy renderers, so those values are acceptable.\n\n        But values of 500 or 1000 are also acceptable, with the added benefit that it\n        makes upm math easier for designers, while the performance hit of not using a\n        power of two is most likely negligible nowadays.\n\n        Additionally, values above 2048 would likely result in unreasonable\n        filesize increases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Glyphs are similiar to Google Fonts version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/production_glyphs_similarity>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs are similar in comparison to the Google Fonts version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking direction of slnt axis angles",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/slant_direction>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'slnt' axis values are defined as negative values for a clockwise (right)\n        lean, and positive values for counter-clockwise lean. This is counter-intuitive\n        for many designers who are used to think of a positive slant as a lean to\n        the right.\n\n        This check ensures that the slant axis direction is consistent with the specs.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font names are correct",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font names are good:\n\n| nameID | current | expected |\n| :--- | :--- | :--- |\n| Family Name | Cardo | Cardo |\n| Subfamily Name | Italic | Italic |\n| Full Name | Cardo Italic | Cardo Italic |\n| Poscript Name | Cardo-Italic | Cardo-Italic |",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has several rules which need to be adhered to when\n        setting a font's name table. Please read:\n        https://googlefonts.github.io/gf-guide/statics.html#supported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#style-linking\n        https://googlefonts.github.io/gf-guide/statics.html#unsupported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#single-weight-families\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright field for this font on METADATA.pb matches all copyright notice entries on the name table ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/copyright>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright field for this font on METADATA.pb matches copyright notice entries on the name table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has all mandatory 'name' table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/mandatory_entries>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains values for all mandatory name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Length of copyright notice must not exceed 500 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/copyright_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All copyright notice name entries on the 'name' table are shorter than 500 characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is an arbitrary max length for the copyright notice field of the name\n        table. We simply don't want such notices to be too long. Typically such notices\n        are actually much shorter than this with a length of roughly 70 or 80\n        characters.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check for font-v versioning.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fontv>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version string is: \"Version 0.991\"\nThe version string must ideally include a git commit hash and either a \"dev\" or a \"release\" suffix such as in the example below:\n\"Version 1.3; git-0d08353-release\" [code: bad-format]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The git sha1 tagging and dev/release features of Source Foundry `font-v` tool\n        are awesome and we would love to consider upstreaming the approach into\n        fontmake someday. For now we only emit an INFO if a given font does not yet\n        follow the experimental versioning style, but at some point we may start\n        enforcing it.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Check glyphs do not have components which are themselves components.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_nested_components>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs do not contain nested components.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been bugs rendering variable fonts with nested components.\n        Additionally, some static fonts with nested components have been reported\n        to have rendering and printing issues.\n\n        For more info, see:\n        * https://github.com/fonttools/fontbakery/issues/2961\n        * https://github.com/arrowtype/recursive/issues/412\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a static ttf can be generated from a variable font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/generate_static>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts may serve static fonts which have been generated from variable\n        fonts. This test will attempt to generate a static ttf using fontTool's\n        varLib mutator.\n\n        The target font will be the mean of each axis e.g:\n\n        ## VF font axes\n\n        - min weight, max weight = 400, 800\n\n        - min width, max width = 50, 100\n\n        ## Target Instance\n\n        - weight = 600\n\n        - width = 75\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that variable fonts have an HVAR table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/has_HVAR>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Not having a HVAR table can lead to costly text-layout operations on some\n        platforms, which we want to avoid.\n\n        So, all variable fonts on the Google Fonts collection should have an HVAR\n        with valid values.\n\n        More info on the HVAR table can be found at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otvaroverview#variation-data-tables-and-miscellaneous-requirements\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Font enables smart dropout control in \"prep\" table instructions?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/smart_dropout>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'prep' table contains instructions enabling smart dropout control.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This setup is meant to ensure consistent rendering quality for fonts across\n        all devices (with different rendering/hinting capabilities).\n\n        Below is the snippet of instructions we expect to see in the fonts:\n        B8 01 FF    PUSHW 0x01FF\n        85          SCANCTRL (unconditinally turn on\n                              dropout control mode)\n        B0 04       PUSHB 0x04\n        8D          SCANTYPE (enable smart dropout control)\n\n        \"Smart dropout control\" means activating rules 1, 2 and 5:\n        Rule 1: If a pixel's center falls within the glyph outline,\n                that pixel is turned on.\n        Rule 2: If a contour falls exactly on a pixel's center,\n                that pixel is turned on.\n        Rule 5: If a scan line between two adjacent pixel centers\n                (either vertical or horizontal) is intersected\n                by both an on-Transition contour and an off-Transition\n                contour and neither of the pixels was already turned on\n                by rules 1 and 2, turn on the pixel which is closer to\n                the midpoint between the on-Transition contour and\n                off-Transition contour. This is \"Smart\" dropout control.\n\n        For more detailed info (such as other rules not enabled in this snippet),\n        please refer to the TrueType Instruction Set documentation.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "There must not be VTT Talk sources in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vttclean>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no tables with VTT Talk sources embedded in the font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The goal here is to reduce filesizes and improve pageloading when dealing\n        with webfonts.\n\n        The VTT Talk sources are not necessary at runtime and endup being just dead\n        weight when left embedded in the font binaries. The sources should be kept on\n        the project files but stripped out when building release binaries.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there unwanted Apple tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/aat>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no unwanted AAT tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Apple's TrueType reference manual [1] describes SFNT tables not in the\n        Microsoft OpenType specification [2] and these can sometimes sneak into final\n        release files, but Google Fonts should only have OpenType tables.\n\n        [1] https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6.html\n        [2] https://docs.microsoft.com/en-us/typography/opentype/spec/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a font's STAT table contains compulsory Axis Values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's STAT table contains compulsory Axis Values which exist\n        in the Google Fonts Axis Registry.\n\n        We cannot determine what Axis Values the user will set for axes such as\n        opsz, GRAD since these axes are unique for each font so we'll skip them.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_instances>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's fvar instance coordinates comply with our guidelines:\n        https://googlefonts.github.io/gf-guide/variable.html#fvar-instances\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All name entries referenced by fvar instances exist on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_name_entries>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to make sure that all name entries referenced\n        by variable font instances do exist in the name table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "PPEM must be an integer on hinted fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/integer_ppem_if_hinted>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_hinted",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Hinted fonts must have head table flag bit 3 set.\n\n        Per https://docs.microsoft.com/en-us/typography/opentype/spec/head,\n        bit 3 of Head::flags decides whether PPEM should be rounded. This bit should\n        always be set for hinted fonts.\n\n        Note:\n        Bit 3 = Force ppem to integer values for all internal scaler math;\n                May use fractional ppem sizes if this bit is clear;\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Are there caret positions declared for every ligature?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/ligature_carets>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font lacks caret positioning values for these ligature glyphs:\n\t- f_j\n\n   [code: incomplete-caret-pos-data]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All ligatures in a font must have corresponding caret (text cursor) positions\n        defined in the GDEF table, otherwhise, users may experience issues with\n        caret rendering.\n\n        If using GlyphsApp or UFOs, ligature carets can be defined as anchors with\n        names starting with 'caret_'. These can be compiled with fontmake as of\n        version v2.4.0.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Is there kerning info for non-ligated sequences?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/kerning_for_non_ligated_sequences>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "GPOS table lacks kerning info for the following non-ligated sequences:\n\n\t- f + f\n\n\t- f + l\n\n\t- l + f\n\n\t- f + i\n\n\t- i + j\n\n\t- j + l\n\n\t- l + i\n\n\t- i + f [code: lacks-kern-info]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with ligatures should have kerning on the corresponding non-ligated\n        sequences for text where ligatures aren't used\n        (eg https://github.com/impallari/Raleway/issues/14).\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Combined length of family and style must not exceed 27 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_and_style_max_length>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All name entries are good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to a GlyphsApp tutorial [1], in order to make sure all versions of\n        Windows recognize it as a valid font file, we must make sure that the\n        concatenated length of the familyname (NameID.FONT_FAMILY_NAME) and\n        style (NameID.FONT_SUBFAMILY_NAME) strings in the name table do not\n        exceed 20 characters.\n\n        After discussing the problem in more detail at FontBakery issue #2179 [2] we\n        decided that allowing up to 27 chars would still be on the safe side, though.\n\n        [1] https://glyphsapp.com/tutorials/multiple-masters-part-3-setting-up-instances\n        [2] https://github.com/fonttools/fontbakery/issues/2179\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table entries should not contain line-breaks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/line_breaks>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name table entries are all single-line (no line-breaks found).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are some entries on the name table that may include more than one line\n        of text. The Google Fonts team, though, prefers to keep the name table entries\n        short and simple without line breaks.\n\n        For instance, some designers like to include the full text of a font license in\n        the \"copyright notice\" entry, but for the GFonts collection this entry should\n        only mention year, author and other basic info in a manner enforced by\n        com.google.fonts/check/font_copyright\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table strings must not contain the string 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/rfn>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the name table strings contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some designers adopt the \"Reserved Font Name\" clause of the OFL license. This\n        means that the original author reserves the rights to the family name and other\n        people can only distribute modified versions using a different family name.\n\n        Google Fonts published updates to the fonts in the collection in order to fix\n        issues and/or implement further improvements to the fonts. It is important to\n        keep the family name so that users of the webfonts can benefit from the updates.\n        Since it would forbid such usage scenario, all families in the GFonts collection\n        are required to not adopt the RFN clause.\n\n        This check ensures \"Reserved Font Name\" is not mentioned in the name table.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check family name for GF Guide compliance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_name_compliance>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks the family name for compliance with the Google Fonts Guide.\n        https://googlefonts.github.io/gf-guide/onboarding.html#new-fonts\n\n        If you want to have your family name added to the CamelCase\n        exceptions list, please submit a pull request to the\n        camelcased_familyname_exceptions.txt file.\n\n        Similarly, abbreviations can be submitted to the\n        abbreviations_familyname_exceptions.txt file.\n\n        These are located in the Lib/fontbakery/data/googlefonts/ directory\n        of the FontBakery source code currently hosted at\n        https://github.com/fonttools/fontbakery/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Directory name in GFonts repo structure must match NameID 1 of the regular.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/dirname_matches_nameid_1>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "A static fonts directory with at least two fonts must accompany variable fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/vf_has_static_fonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider adding a subdirectory called \"static/\" and including in it static font files. [code: missing]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Variable font family directories kept in the google/fonts git repo may include\n        a static/ subdir containing static fonts.\n\n        These files are meant to be served for users that still lack support for\n        variable fonts in their web browsers.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "A font repository should not include FontBakery report files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/fb_report>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A FontBakery report is ephemeral and so should be used for posting issues on a\n        bug-tracker instead of being hosted in the font project repository.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check upstream.yaml file contains all required fields",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/upstream_yaml_has_required_fields>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: upstream_yaml",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If a family has been pushed using the gftools packager, we must check that all\n        the required fields in the upstream.yaml file have been populated.\n    ",
                    "result": "SKIP",
                    "severity": 10
                },
                {
                    "description": "A font repository should not include ZIP files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/zip_files>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people check in ZIPs into their font project repositories. While we\n        accept the practice of checking in binaries, we believe that a ZIP is a step\n        too far ;)\n\n        Note: a source purist position is that only source files and build scripts\n        should be checked in.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check generally enforces Google Fonts\u2019 vertical metrics specifications.\n        In particular:\n        * lineGap must be 0\n        * Sum of hhea ascender + abs(descender) + linegap must be\n          between 120% and 200% of UPM\n        * Warning if sum is over 150% of UPM\n\n        The threshold levels 150% (WARN) and 200% (FAIL) are somewhat arbitrarily chosen\n        and may hint at a glaring mistake in the metrics calculations or UPM settings.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/VerticalMetrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Vertical metrics have not regressed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the family already exists on Google Fonts, we need to ensure that the\n        checked family's vertical metrics are similar. This check will test the\n        following schema which was outlined in Font Bakery issue #1162 [1]:\n\n        - The family should visually have the same vertical metrics as the Regular\n          style hosted on Google Fonts.\n\n        - If the family on Google Fonts has differing hhea and typo metrics, the family\n          being checked should use the typo metrics for both the hhea and typo entries.\n\n        - If the family on Google Fonts has use typo metrics not enabled and the family\n          being checked has it enabled, the hhea and typo metrics should use the family\n          on Google Fonts winAscent and winDescent values.\n\n        - If the upms differ, the values must be scaled so the visual appearance is\n          the same.\n\n        [1] https://github.com/fonttools/fontbakery/issues/1162\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts CJK vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font, not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        CJK fonts have different vertical metrics when compared to Latin fonts.\n        We follow the schema developed by dr Ken Lunde for Source Han Sans and\n        the Noto CJK fonts.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/Spec#cjk-vertical-metrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a CJK family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check CJK family has the same vertical metrics as the same family\n        hosted on Google Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font contain less than 150 CJK characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_not_enough_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_claiming_to_be_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Kana has 150 characters and it's the smallest CJK writing system.\n\n        If a font contains less CJK glyphs than this writing system, we inform the\n        user that some glyphs may be encoded incorrectly.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances don't have duplicate names",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont_duplicate_instance_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check's purpose is to detect duplicate named instances names in a\n        given variable font.\n        Repeating instance names may be the result of instances for several VF axes\n        defined in `fvar`, but since currently only weight+italic tokens are allowed\n        in instance names as per GF specs, they ended up repeating.\n        Instead, only a base set of fonts for the most default representation of the\n        family can be defined through instances in the `fvar` table, all other\n        instances will have to be left to access through the `STAT` table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs do not contain the ital axis.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/unsupported_axes>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'ital' axis is not supported yet in Google Chrome.\n\n        For the time being, we need to ensure that VFs do not contain this axis.\n        Once browser support is better, we can deprecate this check.\n\n        For more info regarding browser support, see:\n        https://arrowtype.github.io/vf-slnt-test/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs with duplexed axes do not vary horizontal advance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/duplexed_axis_reflow>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Certain axes, such as grade (GRAD) or roundness (ROND), should not\n        change any advanceWidth or kerning data across the font's design space.\n        This is because altering the advance width of glyphs can cause text reflow.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes values are within gf_axisregistry bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_bounds>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Each axis range in a METADATA.pb file must be registered, and within the bounds\n        of the axis definition in the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes tags are defined in gf_axisregistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_valid_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure all axes in a METADATA.pb file are registered in the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        Why does Google Fonts have its own Axis Registry?\n\n        We support a superset of the OpenType axis registry axis set, and use\n        additional metadata for each axis. Axes present in a font file but not in this\n        registry will not function via our API. No variable font is expected to\n        support all of the axes here.\n\n        Any font foundry or distributor library that offers variable fonts has a\n        implicit, latent, de-facto axis registry, which can be extracted by scanning\n        the library for axes' tags, labels, and min/def/max values. While in 2016\n        Microsoft originally offered to include more axes in the OpenType 1.8\n        specification (github.com/microsoft/OpenTypeDesignVariationAxisTags), as of\n        August 2020, this effort has stalled. We hope more foundries and distributors\n        will publish documents like this that make their axes explicit, to encourage\n        of adoption of variable fonts throughout the industry, and provide source\n        material for a future update to the OpenType specification's axis registry.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate defaults on fvar table match registered fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gf_axisregistry/fvar_axis_defaults>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that axis defaults have a corresponding fallback name registered at the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        This is necessary for the following reasons:\n\n        To get ZIP files downloads on Google Fonts to be accurate \u2014 otherwise the\n        chosen default font is not generated. The Newsreader family, for instance, has\n        a default value on the 'opsz' axis of 16pt. If 16pt was not a registered\n        fallback position, then the ZIP file would instead include another position\n        as default (such as 14pt).\n\n        For the Variable fonts to display the correct location on the specimen page.\n\n        For VF with no weight axis to be displayed at all. For instance, Ballet, which\n        has no weight axis, was not appearing in sandbox because default position on\n        'opsz' axis was 16pt, and it was not yet a registered fallback positon.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate STAT particle names and values match the fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT/gf_axisregistry>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that particle names and values on STAT table match the fallback names\n        in each axis entry at the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate VF axes match the ones declared on METADATA.pb.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_axis_enumeration>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All font variation axes present in the font files must be properly declared\n        on METADATA.pb so that they can be served by the GFonts API.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure METADATA.pb does not use escaped strings.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/escaped_strings>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In some cases we've seen designer names and other fields with escaped strings\n        in METADATA files. Nowadays the strings can be full unicode strings and\n        do not need escaping.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Designers are listed correctly on the Google Fonts catalog?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_profiles>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Designer David Perry still does not have an avatar image. Please provide one. [code: missing-avatar]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has a catalog of designers.\n\n        This check ensures that the online entries of the catalog can be found based\n        on the designer names listed on the METADATA.pb file.\n\n        It also validates the URLs and file formats are all correctly set.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Ensure variable fonts include an avar table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_avar_table>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Most variable fonts should include an avar table to correctly define\n        axes progression rates.\n\n        For example, a weight axis from 0% to 100% doesn't map directly to 100 to 1000,\n        because a 10% progression from 0% may be too much to define the 200,\n        while 90% may be too little to define the 900.\n\n        If the progression rates of axes is linear, this check can be ignored.\n        Fontmake will also skip adding an avar table if the progression rates\n        are linear. However, we still recommend designers visually proof each\n        instance is at the expected weight, width etc.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "On a family update, the DESCRIPTION.en_us.html file should ideally also be updated.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/family_update>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The DESCRIPTION.en_us.html file in this family has not changed in comparison to the latest font release on the google/fonts github repo.\nPlease consider mentioning note-worthy improvements made to the family recently. [code: description-not-updated]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want to ensure that any significant changes to the font family are\n        properly mentioned in the DESCRIPTION file.\n\n        In general, it means that the contents of the DESCRIPTION.en_us.html file\n        will typically change if when font files are updated. Please treat this check\n        as a reminder to do so whenever appropriate!\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check small caps glyphs are available.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/missing_small_caps_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure small caps glyphs are available if\n        a font declares smcp or c2sc OT features.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure Stylistic Sets have description.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/stylisticset_description>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Stylistic sets should provide description text. Programs such as InDesign,\n        TextEdit and Inkscape use that info to display to the users so that they know\n        what a given stylistic set offers.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) is set in all fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/os2/use_typo_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) wasNOT set in the following fonts: ['/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf', '/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf', '/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf']. [code: missing-os2-fsselection-bit7]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All fonts on the Google Fonts collection should have OS/2.fsSelection bit 7\n        (USE_TYPO_METRICS) set. This requirement is part of the vertical metrics scheme\n        established as a Google Fonts policy aiming at a common ground supported by\n        all major font rendering environments.\n\n        For more details, read:\n        https://github.com/googlefonts/gf-docs/blob/main/VerticalMetrics/README.md\n\n        Below is the portion of that document that is most relevant to this check:\n\n        Use_Typo_Metrics must be enabled. This will force MS Applications to use the\n        OS/2 Typo values instead of the Win values. By doing this, we can freely set\n        the Win values to avoid clipping and control the line height with the typo\n        values. It has the added benefit of future line height compatibility. When\n        a new script is added, we simply change the Win values to the new yMin\n        and yMax, without needing to worry if the line height have changed.\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Ensure fonts have ScriptLangTags declared on the 'meta' table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/meta/script_lang_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file does not have a 'meta' table. [code: lacks-meta-table]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType 'meta' table originated at Apple. Microsoft added it to OT with\n        just two DataMap records:\n\n        - dlng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font is designed for.\n\n        - slng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font supports.\n\n\n        The slng structure is intended to describe which languages and scripts the\n        font overall supports. For example, a Traditional Chinese font that also\n        contains Latin characters, can indicate Hant,Latn, showing that it supports\n        Hant, the Traditional Chinese variant of the Hani script, and it also\n        supports the Latn script.\n\n        The dlng structure is far more interesting. A font may contain various glyphs,\n        but only a particular subset of the glyphs may be truly \"leading\" in the design,\n        while other glyphs may have been included for technical reasons. Such a\n        Traditional Chinese font could only list Hant there, showing that it\u2019s designed\n        for Traditional Chinese, but the font would omit Latn, because the developers\n        don\u2019t think the font is really recommended for purely Latin-script use.\n\n        The tags used in the structures can comprise just script, or also language\n        and script. For example, if a font has Bulgarian Cyrillic alternates in the\n        locl feature for the cyrl BGR OT languagesystem, it could also indicate in\n        dlng explicitly that it supports bul-Cyrl. (Note that the scripts and languages\n        in meta use the ISO language and script codes, not the OpenType ones).\n\n        This check ensures that the font has the meta table containing the\n        slng and dlng structures.\n\n        All families in the Google Fonts collection should contain the 'meta' table.\n        Windows 10 already uses it when deciding on which fonts to fall back to.\n        The Google Fonts API and also other environments could use the data for\n        smarter filtering. Most importantly, those entries should be added\n        to the Noto fonts.\n\n        In the font making process, some environments store this data in external\n        files already. But the meta table provides a convenient way to store this\n        inside the font file, so some tools may add the data, and unrelated tools\n        may read this data. This makes the solution much more portable and universal.\n    ",
                    "result": "WARN",
                    "severity": 3
                },
                {
                    "description": "Ensure fonts do not contain any pre-production tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/no_debugging_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file contains the following pre-production tables: FFTM [code: has-debugging-tables]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Tables such as `Debg` are useful in the pre-production stages of font\n        development, but add unnecessary bloat to a production font and should\n        be removed before release.\n    ",
                    "result": "WARN",
                    "severity": 6
                },
                {
                    "description": "Check font family directory name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/family_directory_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Directory name is \"cardo\", as expected.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want the directory name of a font family to be predictable and directly\n        derived from the family name, all lowercased and removing spaces.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font can render its own name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/render_own_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can successfully render its own name (Cardo)",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A base expectation is that a font family's regular/default (400 roman) style\n        can render its 'menu name' (nameID 1) in itself.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check samples can be rendered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/can_render_samples>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to prevent tofu from being seen on fonts.google.com, this check\n        verifies that all samples specified by METADATA.pb can be properly\n        rendered by the font.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check if category on METADATA.pb matches what can be inferred from the family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category_hints>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes the font familyname contains words that hint at which is the most\n        likely correct category to be declared on METADATA.pb\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has the expected color font tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/colorfont_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks Good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        COLR v0 fonts are widely supported in most browsers so they do not require\n        an SVG color table. However, some environments (e.g. Safari, Adobe apps)\n        do not currently support COLR v1 so we need to add an SVG table to these fonts,\n        except in the case of variable fonts, since SVG does not support\n        OpenType Variations.\n\n        To automatically generate compatible SVG/COLR tables,\n        run the maximum_color tool in nanoemoji:\n        https://github.com/googlefonts/nanoemoji\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Color layers should have a minimum brightness",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/color_cpal_brightness>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Layers of a COLRv0 font should not be too dark or too bright. When layer colors\n        are set explicitly, they can't be changed and they may turn out illegible\n        against dark or bright backgrounds.\n\n        While traditional color-less fonts can be colored in design apps or CSS, a\n        black color definition in a COLRv0 font actually means that that layer will be\n        rendered in black regardless of the background color. This leads to text\n        becoming invisible against a dark background, for instance when using a dark\n        theme in a web browser or operating system.\n\n        This check ensures that layer colors are at least 10% bright and at most 90%\n        bright, when not already set to the current color (0xFFFF).\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Put an empty glyph on GID 1 right after the .notdef glyph for COLRv0 fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/empty_glyph_on_gid1_for_colrv0>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A rendering bug in Windows 10 paints whichever glyph is on GID 1 on top of\n        some glyphs, colored or not. This only occurs for COLR version 0 fonts.\n\n        Having a glyph with no contours on GID 1 is a practical workaround for that.\n\n        See https://github.com/googlefonts/gftools/issues/609\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Noto fonts must have an ARTICLE.en_us.html file",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/noto_has_article>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_noto",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Noto fonts are displayed in a different way on the fonts.google.com\n         web site, and so must also contain an article about them.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking file is named canonically.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/canonical_filename>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font filename is correct, \"Cardo-Bold.ttf\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's filename must be composed as \"<familyname>-<stylename>.ttf\":\n\n        - Nunito-Regular.ttf\n\n        - Oswald-BoldItalic.ttf\n\n\n        Variable fonts must list the axis tags in alphabetical order in\n        square brackets and separated by commas:\n\n        - Roboto[wdth,wght].ttf\n\n        - Familyname-Italic[wght].ttf\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/broken_links>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the DESCRIPTION file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website. For that reason, all hyperlinks\n        in it must be properly working.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "URLs on DESCRIPTION file must not display http(s) prefix.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/urls>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website.\n\n        Google Fonts has a content formatting policy for that snippet that expects the\n        text content of links not to include the http:// or https:// prefixes.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain a upstream Git repo URL?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/git_url>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please host your font project on a public Git repo (such as GitHub or GitLab) and place a link in the DESCRIPTION.en_us.html file. [code: lacks-git-url]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The contents of the DESCRIPTION.en-us.html file are displayed on the\n        Google Fonts website in the about section of each font family specimen page.\n\n        Since all of the Google Fonts collection is composed of libre-licensed fonts,\n        this check enforces a policy that there must be a hypertext link in that page\n        directing users to the repository where the font project files are\n        made available.\n\n        Such hosting is typically done on sites like Github, Gitlab, GNU Savannah or\n        any other git-based version control service.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Is this a proper HTML snippet?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/valid_html>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/cardo/DESCRIPTION.en_us.html is a propper HTML file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people write malformed HTML markup. This check should ensure the\n        file is good.\n\n        Additionally, when packaging families for being pushed to the `google/fonts`\n        git repo, if there is no DESCRIPTION.en_us.html file, some older versions of\n        the `add_font.py` tool insert a placeholder description file which contains\n        invalid html. This file needs to either be replaced with an existing\n        description file or edited by hand.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html must have more than 200 bytes.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/min_length>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "DESCRIPTION.en_us.html is larger than 200 bytes.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html should end in a linebreak.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/eof_linebreak>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The last characther on DESCRIPTION.en_us.html is not a line-break. Please add it. [code: missing-eof-linebreak]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some older text-handling tools sometimes misbehave if the last line of data\n        in a text file is not terminated with a newline character (also known as '\\n').\n\n        We know that this is a very small detail, but for the sake of keeping all\n        DESCRIPTION.en_us.html files uniformly formatted throughout the GFonts\n        collection, we chose to adopt the practice of placing this final linebreak\n        character on them.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check METADATA.pb parse correctly.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/parses>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb parsed successfuly.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to ensure that the METADATA.pb file is not\n        malformed.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not be 'unknown'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unknown_designer>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font designer field is not 'unknown'.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not contain 'Multiple designers'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/multiple_designers>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        For a while the string \"Multiple designers\" was used as a placeholder on\n        METADATA.pb files. We should replace all those instances with actual designer\n        names so that proper credits are displayed on the Google Fonts family\n        specimen pages.\n\n        If there's more than a single designer, the designer names must be\n        separated by commas.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Multiple values in font designer field in METADATA.pb must be separated by commas.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_values>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We must use commas instead of forward slashes because the server-side code\n        at the fonts.google.com directory will segment the string on the commas into\n        a list of names and display the first item in the list as the\n        \"principal designer\" while the remaining names are identified as \"contributors\".\n\n        See eg https://fonts.google.com/specimen/Rubik\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does METADATA.pb copyright field contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/broken_links>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the METADATA.pb file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb lists all font binaries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/undeclared_fonts>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The set of font binaries available, except the ones on a \"static\" subdir,\n        must match exactly those declared on the METADATA.pb file.\n\n        Also, to avoid confusion, we expect that font files (other than statics)\n        are not placed on subdirectories.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb category field is valid.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are only five acceptable values for the category field in a METADATA.pb\n        file:\n\n        - MONOSPACE\n\n        - SANS_SERIF\n\n        - SERIF\n\n        - DISPLAY\n\n        - HANDWRITING\n\n        This check is meant to avoid typos in this field.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 fsType does not impose restrictions.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fstype>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsType is properly set to zero.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The fsType in the OS/2 table is a legacy DRM-related field. Fonts in the\n        Google Fonts collection must have it set to zero (also known as\n        \"Installable Embedding\"). This setting indicates that the fonts can be\n        embedded in documents and permanently installed by applications on\n        remote systems.\n\n        More detailed info is available at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/os2#fstype\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vendor_id>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 VendorID 'FSFS' looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft keeps a list of font vendors and their respective contact info. This\n        list is updated regularly and is indexed by a 4-char \"Vendor ID\" which is\n        stored in the achVendID field of the OS/2 table.\n\n        Registering your ID is not mandatory, but it is a good practice since some\n        applications may display the type designer / type foundry contact info on some\n        dialog and also because that info will be visible on Microsoft's website:\n\n        https://docs.microsoft.com/en-us/typography/vendors/\n\n        This check verifies whether or not a given font's vendor ID is registered in\n        that list or if it has some of the default values used by the most common\n        font editors.\n\n        Each new FontBakery release includes a cached copy of that list of vendor IDs.\n        If you registered recently, you're safe to ignore warnings emitted by this\n        check, since your ID will soon be included in one of our upcoming releases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check Google Fonts glyph coverage.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyph_coverage>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Missing required codepoints:\n\n\t- 0x1E9E (LATIN CAPITAL LETTER SHARP S)\n [code: missing-codepoints]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects that fonts in its collection support at least the minimal\n        set of characters defined in the `GF-latin-core` glyph-set.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Check for METADATA subsets with zero support.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unsupported_subsets>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that the subsets specified on a METADATA.pb file are\n        actually supported (even if only partially) by the font files.\n\n        Subsets for which none of the codepoints are supported will cause the\n        check to FAIL.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check for codepoints not covered by METADATA subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unreachable_subsetting>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following codepoints supported by the font are not covered by\n    any subsets defined in the font's metadata file, and will never\n    be served. You can solve this by either manually adding additional\n    subset declarations to METADATA.pb, or by editing the glyphset\n    definitions.\n\n * U+0250 LATIN SMALL LETTER TURNED A: not included in any glyphset definition\n * U+0251 LATIN SMALL LETTER ALPHA: not included in any glyphset definition\n * U+0252 LATIN SMALL LETTER TURNED ALPHA: not included in any glyphset definition\n * U+0253 LATIN SMALL LETTER B WITH HOOK: not included in any glyphset definition\n * U+0254 LATIN SMALL LETTER OPEN O: not included in any glyphset definition\n * U+0255 LATIN SMALL LETTER C WITH CURL: not included in any glyphset definition\n * U+0256 LATIN SMALL LETTER D WITH TAIL: not included in any glyphset definition\n * U+0257 LATIN SMALL LETTER D WITH HOOK: not included in any glyphset definition\n * U+0258 LATIN SMALL LETTER REVERSED E: not included in any glyphset definition\n * U+025A LATIN SMALL LETTER SCHWA WITH HOOK: not included in any glyphset definition\n * U+025B LATIN SMALL LETTER OPEN E: not included in any glyphset definition\n * U+025C LATIN SMALL LETTER REVERSED OPEN E: not included in any glyphset definition\n * U+025D LATIN SMALL LETTER REVERSED OPEN E WITH HOOK: not included in any glyphset definition\n * U+025E LATIN SMALL LETTER CLOSED REVERSED OPEN E: not included in any glyphset definition\n * U+025F LATIN SMALL LETTER DOTLESS J WITH STROKE: not included in any glyphset definition\n * U+0260 LATIN SMALL LETTER G WITH HOOK: not included in any glyphset definition\n * U+0261 LATIN SMALL LETTER SCRIPT G: not included in any glyphset definition\n * U+0262 LATIN LETTER SMALL CAPITAL G: not included in any glyphset definition\n * U+0263 LATIN SMALL LETTER GAMMA: not included in any glyphset definition\n * U+0264 LATIN SMALL LETTER RAMS HORN: not included in any glyphset definition\n * U+0265 LATIN SMALL LETTER TURNED H: not included in any glyphset definition\n * U+0266 LATIN SMALL LETTER H WITH HOOK: not included in any glyphset definition\n * U+0267 LATIN SMALL LETTER HENG WITH HOOK: not included in any glyphset definition\n * U+0268 LATIN SMALL LETTER I WITH STROKE: not included in any glyphset definition\n * U+0269 LATIN SMALL LETTER IOTA: not included in any glyphset definition\n * U+026A LATIN LETTER SMALL CAPITAL I: not included in any glyphset definition\n * U+026B LATIN SMALL LETTER L WITH MIDDLE TILDE: not included in any glyphset definition\n * U+026C LATIN SMALL LETTER L WITH BELT: not included in any glyphset definition\n * U+026D LATIN SMALL LETTER L WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+026E LATIN SMALL LETTER LEZH: not included in any glyphset definition\n * U+026F LATIN SMALL LETTER TURNED M: not included in any glyphset definition\n * U+0270 LATIN SMALL LETTER TURNED M WITH LONG LEG: not included in any glyphset definition\n * U+0271 LATIN SMALL LETTER M WITH HOOK: not included in any glyphset definition\n * U+0272 LATIN SMALL LETTER N WITH LEFT HOOK: not included in any glyphset definition\n * U+0273 LATIN SMALL LETTER N WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0274 LATIN LETTER SMALL CAPITAL N: not included in any glyphset definition\n * U+0275 LATIN SMALL LETTER BARRED O: not included in any glyphset definition\n * U+0276 LATIN LETTER SMALL CAPITAL OE: not included in any glyphset definition\n * U+0277 LATIN SMALL LETTER CLOSED OMEGA: not included in any glyphset definition\n * U+0278 LATIN SMALL LETTER PHI: not included in any glyphset definition\n * U+0279 LATIN SMALL LETTER TURNED R: not included in any glyphset definition\n * U+027A LATIN SMALL LETTER TURNED R WITH LONG LEG: not included in any glyphset definition\n * U+027B LATIN SMALL LETTER TURNED R WITH HOOK: not included in any glyphset definition\n * U+027C LATIN SMALL LETTER R WITH LONG LEG: not included in any glyphset definition\n * U+027D LATIN SMALL LETTER R WITH TAIL: not included in any glyphset definition\n * U+027E LATIN SMALL LETTER R WITH FISHHOOK: not included in any glyphset definition\n * U+027F LATIN SMALL LETTER REVERSED R WITH FISHHOOK: not included in any glyphset definition\n * U+0280 LATIN LETTER SMALL CAPITAL R: not included in any glyphset definition\n * U+0281 LATIN LETTER SMALL CAPITAL INVERTED R: not included in any glyphset definition\n * U+0282 LATIN SMALL LETTER S WITH HOOK: not included in any glyphset definition\n * U+0283 LATIN SMALL LETTER ESH: not included in any glyphset definition\n * U+0284 LATIN SMALL LETTER DOTLESS J WITH STROKE AND HOOK: not included in any glyphset definition\n * U+0285 LATIN SMALL LETTER SQUAT REVERSED ESH: not included in any glyphset definition\n * U+0286 LATIN SMALL LETTER ESH WITH CURL: not included in any glyphset definition\n * U+0287 LATIN SMALL LETTER TURNED T: not included in any glyphset definition\n * U+0288 LATIN SMALL LETTER T WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0289 LATIN SMALL LETTER U BAR: not included in any glyphset definition\n * U+028A LATIN SMALL LETTER UPSILON: not included in any glyphset definition\n * U+028B LATIN SMALL LETTER V WITH HOOK: not included in any glyphset definition\n * U+028C LATIN SMALL LETTER TURNED V: not included in any glyphset definition\n * U+028D LATIN SMALL LETTER TURNED W: not included in any glyphset definition\n * U+028E LATIN SMALL LETTER TURNED Y: not included in any glyphset definition\n * U+028F LATIN LETTER SMALL CAPITAL Y: not included in any glyphset definition\n * U+0290 LATIN SMALL LETTER Z WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0291 LATIN SMALL LETTER Z WITH CURL: not included in any glyphset definition\n * U+0292 LATIN SMALL LETTER EZH: not included in any glyphset definition\n * U+0293 LATIN SMALL LETTER EZH WITH CURL: not included in any glyphset definition\n * U+0294 LATIN LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+0295 LATIN LETTER PHARYNGEAL VOICED FRICATIVE: not included in any glyphset definition\n * U+0296 LATIN LETTER INVERTED GLOTTAL STOP: not included in any glyphset definition\n * U+0297 LATIN LETTER STRETCHED C: not included in any glyphset definition\n * U+0298 LATIN LETTER BILABIAL CLICK: not included in any glyphset definition\n * U+0299 LATIN LETTER SMALL CAPITAL B: not included in any glyphset definition\n * U+029A LATIN SMALL LETTER CLOSED OPEN E: not included in any glyphset definition\n * U+029B LATIN LETTER SMALL CAPITAL G WITH HOOK: not included in any glyphset definition\n * U+029C LATIN LETTER SMALL CAPITAL H: not included in any glyphset definition\n * U+029D LATIN SMALL LETTER J WITH CROSSED-TAIL: not included in any glyphset definition\n * U+029E LATIN SMALL LETTER TURNED K: not included in any glyphset definition\n * U+029F LATIN LETTER SMALL CAPITAL L: not included in any glyphset definition\n * U+02A0 LATIN SMALL LETTER Q WITH HOOK: not included in any glyphset definition\n * U+02A1 LATIN LETTER GLOTTAL STOP WITH STROKE: not included in any glyphset definition\n * U+02A2 LATIN LETTER REVERSED GLOTTAL STOP WITH STROKE: not included in any glyphset definition\n * U+02A3 LATIN SMALL LETTER DZ DIGRAPH: not included in any glyphset definition\n * U+02A4 LATIN SMALL LETTER DEZH DIGRAPH: not included in any glyphset definition\n * U+02A5 LATIN SMALL LETTER DZ DIGRAPH WITH CURL: not included in any glyphset definition\n * U+02A6 LATIN SMALL LETTER TS DIGRAPH: not included in any glyphset definition\n * U+02A7 LATIN SMALL LETTER TESH DIGRAPH: not included in any glyphset definition\n * U+02A8 LATIN SMALL LETTER TC DIGRAPH WITH CURL: not included in any glyphset definition\n * U+02A9 LATIN SMALL LETTER FENG DIGRAPH: not included in any glyphset definition\n * U+02AA LATIN SMALL LETTER LS DIGRAPH: not included in any glyphset definition\n * U+02AB LATIN SMALL LETTER LZ DIGRAPH: not included in any glyphset definition\n * U+02AC LATIN LETTER BILABIAL PERCUSSIVE: not included in any glyphset definition\n * U+02AD LATIN LETTER BIDENTAL PERCUSSIVE: not included in any glyphset definition\n * U+02AE LATIN SMALL LETTER TURNED H WITH FISHHOOK: not included in any glyphset definition\n * U+02AF LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL: not included in any glyphset definition\n * U+02B0 MODIFIER LETTER SMALL H: not included in any glyphset definition\n * U+02B1 MODIFIER LETTER SMALL H WITH HOOK: not included in any glyphset definition\n * U+02B2 MODIFIER LETTER SMALL J: not included in any glyphset definition\n * U+02B3 MODIFIER LETTER SMALL R: not included in any glyphset definition\n * U+02B4 MODIFIER LETTER SMALL TURNED R: not included in any glyphset definition\n * U+02B5 MODIFIER LETTER SMALL TURNED R WITH HOOK: not included in any glyphset definition\n * U+02B6 MODIFIER LETTER SMALL CAPITAL INVERTED R: not included in any glyphset definition\n * U+02B7 MODIFIER LETTER SMALL W: not included in any glyphset definition\n * U+02B8 MODIFIER LETTER SMALL Y: not included in any glyphset definition\n * U+02B9 MODIFIER LETTER PRIME: not included in any glyphset definition\n * U+02BA MODIFIER LETTER DOUBLE PRIME: not included in any glyphset definition\n * U+02BD MODIFIER LETTER REVERSED COMMA: not included in any glyphset definition\n * U+02BE MODIFIER LETTER RIGHT HALF RING: not included in any glyphset definition\n * U+02BF MODIFIER LETTER LEFT HALF RING: not included in any glyphset definition\n * U+02C0 MODIFIER LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+02C1 MODIFIER LETTER REVERSED GLOTTAL STOP: not included in any glyphset definition\n * U+02C2 MODIFIER LETTER LEFT ARROWHEAD: not included in any glyphset definition\n * U+02C3 MODIFIER LETTER RIGHT ARROWHEAD: not included in any glyphset definition\n * U+02C4 MODIFIER LETTER UP ARROWHEAD: not included in any glyphset definition\n * U+02C5 MODIFIER LETTER DOWN ARROWHEAD: not included in any glyphset definition\n * U+02C7 CARON: try adding one of: canadian-aboriginal, tifinagh\n * U+02C8 MODIFIER LETTER VERTICAL LINE: not included in any glyphset definition\n * U+02C9 MODIFIER LETTER MACRON: not included in any glyphset definition\n * U+02CA MODIFIER LETTER ACUTE ACCENT: not included in any glyphset definition\n * U+02CB MODIFIER LETTER GRAVE ACCENT: not included in any glyphset definition\n * U+02CC MODIFIER LETTER LOW VERTICAL LINE: not included in any glyphset definition\n * U+02CD MODIFIER LETTER LOW MACRON: try adding lisu\n * U+02CE MODIFIER LETTER LOW GRAVE ACCENT: not included in any glyphset definition\n * U+02CF MODIFIER LETTER LOW ACUTE ACCENT: not included in any glyphset definition\n * U+02D0 MODIFIER LETTER TRIANGULAR COLON: not included in any glyphset definition\n * U+02D1 MODIFIER LETTER HALF TRIANGULAR COLON: not included in any glyphset definition\n * U+02D2 MODIFIER LETTER CENTRED RIGHT HALF RING: not included in any glyphset definition\n * U+02D3 MODIFIER LETTER CENTRED LEFT HALF RING: not included in any glyphset definition\n * U+02D4 MODIFIER LETTER UP TACK: not included in any glyphset definition\n * U+02D5 MODIFIER LETTER DOWN TACK: not included in any glyphset definition\n * U+02D6 MODIFIER LETTER PLUS SIGN: not included in any glyphset definition\n * U+02D7 MODIFIER LETTER MINUS SIGN: not included in any glyphset definition\n * U+02D8 BREVE: try adding canadian-aboriginal\n * U+02D9 DOT ABOVE: try adding canadian-aboriginal\n * U+02DB OGONEK: try adding canadian-aboriginal\n * U+02DD DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+02DE MODIFIER LETTER RHOTIC HOOK: not included in any glyphset definition\n * U+02DF MODIFIER LETTER CROSS ACCENT: not included in any glyphset definition\n * U+02E0 MODIFIER LETTER SMALL GAMMA: not included in any glyphset definition\n * U+02E1 MODIFIER LETTER SMALL L: not included in any glyphset definition\n * U+02E2 MODIFIER LETTER SMALL S: not included in any glyphset definition\n * U+02E3 MODIFIER LETTER SMALL X: not included in any glyphset definition\n * U+02E4 MODIFIER LETTER SMALL REVERSED GLOTTAL STOP: not included in any glyphset definition\n * U+02E5 MODIFIER LETTER EXTRA-HIGH TONE BAR: not included in any glyphset definition\n * U+02E6 MODIFIER LETTER HIGH TONE BAR: not included in any glyphset definition\n * U+02E7 MODIFIER LETTER MID TONE BAR: not included in any glyphset definition\n * U+02E8 MODIFIER LETTER LOW TONE BAR: not included in any glyphset definition\n * U+02E9 MODIFIER LETTER EXTRA-LOW TONE BAR: not included in any glyphset definition\n * U+02EA MODIFIER LETTER YIN DEPARTING TONE MARK: not included in any glyphset definition\n * U+02EB MODIFIER LETTER YANG DEPARTING TONE MARK: not included in any glyphset definition\n * U+02EC MODIFIER LETTER VOICING: not included in any glyphset definition\n * U+02ED MODIFIER LETTER UNASPIRATED: not included in any glyphset definition\n * U+02EE MODIFIER LETTER DOUBLE APOSTROPHE: not included in any glyphset definition\n * U+02EF MODIFIER LETTER LOW DOWN ARROWHEAD: not included in any glyphset definition\n * U+02F0 MODIFIER LETTER LOW UP ARROWHEAD: not included in any glyphset definition\n * U+02F1 MODIFIER LETTER LOW LEFT ARROWHEAD: not included in any glyphset definition\n * U+02F2 MODIFIER LETTER LOW RIGHT ARROWHEAD: not included in any glyphset definition\n * U+02F3 MODIFIER LETTER LOW RING: not included in any glyphset definition\n * U+02F4 MODIFIER LETTER MIDDLE GRAVE ACCENT: not included in any glyphset definition\n * U+02F5 MODIFIER LETTER MIDDLE DOUBLE GRAVE ACCENT: not included in any glyphset definition\n * U+02F6 MODIFIER LETTER MIDDLE DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+02F7 MODIFIER LETTER LOW TILDE: not included in any glyphset definition\n * U+02F8 MODIFIER LETTER RAISED COLON: not included in any glyphset definition\n * U+02F9 MODIFIER LETTER BEGIN HIGH TONE: not included in any glyphset definition\n * U+02FA MODIFIER LETTER END HIGH TONE: not included in any glyphset definition\n * U+02FB MODIFIER LETTER BEGIN LOW TONE: not included in any glyphset definition\n * U+02FC MODIFIER LETTER END LOW TONE: not included in any glyphset definition\n * U+02FD MODIFIER LETTER SHELF: not included in any glyphset definition\n * U+02FE MODIFIER LETTER OPEN SHELF: not included in any glyphset definition\n * U+02FF MODIFIER LETTER LOW LEFT ARROW: not included in any glyphset definition\n * U+0300 COMBINING GRAVE ACCENT: try adding one of: tai-le, coptic, cherokee\n * U+0301 COMBINING ACUTE ACCENT: try adding one of: tifinagh, tai-le, coptic, cherokee\n * U+0302 COMBINING CIRCUMFLEX ACCENT: try adding one of: tifinagh, coptic, cherokee\n * U+0303 COMBINING TILDE: not included in any glyphset definition\n * U+0304 COMBINING MACRON: try adding one of: gothic, tifinagh, coptic, cherokee\n * U+0305 COMBINING OVERLINE: try adding one of: gothic, coptic\n * U+0306 COMBINING BREVE: try adding tifinagh\n * U+0307 COMBINING DOT ABOVE: try adding one of: canadian-aboriginal, coptic, tai-le, tifinagh, malayalam\n * U+0308 COMBINING DIAERESIS: try adding one of: gothic, tai-le, coptic\n * U+0309 COMBINING HOOK ABOVE: try adding tifinagh\n * U+030A COMBINING RING ABOVE: not included in any glyphset definition\n * U+030B COMBINING DOUBLE ACUTE ACCENT: try adding cherokee\n * U+030C COMBINING CARON: try adding one of: tai-le, cherokee\n * U+030D COMBINING VERTICAL LINE ABOVE: not included in any glyphset definition\n * U+030E COMBINING DOUBLE VERTICAL LINE ABOVE: not included in any glyphset definition\n * U+030F COMBINING DOUBLE GRAVE ACCENT: not included in any glyphset definition\n * U+0310 COMBINING CANDRABINDU: not included in any glyphset definition\n * U+0311 COMBINING INVERTED BREVE: try adding coptic\n * U+0312 COMBINING TURNED COMMA ABOVE: not included in any glyphset definition\n * U+0313 COMBINING COMMA ABOVE: not included in any glyphset definition\n * U+0314 COMBINING REVERSED COMMA ABOVE: not included in any glyphset definition\n * U+0315 COMBINING COMMA ABOVE RIGHT: not included in any glyphset definition\n * U+0316 COMBINING GRAVE ACCENT BELOW: not included in any glyphset definition\n * U+0317 COMBINING ACUTE ACCENT BELOW: not included in any glyphset definition\n * U+0318 COMBINING LEFT TACK BELOW: not included in any glyphset definition\n * U+0319 COMBINING RIGHT TACK BELOW: not included in any glyphset definition\n * U+031A COMBINING LEFT ANGLE ABOVE: not included in any glyphset definition\n * U+031B COMBINING HORN: not included in any glyphset definition\n * U+031C COMBINING LEFT HALF RING BELOW: not included in any glyphset definition\n * U+031D COMBINING UP TACK BELOW: not included in any glyphset definition\n * U+031E COMBINING DOWN TACK BELOW: not included in any glyphset definition\n * U+031F COMBINING PLUS SIGN BELOW: not included in any glyphset definition\n * U+0320 COMBINING MINUS SIGN BELOW: not included in any glyphset definition\n * U+0321 COMBINING PALATALIZED HOOK BELOW: not included in any glyphset definition\n * U+0322 COMBINING RETROFLEX HOOK BELOW: not included in any glyphset definition\n * U+0323 COMBINING DOT BELOW: try adding one of: tifinagh, coptic, cherokee, malayalam\n * U+0324 COMBINING DIAERESIS BELOW: try adding cherokee\n * U+0325 COMBINING RING BELOW: not included in any glyphset definition\n * U+0326 COMBINING COMMA BELOW: not included in any glyphset definition\n * U+0327 COMBINING CEDILLA: not included in any glyphset definition\n * U+0328 COMBINING OGONEK: not included in any glyphset definition\n * U+0329 COMBINING VERTICAL LINE BELOW: not included in any glyphset definition\n * U+032A COMBINING BRIDGE BELOW: not included in any glyphset definition\n * U+032B COMBINING INVERTED DOUBLE ARCH BELOW: not included in any glyphset definition\n * U+032C COMBINING CARON BELOW: not included in any glyphset definition\n * U+032D COMBINING CIRCUMFLEX ACCENT BELOW: not included in any glyphset definition\n * U+032E COMBINING BREVE BELOW: not included in any glyphset definition\n * U+032F COMBINING INVERTED BREVE BELOW: not included in any glyphset definition\n * U+0330 COMBINING TILDE BELOW: try adding cherokee\n * U+0331 COMBINING MACRON BELOW: try adding one of: gothic, tifinagh, cherokee\n * U+0332 COMBINING LOW LINE: not included in any glyphset definition\n * U+0333 COMBINING DOUBLE LOW LINE: not included in any glyphset definition\n * U+0334 COMBINING TILDE OVERLAY: not included in any glyphset definition\n * U+0335 COMBINING SHORT STROKE OVERLAY: not included in any glyphset definition\n * U+0336 COMBINING LONG STROKE OVERLAY: not included in any glyphset definition\n * U+0337 COMBINING SHORT SOLIDUS OVERLAY: not included in any glyphset definition\n * U+0338 COMBINING LONG SOLIDUS OVERLAY: not included in any glyphset definition\n * U+0339 COMBINING RIGHT HALF RING BELOW: not included in any glyphset definition\n * U+033A COMBINING INVERTED BRIDGE BELOW: not included in any glyphset definition\n * U+033B COMBINING SQUARE BELOW: not included in any glyphset definition\n * U+033C COMBINING SEAGULL BELOW: not included in any glyphset definition\n * U+033D COMBINING X ABOVE: not included in any glyphset definition\n * U+033E COMBINING VERTICAL TILDE: not included in any glyphset definition\n * U+033F COMBINING DOUBLE OVERLINE: try adding coptic\n * U+0340 COMBINING GRAVE TONE MARK: not included in any glyphset definition\n * U+0341 COMBINING ACUTE TONE MARK: not included in any glyphset definition\n * U+0342 COMBINING GREEK PERISPOMENI: not included in any glyphset definition\n * U+0343 COMBINING GREEK KORONIS: not included in any glyphset definition\n * U+0344 COMBINING GREEK DIALYTIKA TONOS: not included in any glyphset definition\n * U+0345 COMBINING GREEK YPOGEGRAMMENI: not included in any glyphset definition\n * U+0346 COMBINING BRIDGE ABOVE: not included in any glyphset definition\n * U+0347 COMBINING EQUALS SIGN BELOW: not included in any glyphset definition\n * U+0348 COMBINING DOUBLE VERTICAL LINE BELOW: not included in any glyphset definition\n * U+0349 COMBINING LEFT ANGLE BELOW: not included in any glyphset definition\n * U+034A COMBINING NOT TILDE ABOVE: not included in any glyphset definition\n * U+034B COMBINING HOMOTHETIC ABOVE: not included in any glyphset definition\n * U+034C COMBINING ALMOST EQUAL TO ABOVE: not included in any glyphset definition\n * U+034D COMBINING LEFT RIGHT ARROW BELOW: not included in any glyphset definition\n * U+034E COMBINING UPWARDS ARROW BELOW: not included in any glyphset definition\n * U+034F COMBINING GRAPHEME JOINER: not included in any glyphset definition\n * U+0350 COMBINING RIGHT ARROWHEAD ABOVE: not included in any glyphset definition\n * U+0351 COMBINING LEFT HALF RING ABOVE: not included in any glyphset definition\n * U+0352 COMBINING FERMATA: not included in any glyphset definition\n * U+0353 COMBINING X BELOW: not included in any glyphset definition\n * U+0354 COMBINING LEFT ARROWHEAD BELOW: not included in any glyphset definition\n * U+0355 COMBINING RIGHT ARROWHEAD BELOW: not included in any glyphset definition\n * U+0356 COMBINING RIGHT ARROWHEAD AND UP ARROWHEAD BELOW: not included in any glyphset definition\n * U+0357 COMBINING RIGHT HALF RING ABOVE: not included in any glyphset definition\n * U+0358 COMBINING DOT ABOVE RIGHT: not included in any glyphset definition\n * U+0359 COMBINING ASTERISK BELOW: not included in any glyphset definition\n * U+035A COMBINING DOUBLE RING BELOW: not included in any glyphset definition\n * U+035B COMBINING ZIGZAG ABOVE: not included in any glyphset definition\n * U+035C COMBINING DOUBLE BREVE BELOW: not included in any glyphset definition\n * U+035D COMBINING DOUBLE BREVE: not included in any glyphset definition\n * U+035E COMBINING DOUBLE MACRON: try adding coptic\n * U+035F COMBINING DOUBLE MACRON BELOW: not included in any glyphset definition\n * U+0360 COMBINING DOUBLE TILDE: not included in any glyphset definition\n * U+0361 COMBINING DOUBLE INVERTED BREVE: try adding coptic\n * U+0362 COMBINING DOUBLE RIGHTWARDS ARROW BELOW: not included in any glyphset definition\n * U+0363 COMBINING LATIN SMALL LETTER A: not included in any glyphset definition\n * U+0364 COMBINING LATIN SMALL LETTER E: not included in any glyphset definition\n * U+0365 COMBINING LATIN SMALL LETTER I: not included in any glyphset definition\n * U+0366 COMBINING LATIN SMALL LETTER O: not included in any glyphset definition\n * U+0367 COMBINING LATIN SMALL LETTER U: not included in any glyphset definition\n * U+0368 COMBINING LATIN SMALL LETTER C: not included in any glyphset definition\n * U+0369 COMBINING LATIN SMALL LETTER D: not included in any glyphset definition\n * U+036A COMBINING LATIN SMALL LETTER H: not included in any glyphset definition\n * U+036B COMBINING LATIN SMALL LETTER M: not included in any glyphset definition\n * U+036C COMBINING LATIN SMALL LETTER R: not included in any glyphset definition\n * U+036D COMBINING LATIN SMALL LETTER T: not included in any glyphset definition\n * U+036E COMBINING LATIN SMALL LETTER V: not included in any glyphset definition\n * U+036F COMBINING LATIN SMALL LETTER X: not included in any glyphset definition\n * U+0485 COMBINING CYRILLIC DASIA PNEUMATA: try adding cyrillic-ext\n * U+0486 COMBINING CYRILLIC PSILI PNEUMATA: try adding cyrillic-ext\n * U+0591 HEBREW ACCENT ETNAHTA: not included in any glyphset definition\n * U+0592 HEBREW ACCENT SEGOL: not included in any glyphset definition\n * U+0593 HEBREW ACCENT SHALSHELET: not included in any glyphset definition\n * U+0594 HEBREW ACCENT ZAQEF QATAN: not included in any glyphset definition\n * U+0595 HEBREW ACCENT ZAQEF GADOL: not included in any glyphset definition\n * U+0596 HEBREW ACCENT TIPEHA: not included in any glyphset definition\n * U+0597 HEBREW ACCENT REVIA: not included in any glyphset definition\n * U+0598 HEBREW ACCENT ZARQA: not included in any glyphset definition\n * U+0599 HEBREW ACCENT PASHTA: not included in any glyphset definition\n * U+059A HEBREW ACCENT YETIV: not included in any glyphset definition\n * U+059B HEBREW ACCENT TEVIR: not included in any glyphset definition\n * U+059C HEBREW ACCENT GERESH: not included in any glyphset definition\n * U+059D HEBREW ACCENT GERESH MUQDAM: not included in any glyphset definition\n * U+059E HEBREW ACCENT GERSHAYIM: not included in any glyphset definition\n * U+059F HEBREW ACCENT QARNEY PARA: not included in any glyphset definition\n * U+05A0 HEBREW ACCENT TELISHA GEDOLA: not included in any glyphset definition\n * U+05A1 HEBREW ACCENT PAZER: not included in any glyphset definition\n * U+05A2 HEBREW ACCENT ATNAH HAFUKH: not included in any glyphset definition\n * U+05A3 HEBREW ACCENT MUNAH: not included in any glyphset definition\n * U+05A4 HEBREW ACCENT MAHAPAKH: not included in any glyphset definition\n * U+05A5 HEBREW ACCENT MERKHA: not included in any glyphset definition\n * U+05A6 HEBREW ACCENT MERKHA KEFULA: not included in any glyphset definition\n * U+05A7 HEBREW ACCENT DARGA: not included in any glyphset definition\n * U+05A8 HEBREW ACCENT QADMA: not included in any glyphset definition\n * U+05A9 HEBREW ACCENT TELISHA QETANA: not included in any glyphset definition\n * U+05AA HEBREW ACCENT YERAH BEN YOMO: not included in any glyphset definition\n * U+05AB HEBREW ACCENT OLE: not included in any glyphset definition\n * U+05AC HEBREW ACCENT ILUY: not included in any glyphset definition\n * U+05AD HEBREW ACCENT DEHI: not included in any glyphset definition\n * U+05AE HEBREW ACCENT ZINOR: not included in any glyphset definition\n * U+05AF HEBREW MARK MASORA CIRCLE: not included in any glyphset definition\n * U+05BD HEBREW POINT METEG: not included in any glyphset definition\n * U+05BF HEBREW POINT RAFE: not included in any glyphset definition\n * U+05C4 HEBREW MARK UPPER DOT: not included in any glyphset definition\n * U+05C5 HEBREW MARK LOWER DOT: not included in any glyphset definition\n * U+05C6 HEBREW PUNCTUATION NUN HAFUKHA: not included in any glyphset definition\n * U+05F0 HEBREW LIGATURE YIDDISH DOUBLE VAV: not included in any glyphset definition\n * U+05F1 HEBREW LIGATURE YIDDISH VAV YOD: not included in any glyphset definition\n * U+05F2 HEBREW LIGATURE YIDDISH DOUBLE YOD: not included in any glyphset definition\n * U+0660 ARABIC-INDIC DIGIT ZERO: try adding one of: thaana, arabic\n * U+0661 ARABIC-INDIC DIGIT ONE: try adding one of: thaana, arabic\n * U+0662 ARABIC-INDIC DIGIT TWO: try adding one of: thaana, arabic\n * U+0663 ARABIC-INDIC DIGIT THREE: try adding one of: thaana, arabic\n * U+0664 ARABIC-INDIC DIGIT FOUR: try adding one of: thaana, arabic\n * U+0665 ARABIC-INDIC DIGIT FIVE: try adding one of: thaana, arabic\n * U+0666 ARABIC-INDIC DIGIT SIX: try adding one of: thaana, arabic\n * U+0667 ARABIC-INDIC DIGIT SEVEN: try adding one of: thaana, arabic\n * U+0668 ARABIC-INDIC DIGIT EIGHT: try adding one of: thaana, arabic\n * U+0669 ARABIC-INDIC DIGIT NINE: try adding one of: thaana, arabic\n * U+10FB GEORGIAN PARAGRAPH SEPARATOR: not included in any glyphset definition\n * U+16A0 RUNIC LETTER FEHU FEOH FE F: try adding runic\n * U+16A1 RUNIC LETTER V: try adding runic\n * U+16A2 RUNIC LETTER URUZ UR U: try adding runic\n * U+16A3 RUNIC LETTER YR: try adding runic\n * U+16A4 RUNIC LETTER Y: try adding runic\n * U+16A5 RUNIC LETTER W: try adding runic\n * U+16A6 RUNIC LETTER THURISAZ THURS THORN: try adding runic\n * U+16A7 RUNIC LETTER ETH: try adding runic\n * U+16A8 RUNIC LETTER ANSUZ A: try adding runic\n * U+16A9 RUNIC LETTER OS O: try adding runic\n * U+16AA RUNIC LETTER AC A: try adding runic\n * U+16AB RUNIC LETTER AESC: try adding runic\n * U+16AC RUNIC LETTER LONG-BRANCH-OSS O: try adding runic\n * U+16AD RUNIC LETTER SHORT-TWIG-OSS O: try adding runic\n * U+16AE RUNIC LETTER O: try adding runic\n * U+16AF RUNIC LETTER OE: try adding runic\n * U+16B0 RUNIC LETTER ON: try adding runic\n * U+16B1 RUNIC LETTER RAIDO RAD REID R: try adding runic\n * U+16B2 RUNIC LETTER KAUNA: try adding runic\n * U+16B3 RUNIC LETTER CEN: try adding runic\n * U+16B4 RUNIC LETTER KAUN K: try adding runic\n * U+16B5 RUNIC LETTER G: try adding runic\n * U+16B6 RUNIC LETTER ENG: try adding runic\n * U+16B7 RUNIC LETTER GEBO GYFU G: try adding runic\n * U+16B8 RUNIC LETTER GAR: try adding runic\n * U+16B9 RUNIC LETTER WUNJO WYNN W: try adding runic\n * U+16BA RUNIC LETTER HAGLAZ H: try adding runic\n * U+16BB RUNIC LETTER HAEGL H: try adding runic\n * U+16BC RUNIC LETTER LONG-BRANCH-HAGALL H: try adding runic\n * U+16BD RUNIC LETTER SHORT-TWIG-HAGALL H: try adding runic\n * U+16BE RUNIC LETTER NAUDIZ NYD NAUD N: try adding runic\n * U+16BF RUNIC LETTER SHORT-TWIG-NAUD N: try adding runic\n * U+16C0 RUNIC LETTER DOTTED-N: try adding runic\n * U+16C1 RUNIC LETTER ISAZ IS ISS I: try adding runic\n * U+16C2 RUNIC LETTER E: try adding runic\n * U+16C3 RUNIC LETTER JERAN J: try adding runic\n * U+16C4 RUNIC LETTER GER: try adding runic\n * U+16C5 RUNIC LETTER LONG-BRANCH-AR AE: try adding runic\n * U+16C6 RUNIC LETTER SHORT-TWIG-AR A: try adding runic\n * U+16C7 RUNIC LETTER IWAZ EOH: try adding runic\n * U+16C8 RUNIC LETTER PERTHO PEORTH P: try adding runic\n * U+16C9 RUNIC LETTER ALGIZ EOLHX: try adding runic\n * U+16CA RUNIC LETTER SOWILO S: try adding runic\n * U+16CB RUNIC LETTER SIGEL LONG-BRANCH-SOL S: try adding runic\n * U+16CC RUNIC LETTER SHORT-TWIG-SOL S: try adding runic\n * U+16CD RUNIC LETTER C: try adding runic\n * U+16CE RUNIC LETTER Z: try adding runic\n * U+16CF RUNIC LETTER TIWAZ TIR TYR T: try adding runic\n * U+16D0 RUNIC LETTER SHORT-TWIG-TYR T: try adding runic\n * U+16D1 RUNIC LETTER D: try adding runic\n * U+16D2 RUNIC LETTER BERKANAN BEORC BJARKAN B: try adding runic\n * U+16D3 RUNIC LETTER SHORT-TWIG-BJARKAN B: try adding runic\n * U+16D4 RUNIC LETTER DOTTED-P: try adding runic\n * U+16D5 RUNIC LETTER OPEN-P: try adding runic\n * U+16D6 RUNIC LETTER EHWAZ EH E: try adding runic\n * U+16D7 RUNIC LETTER MANNAZ MAN M: try adding runic\n * U+16D8 RUNIC LETTER LONG-BRANCH-MADR M: try adding runic\n * U+16D9 RUNIC LETTER SHORT-TWIG-MADR M: try adding runic\n * U+16DA RUNIC LETTER LAUKAZ LAGU LOGR L: try adding runic\n * U+16DB RUNIC LETTER DOTTED-L: try adding runic\n * U+16DC RUNIC LETTER INGWAZ: try adding runic\n * U+16DD RUNIC LETTER ING: try adding runic\n * U+16DE RUNIC LETTER DAGAZ DAEG D: try adding runic\n * U+16DF RUNIC LETTER OTHALAN ETHEL O: try adding runic\n * U+16E0 RUNIC LETTER EAR: try adding runic\n * U+16E1 RUNIC LETTER IOR: try adding runic\n * U+16E2 RUNIC LETTER CWEORTH: try adding runic\n * U+16E3 RUNIC LETTER CALC: try adding runic\n * U+16E4 RUNIC LETTER CEALC: try adding runic\n * U+16E5 RUNIC LETTER STAN: try adding runic\n * U+16E6 RUNIC LETTER LONG-BRANCH-YR: try adding runic\n * U+16E7 RUNIC LETTER SHORT-TWIG-YR: try adding runic\n * U+16E8 RUNIC LETTER ICELANDIC-YR: try adding runic\n * U+16E9 RUNIC LETTER Q: try adding runic\n * U+16EA RUNIC LETTER X: try adding runic\n * U+16EB RUNIC SINGLE PUNCTUATION: try adding runic\n * U+16EC RUNIC MULTIPLE PUNCTUATION: try adding runic\n * U+16ED RUNIC CROSS PUNCTUATION: try adding runic\n * U+16EE RUNIC ARLAUG SYMBOL: try adding runic\n * U+16EF RUNIC TVIMADUR SYMBOL: try adding runic\n * U+16F0 RUNIC BELGTHOR SYMBOL: try adding runic\n * U+1D00 LATIN LETTER SMALL CAPITAL A: not included in any glyphset definition\n * U+1D01 LATIN LETTER SMALL CAPITAL AE: not included in any glyphset definition\n * U+1D04 LATIN LETTER SMALL CAPITAL C: not included in any glyphset definition\n * U+1D05 LATIN LETTER SMALL CAPITAL D: not included in any glyphset definition\n * U+1D06 LATIN LETTER SMALL CAPITAL ETH: not included in any glyphset definition\n * U+1D07 LATIN LETTER SMALL CAPITAL E: not included in any glyphset definition\n * U+1D0A LATIN LETTER SMALL CAPITAL J: not included in any glyphset definition\n * U+1D0B LATIN LETTER SMALL CAPITAL K: not included in any glyphset definition\n * U+1D0C LATIN LETTER SMALL CAPITAL L WITH STROKE: not included in any glyphset definition\n * U+1D0D LATIN LETTER SMALL CAPITAL M: not included in any glyphset definition\n * U+1D0F LATIN LETTER SMALL CAPITAL O: not included in any glyphset definition\n * U+1D18 LATIN LETTER SMALL CAPITAL P: not included in any glyphset definition\n * U+1D1B LATIN LETTER SMALL CAPITAL T: not included in any glyphset definition\n * U+1D1C LATIN LETTER SMALL CAPITAL U: not included in any glyphset definition\n * U+1D20 LATIN LETTER SMALL CAPITAL V: not included in any glyphset definition\n * U+1D21 LATIN LETTER SMALL CAPITAL W: not included in any glyphset definition\n * U+1D22 LATIN LETTER SMALL CAPITAL Z: not included in any glyphset definition\n * U+1D23 LATIN LETTER SMALL CAPITAL EZH: not included in any glyphset definition\n * U+1D6B LATIN SMALL LETTER UE: not included in any glyphset definition\n * U+1D79 LATIN SMALL LETTER INSULAR G: not included in any glyphset definition\n * U+1DC0 COMBINING DOTTED GRAVE ACCENT: not included in any glyphset definition\n * U+1DC1 COMBINING DOTTED ACUTE ACCENT: not included in any glyphset definition\n * U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW: try adding vietnamese\n * U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW: try adding vietnamese\n * U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE: try adding vietnamese\n * U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE: try adding vietnamese\n * U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE: try adding vietnamese\n * U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE: try adding vietnamese\n * U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW: try adding vietnamese\n * U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW: try adding vietnamese\n * U+1EBC LATIN CAPITAL LETTER E WITH TILDE: try adding vietnamese\n * U+1EBD LATIN SMALL LETTER E WITH TILDE: try adding vietnamese\n * U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE: try adding vietnamese\n * U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE: try adding vietnamese\n * U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW: try adding vietnamese\n * U+1ECB LATIN SMALL LETTER I WITH DOT BELOW: try adding vietnamese\n * U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW: try adding vietnamese\n * U+1ECD LATIN SMALL LETTER O WITH DOT BELOW: try adding vietnamese\n * U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE: try adding vietnamese\n * U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE: try adding vietnamese\n * U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW: try adding vietnamese\n * U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW: try adding vietnamese\n * U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE: try adding vietnamese\n * U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE: try adding vietnamese\n * U+2000 EN QUAD: not included in any glyphset definition\n * U+2001 EM QUAD: not included in any glyphset definition\n * U+2003 EM SPACE: not included in any glyphset definition\n * U+2004 THREE-PER-EM SPACE: not included in any glyphset definition\n * U+2005 FOUR-PER-EM SPACE: not included in any glyphset definition\n * U+2006 SIX-PER-EM SPACE: not included in any glyphset definition\n * U+2007 FIGURE SPACE: not included in any glyphset definition\n * U+2008 PUNCTUATION SPACE: not included in any glyphset definition\n * U+200A HAIR SPACE: not included in any glyphset definition\n * U+200C ZERO WIDTH NON-JOINER: try adding one of: mongolian, phags-pa, bengali, arabic, tai-le, myanmar, saurashtra, thaana, hanunoo, tagbanwa, tagalog, tifinagh, gujarati, avestan, rejang, gurmukhi, devanagari, brahmi, thai, mandaic, oriya, tamil, tai-viet, kayah-li, tai-tham, telugu, cham, sundanese, batak, lepcha, balinese, javanese, khmer, limbu, tibetan, kaithi, new-tai-lue, buhid, chakma, sinhala, syloti-nagri, kannada, meetei-mayek, kharoshthi, buginese, malayalam\n * U+200D ZERO WIDTH JOINER: try adding one of: mongolian, phags-pa, bengali, arabic, tai-le, myanmar, saurashtra, thaana, hanunoo, tagbanwa, tagalog, tifinagh, gujarati, avestan, rejang, gurmukhi, devanagari, brahmi, thai, mandaic, oriya, tamil, tai-viet, kayah-li, tai-tham, telugu, cham, sundanese, batak, lepcha, balinese, javanese, limbu, tibetan, kaithi, new-tai-lue, buhid, chakma, sinhala, syloti-nagri, kannada, meetei-mayek, kharoshthi, buginese, malayalam\n * U+200E LEFT-TO-RIGHT MARK: try adding one of: phags-pa, thaana, arabic\n * U+200F RIGHT-TO-LEFT MARK: try adding one of: phags-pa, thaana\n * U+2010 HYPHEN: try adding one of: cham, coptic, sundanese, kaithi, lisu, arabic, syloti-nagri, kayah-li, kharoshthi\n * U+2011 NON-BREAKING HYPHEN: try adding one of: syloti-nagri, arabic\n * U+2012 FIGURE DASH: not included in any glyphset definition\n * U+2015 HORIZONTAL BAR: not included in any glyphset definition\n * U+2016 DOUBLE VERTICAL LINE: not included in any glyphset definition\n * U+201B SINGLE HIGH-REVERSED-9 QUOTATION MARK: not included in any glyphset definition\n * U+201F DOUBLE HIGH-REVERSED-9 QUOTATION MARK: not included in any glyphset definition\n * U+2021 DOUBLE DAGGER: not included in any glyphset definition\n * U+2023 TRIANGULAR BULLET: not included in any glyphset definition\n * U+2024 ONE DOT LEADER: try adding armenian\n * U+2025 TWO DOT LEADER: try adding phags-pa\n * U+2027 HYPHENATION POINT: not included in any glyphset definition\n * U+202F NARROW NO-BREAK SPACE: try adding mongolian\n * U+2030 PER MILLE SIGN: not included in any glyphset definition\n * U+2035 REVERSED PRIME: not included in any glyphset definition\n * U+2038 CARET: not included in any glyphset definition\n * U+203B REFERENCE MARK: not included in any glyphset definition\n * U+203E OVERLINE: not included in any glyphset definition\n * U+203F UNDERTIE: not included in any glyphset definition\n * U+2040 CHARACTER TIE: not included in any glyphset definition\n * U+2041 CARET INSERTION POINT: not included in any glyphset definition\n * U+2042 ASTERISM: not included in any glyphset definition\n * U+2045 LEFT SQUARE BRACKET WITH QUILL: not included in any glyphset definition\n * U+2046 RIGHT SQUARE BRACKET WITH QUILL: not included in any glyphset definition\n * U+204A TIRONIAN SIGN ET: not included in any glyphset definition\n * U+204B REVERSED PILCROW SIGN: not included in any glyphset definition\n * U+2058 FOUR DOT PUNCTUATION: try adding coptic\n * U+2059 FIVE DOT PUNCTUATION: try adding coptic\n * U+205A TWO DOT PUNCTUATION: not included in any glyphset definition\n * U+205B FOUR DOT MARK: not included in any glyphset definition\n * U+205C DOTTED CROSS: not included in any glyphset definition\n * U+205D TRICOLON: not included in any glyphset definition\n * U+205E VERTICAL FOUR DOTS: not included in any glyphset definition\n * U+2070 SUPERSCRIPT ZERO: not included in any glyphset definition\n * U+2075 SUPERSCRIPT FIVE: not included in any glyphset definition\n * U+2076 SUPERSCRIPT SIX: not included in any glyphset definition\n * U+2077 SUPERSCRIPT SEVEN: not included in any glyphset definition\n * U+2078 SUPERSCRIPT EIGHT: not included in any glyphset definition\n * U+2079 SUPERSCRIPT NINE: not included in any glyphset definition\n * U+207A SUPERSCRIPT PLUS SIGN: not included in any glyphset definition\n * U+207B SUPERSCRIPT MINUS: not included in any glyphset definition\n * U+207C SUPERSCRIPT EQUALS SIGN: not included in any glyphset definition\n * U+207D SUPERSCRIPT LEFT PARENTHESIS: not included in any glyphset definition\n * U+207E SUPERSCRIPT RIGHT PARENTHESIS: not included in any glyphset definition\n * U+207F SUPERSCRIPT LATIN SMALL LETTER N: not included in any glyphset definition\n * U+2080 SUBSCRIPT ZERO: not included in any glyphset definition\n * U+2081 SUBSCRIPT ONE: not included in any glyphset definition\n * U+2082 SUBSCRIPT TWO: not included in any glyphset definition\n * U+2083 SUBSCRIPT THREE: not included in any glyphset definition\n * U+2084 SUBSCRIPT FOUR: not included in any glyphset definition\n * U+2085 SUBSCRIPT FIVE: not included in any glyphset definition\n * U+2086 SUBSCRIPT SIX: not included in any glyphset definition\n * U+2087 SUBSCRIPT SEVEN: not included in any glyphset definition\n * U+2088 SUBSCRIPT EIGHT: not included in any glyphset definition\n * U+2089 SUBSCRIPT NINE: not included in any glyphset definition\n * U+208A SUBSCRIPT PLUS SIGN: not included in any glyphset definition\n * U+208B SUBSCRIPT MINUS: not included in any glyphset definition\n * U+208C SUBSCRIPT EQUALS SIGN: not included in any glyphset definition\n * U+208D SUBSCRIPT LEFT PARENTHESIS: not included in any glyphset definition\n * U+208E SUBSCRIPT RIGHT PARENTHESIS: not included in any glyphset definition\n * U+210C BLACK-LETTER CAPITAL H: not included in any glyphset definition\n * U+2112 SCRIPT CAPITAL L: not included in any glyphset definition\n * U+2114 L B BAR SYMBOL: not included in any glyphset definition\n * U+2116 NUMERO SIGN: try adding cyrillic\n * U+211E PRESCRIPTION TAKE: not included in any glyphset definition\n * U+211F RESPONSE: not included in any glyphset definition\n * U+2123 VERSICLE: not included in any glyphset definition\n * U+2126 OHM SIGN: not included in any glyphset definition\n * U+2127 INVERTED OHM SIGN: not included in any glyphset definition\n * U+212D BLACK-LETTER CAPITAL C: not included in any glyphset definition\n * U+2132 TURNED CAPITAL F: not included in any glyphset definition\n * U+2135 ALEF SYMBOL: not included in any glyphset definition\n * U+2180 ROMAN NUMERAL ONE THOUSAND C D: not included in any glyphset definition\n * U+2181 ROMAN NUMERAL FIVE THOUSAND: not included in any glyphset definition\n * U+2182 ROMAN NUMERAL TEN THOUSAND: not included in any glyphset definition\n * U+2183 ROMAN NUMERAL REVERSED ONE HUNDRED: not included in any glyphset definition\n * U+2190 LEFTWARDS ARROW: not included in any glyphset definition\n * U+2192 RIGHTWARDS ARROW: not included in any glyphset definition\n * U+2194 LEFT RIGHT ARROW: not included in any glyphset definition\n * U+2195 UP DOWN ARROW: not included in any glyphset definition\n * U+2196 NORTH WEST ARROW: not included in any glyphset definition\n * U+2197 NORTH EAST ARROW: not included in any glyphset definition\n * U+2198 SOUTH EAST ARROW: not included in any glyphset definition\n * U+2199 SOUTH WEST ARROW: not included in any glyphset definition\n * U+21B6 ANTICLOCKWISE TOP SEMICIRCLE ARROW: not included in any glyphset definition\n * U+21B7 CLOCKWISE TOP SEMICIRCLE ARROW: not included in any glyphset definition\n * U+21BA ANTICLOCKWISE OPEN CIRCLE ARROW: not included in any glyphset definition\n * U+21BB CLOCKWISE OPEN CIRCLE ARROW: not included in any glyphset definition\n * U+2202 PARTIAL DIFFERENTIAL: not included in any glyphset definition\n * U+2206 INCREMENT: not included in any glyphset definition\n * U+220F N-ARY PRODUCT: not included in any glyphset definition\n * U+2211 N-ARY SUMMATION: not included in any glyphset definition\n * U+2219 BULLET OPERATOR: try adding tai-tham\n * U+221A SQUARE ROOT: not included in any glyphset definition\n * U+221E INFINITY: not included in any glyphset definition\n * U+2227 LOGICAL AND: not included in any glyphset definition\n * U+222B INTEGRAL: not included in any glyphset definition\n * U+2234 THEREFORE: not included in any glyphset definition\n * U+2235 BECAUSE: not included in any glyphset definition\n * U+2237 PROPORTION: not included in any glyphset definition\n * U+223B HOMOTHETIC: not included in any glyphset definition\n * U+223D REVERSED TILDE: not included in any glyphset definition\n * U+2248 ALMOST EQUAL TO: not included in any glyphset definition\n * U+224C ALL EQUAL TO: not included in any glyphset definition\n * U+2260 NOT EQUAL TO: not included in any glyphset definition\n * U+2264 LESS-THAN OR EQUAL TO: not included in any glyphset definition\n * U+2265 GREATER-THAN OR EQUAL TO: not included in any glyphset definition\n * U+2295 CIRCLED PLUS: not included in any glyphset definition\n * U+2297 CIRCLED TIMES: not included in any glyphset definition\n * U+22A5 UP TACK: not included in any glyphset definition\n * U+22C5 DOT OPERATOR: not included in any glyphset definition\n * U+22D7 GREATER-THAN WITH DOT: not included in any glyphset definition\n * U+22EE VERTICAL ELLIPSIS: not included in any glyphset definition\n * U+2300 DIAMETER SIGN: not included in any glyphset definition\n * U+2308 LEFT CEILING: not included in any glyphset definition\n * U+2309 RIGHT CEILING: not included in any glyphset definition\n * U+230A LEFT FLOOR: not included in any glyphset definition\n * U+230B RIGHT FLOOR: not included in any glyphset definition\n * U+2310 REVERSED NOT SIGN: not included in any glyphset definition\n * U+2318 PLACE OF INTEREST SIGN: not included in any glyphset definition\n * U+231C TOP LEFT CORNER: not included in any glyphset definition\n * U+231D TOP RIGHT CORNER: not included in any glyphset definition\n * U+231E BOTTOM LEFT CORNER: not included in any glyphset definition\n * U+231F BOTTOM RIGHT CORNER: not included in any glyphset definition\n * U+2325 OPTION KEY: not included in any glyphset definition\n * U+2329 LEFT-POINTING ANGLE BRACKET: not included in any glyphset definition\n * U+232A RIGHT-POINTING ANGLE BRACKET: not included in any glyphset definition\n * U+239B LEFT PARENTHESIS UPPER HOOK: not included in any glyphset definition\n * U+239C LEFT PARENTHESIS EXTENSION: not included in any glyphset definition\n * U+239D LEFT PARENTHESIS LOWER HOOK: not included in any glyphset definition\n * U+239E RIGHT PARENTHESIS UPPER HOOK: not included in any glyphset definition\n * U+239F RIGHT PARENTHESIS EXTENSION: not included in any glyphset definition\n * U+23A0 RIGHT PARENTHESIS LOWER HOOK: not included in any glyphset definition\n * U+23A7 LEFT CURLY BRACKET UPPER HOOK: not included in any glyphset definition\n * U+23A8 LEFT CURLY BRACKET MIDDLE PIECE: not included in any glyphset definition\n * U+23A9 LEFT CURLY BRACKET LOWER HOOK: not included in any glyphset definition\n * U+23AA CURLY BRACKET EXTENSION: not included in any glyphset definition\n * U+23AB RIGHT CURLY BRACKET UPPER HOOK: not included in any glyphset definition\n * U+23AC RIGHT CURLY BRACKET MIDDLE PIECE: not included in any glyphset definition\n * U+23AD RIGHT CURLY BRACKET LOWER HOOK: not included in any glyphset definition\n * U+23D1 METRICAL BREVE: not included in any glyphset definition\n * U+23D2 METRICAL LONG OVER SHORT: not included in any glyphset definition\n * U+23D3 METRICAL SHORT OVER LONG: not included in any glyphset definition\n * U+23D4 METRICAL LONG OVER TWO SHORTS: not included in any glyphset definition\n * U+23D5 METRICAL TWO SHORTS OVER LONG: not included in any glyphset definition\n * U+23D6 METRICAL TWO SHORTS JOINED: not included in any glyphset definition\n * U+23D7 METRICAL TRISEME: not included in any glyphset definition\n * U+23D8 METRICAL TETRASEME: not included in any glyphset definition\n * U+23D9 METRICAL PENTASEME: not included in any glyphset definition\n * U+2510 BOX DRAWINGS LIGHT DOWN AND LEFT: not included in any glyphset definition\n * U+25A0 BLACK SQUARE: not included in any glyphset definition\n * U+25A1 WHITE SQUARE: not included in any glyphset definition\n * U+25AD WHITE RECTANGLE: not included in any glyphset definition\n * U+25B7 WHITE RIGHT-POINTING TRIANGLE: not included in any glyphset definition\n * U+25C1 WHITE LEFT-POINTING TRIANGLE: not included in any glyphset definition\n * U+25CA LOZENGE: not included in any glyphset definition\n * U+25CB WHITE CIRCLE: not included in any glyphset definition\n * U+25CF BLACK CIRCLE: not included in any glyphset definition\n * U+25E1 LOWER HALF CIRCLE: not included in any glyphset definition\n * U+25EF LARGE CIRCLE: not included in any glyphset definition\n * U+2605 BLACK STAR: not included in any glyphset definition\n * U+2609 SUN: not included in any glyphset definition\n * U+260A ASCENDING NODE: not included in any glyphset definition\n * U+260B DESCENDING NODE: not included in any glyphset definition\n * U+260C CONJUNCTION: not included in any glyphset definition\n * U+260D OPPOSITION: not included in any glyphset definition\n * U+2627 CHI RHO: not included in any glyphset definition\n * U+2629 CROSS OF JERUSALEM: not included in any glyphset definition\n * U+263D FIRST QUARTER MOON: not included in any glyphset definition\n * U+263E LAST QUARTER MOON: not included in any glyphset definition\n * U+263F MERCURY: not included in any glyphset definition\n * U+2640 FEMALE SIGN: not included in any glyphset definition\n * U+2641 EARTH: not included in any glyphset definition\n * U+2642 MALE SIGN: not included in any glyphset definition\n * U+2643 JUPITER: not included in any glyphset definition\n * U+2644 SATURN: not included in any glyphset definition\n * U+2645 URANUS: not included in any glyphset definition\n * U+2646 NEPTUNE: not included in any glyphset definition\n * U+2647 PLUTO: not included in any glyphset definition\n * U+2648 ARIES: not included in any glyphset definition\n * U+2649 TAURUS: not included in any glyphset definition\n * U+264A GEMINI: not included in any glyphset definition\n * U+264B CANCER: not included in any glyphset definition\n * U+264C LEO: not included in any glyphset definition\n * U+264D VIRGO: not included in any glyphset definition\n * U+264E LIBRA: not included in any glyphset definition\n * U+264F SCORPIUS: not included in any glyphset definition\n * U+2650 SAGITTARIUS: not included in any glyphset definition\n * U+2651 CAPRICORN: not included in any glyphset definition\n * U+2652 AQUARIUS: not included in any glyphset definition\n * U+2653 PISCES: not included in any glyphset definition\n * U+271B OPEN CENTRE CROSS: not included in any glyphset definition\n * U+271D LATIN CROSS: not included in any glyphset definition\n * U+2731 HEAVY ASTERISK: not included in any glyphset definition\n * U+2733 EIGHT SPOKED ASTERISK: not included in any glyphset definition\n * U+2734 EIGHT POINTED BLACK STAR: not included in any glyphset definition\n * U+2736 SIX POINTED BLACK STAR: not included in any glyphset definition\n * U+2767 ROTATED FLORAL HEART BULLET: not included in any glyphset definition\n * U+27C0 THREE DIMENSIONAL ANGLE: not included in any glyphset definition\n * U+27C1 WHITE TRIANGLE CONTAINING SMALL WHITE TRIANGLE: not included in any glyphset definition\n * U+27C2 PERPENDICULAR: not included in any glyphset definition\n * U+27E6 MATHEMATICAL LEFT WHITE SQUARE BRACKET: not included in any glyphset definition\n * U+27E7 MATHEMATICAL RIGHT WHITE SQUARE BRACKET: not included in any glyphset definition\n * U+27E8 MATHEMATICAL LEFT ANGLE BRACKET: not included in any glyphset definition\n * U+27E9 MATHEMATICAL RIGHT ANGLE BRACKET: not included in any glyphset definition\n * U+27EA MATHEMATICAL LEFT DOUBLE ANGLE BRACKET: not included in any glyphset definition\n * U+27EB MATHEMATICAL RIGHT DOUBLE ANGLE BRACKET: not included in any glyphset definition\n * U+27F2 ANTICLOCKWISE GAPPED CIRCLE ARROW: not included in any glyphset definition\n * U+27F3 CLOCKWISE GAPPED CIRCLE ARROW: not included in any glyphset definition\n * U+2938 RIGHT-SIDE ARC CLOCKWISE ARROW: not included in any glyphset definition\n * U+2939 LEFT-SIDE ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293A TOP ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293B BOTTOM ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293E LOWER RIGHT SEMICIRCULAR CLOCKWISE ARROW: not included in any glyphset definition\n * U+293F LOWER LEFT SEMICIRCULAR ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+2985 LEFT WHITE PARENTHESIS: not included in any glyphset definition\n * U+2986 RIGHT WHITE PARENTHESIS: not included in any glyphset definition\n * U+2AFD DOUBLE SOLIDUS OPERATOR: not included in any glyphset definition\n * U+2E00 RIGHT ANGLE SUBSTITUTION MARKER: not included in any glyphset definition\n * U+2E01 RIGHT ANGLE DOTTED SUBSTITUTION MARKER: not included in any glyphset definition\n * U+2E02 LEFT SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E03 RIGHT SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E04 LEFT DOTTED SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E05 RIGHT DOTTED SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E06 RAISED INTERPOLATION MARKER: not included in any glyphset definition\n * U+2E07 RAISED DOTTED INTERPOLATION MARKER: not included in any glyphset definition\n * U+2E08 DOTTED TRANSPOSITION MARKER: not included in any glyphset definition\n * U+2E09 LEFT TRANSPOSITION BRACKET: not included in any glyphset definition\n * U+2E0A RIGHT TRANSPOSITION BRACKET: not included in any glyphset definition\n * U+2E0B RAISED SQUARE: not included in any glyphset definition\n * U+2E0C LEFT RAISED OMISSION BRACKET: not included in any glyphset definition\n * U+2E0D RIGHT RAISED OMISSION BRACKET: not included in any glyphset definition\n * U+2E0E EDITORIAL CORONIS: not included in any glyphset definition\n * U+2E0F PARAGRAPHOS: not included in any glyphset definition\n * U+2E10 FORKED PARAGRAPHOS: not included in any glyphset definition\n * U+2E11 REVERSED FORKED PARAGRAPHOS: not included in any glyphset definition\n * U+2E12 HYPODIASTOLE: not included in any glyphset definition\n * U+2E13 DOTTED OBELOS: not included in any glyphset definition\n * U+2E14 DOWNWARDS ANCORA: not included in any glyphset definition\n * U+2E15 UPWARDS ANCORA: not included in any glyphset definition\n * U+2E16 DOTTED RIGHT-POINTING ANGLE: not included in any glyphset definition\n * U+2E17 DOUBLE OBLIQUE HYPHEN: try adding coptic\n * U+2E1C LEFT LOW PARAPHRASE BRACKET: not included in any glyphset definition\n * U+2E1D RIGHT LOW PARAPHRASE BRACKET: not included in any glyphset definition\n * U+3008 LEFT ANGLE BRACKET: try adding one of: phags-pa, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+3009 RIGHT ANGLE BRACKET: try adding one of: phags-pa, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+300A LEFT DOUBLE ANGLE BRACKET: try adding one of: mongolian, phags-pa, lisu, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+300B RIGHT DOUBLE ANGLE BRACKET: try adding one of: mongolian, phags-pa, lisu, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+300C LEFT CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+300D RIGHT CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+300E LEFT WHITE CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+300F RIGHT WHITE CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+3016 LEFT WHITE LENTICULAR BRACKET: try adding one of: chinese-simplified, phags-pa, yi\n * U+3017 RIGHT WHITE LENTICULAR BRACKET: try adding one of: chinese-simplified, phags-pa, yi\n * U+301A LEFT WHITE SQUARE BRACKET: try adding one of: phags-pa, yi\n * U+301B RIGHT WHITE SQUARE BRACKET: try adding one of: phags-pa, yi\n * U+E00A : not included in any glyphset definition\n * U+E010 : not included in any glyphset definition\n * U+E025 : not included in any glyphset definition\n * U+E033 : not included in any glyphset definition\n * U+E034 : not included in any glyphset definition\n * U+E03A : not included in any glyphset definition\n * U+E03D : not included in any glyphset definition\n * U+E03F : not included in any glyphset definition\n * U+E040 : not included in any glyphset definition\n * U+E041 : not included in any glyphset definition\n * U+E042 : not included in any glyphset definition\n * U+E066 : not included in any glyphset definition\n * U+E074 : not included in any glyphset definition\n * U+E075 : not included in any glyphset definition\n * U+E08F : not included in any glyphset definition\n * U+E099 : not included in any glyphset definition\n * U+E0B7 : not included in any glyphset definition\n * U+E0C3 : not included in any glyphset definition\n * U+E0D1 : not included in any glyphset definition\n * U+E0E8 : not included in any glyphset definition\n * U+E0E9 : not included in any glyphset definition\n * U+E0EE : not included in any glyphset definition\n * U+E101 : not included in any glyphset definition\n * U+E116 : not included in any glyphset definition\n * U+E12A : not included in any glyphset definition\n * U+E135 : not included in any glyphset definition\n * U+E137 : not included in any glyphset definition\n * U+E13F : not included in any glyphset definition\n * U+E143 : not included in any glyphset definition\n * U+E150 : not included in any glyphset definition\n * U+E151 : not included in any glyphset definition\n * U+E152 : not included in any glyphset definition\n * U+E153 : not included in any glyphset definition\n * U+E154 : not included in any glyphset definition\n * U+E162 : not included in any glyphset definition\n * U+E163 : not included in any glyphset definition\n * U+E191 : not included in any glyphset definition\n * U+E192 : not included in any glyphset definition\n * U+E193 : not included in any glyphset definition\n * U+E194 : not included in any glyphset definition\n * U+E195 : not included in any glyphset definition\n * U+E197 : not included in any glyphset definition\n * U+E198 : not included in any glyphset definition\n * U+E199 : not included in any glyphset definition\n * U+E19B : not included in any glyphset definition\n * U+E19C : not included in any glyphset definition\n * U+E1A0 : not included in any glyphset definition\n * U+E1A1 : not included in any glyphset definition\n * U+E1A2 : not included in any glyphset definition\n * U+E1A3 : not included in any glyphset definition\n * U+E1A5 : not included in any glyphset definition\n * U+E1A6 : not included in any glyphset definition\n * U+E1A9 : not included in any glyphset definition\n * U+E1AA : not included in any glyphset definition\n * U+E1AB : not included in any glyphset definition\n * U+E1AC : not included in any glyphset definition\n * U+E1AD : not included in any glyphset definition\n * U+E1AE : not included in any glyphset definition\n * U+E1AF : not included in any glyphset definition\n * U+E1B0 : not included in any glyphset definition\n * U+E1B1 : not included in any glyphset definition\n * U+E1B2 : not included in any glyphset definition\n * U+E1B3 : not included in any glyphset definition\n * U+E1B4 : not included in any glyphset definition\n * U+E1B5 : not included in any glyphset definition\n * U+E1B6 : not included in any glyphset definition\n * U+E1B7 : not included in any glyphset definition\n * U+E1B8 : not included in any glyphset definition\n * U+E1B9 : not included in any glyphset definition\n * U+E1BA : not included in any glyphset definition\n * U+E1BB : not included in any glyphset definition\n * U+E1BC : not included in any glyphset definition\n * U+E1BD : not included in any glyphset definition\n * U+E1BE : not included in any glyphset definition\n * U+E1BF : not included in any glyphset definition\n * U+E1C0 : not included in any glyphset definition\n * U+E1C1 : not included in any glyphset definition\n * U+E1C2 : not included in any glyphset definition\n * U+E1C3 : not included in any glyphset definition\n * U+E1C4 : not included in any glyphset definition\n * U+E1C5 : not included in any glyphset definition\n * U+E1C6 : not included in any glyphset definition\n * U+E1C7 : not included in any glyphset definition\n * U+E1C8 : not included in any glyphset definition\n * U+E1C9 : not included in any glyphset definition\n * U+E1CA : not included in any glyphset definition\n * U+E1CB : not included in any glyphset definition\n * U+E1CC : not included in any glyphset definition\n * U+E1CD : not included in any glyphset definition\n * U+E1CE : not included in any glyphset definition\n * U+E1CF : not included in any glyphset definition\n * U+E1D1 : not included in any glyphset definition\n * U+E1D2 : not included in any glyphset definition\n * U+E208 : not included in any glyphset definition\n * U+E20C : not included in any glyphset definition\n * U+E21B : not included in any glyphset definition\n * U+E227 : not included in any glyphset definition\n * U+E24F : not included in any glyphset definition\n * U+E252 : not included in any glyphset definition\n * U+E253 : not included in any glyphset definition\n * U+E255 : not included in any glyphset definition\n * U+E257 : not included in any glyphset definition\n * U+E259 : not included in any glyphset definition\n * U+E26D : not included in any glyphset definition\n * U+E270 : not included in any glyphset definition\n * U+E27D : not included in any glyphset definition\n * U+E282 : not included in any glyphset definition\n * U+E288 : not included in any glyphset definition\n * U+E2E2 : not included in any glyphset definition\n * U+E309 : not included in any glyphset definition\n * U+E30B : not included in any glyphset definition\n * U+E313 : not included in any glyphset definition\n * U+E331 : not included in any glyphset definition\n * U+E338 : not included in any glyphset definition\n * U+E33A : not included in any glyphset definition\n * U+E33C : not included in any glyphset definition\n * U+E33F : not included in any glyphset definition\n * U+E340 : not included in any glyphset definition\n * U+E34B : not included in any glyphset definition\n * U+E34C : not included in any glyphset definition\n * U+E373 : not included in any glyphset definition\n * U+E375 : not included in any glyphset definition\n * U+E376 : not included in any glyphset definition\n * U+E378 : not included in any glyphset definition\n * U+E37C : not included in any glyphset definition\n * U+E384 : not included in any glyphset definition\n * U+E385 : not included in any glyphset definition\n * U+E39F : not included in any glyphset definition\n * U+E3D3 : not included in any glyphset definition\n * U+E3D4 : not included in any glyphset definition\n * U+E3E5 : not included in any glyphset definition\n * U+E3E6 : not included in any glyphset definition\n * U+E3E7 : not included in any glyphset definition\n * U+E40A : not included in any glyphset definition\n * U+E410 : not included in any glyphset definition\n * U+E425 : not included in any glyphset definition\n * U+E433 : not included in any glyphset definition\n * U+E434 : not included in any glyphset definition\n * U+E435 : not included in any glyphset definition\n * U+E436 : not included in any glyphset definition\n * U+E43A : not included in any glyphset definition\n * U+E43D : not included in any glyphset definition\n * U+E43F : not included in any glyphset definition\n * U+E440 : not included in any glyphset definition\n * U+E441 : not included in any glyphset definition\n * U+E442 : not included in any glyphset definition\n * U+E44D : not included in any glyphset definition\n * U+E466 : not included in any glyphset definition\n * U+E48F : not included in any glyphset definition\n * U+E491 : not included in any glyphset definition\n * U+E499 : not included in any glyphset definition\n * U+E4B7 : not included in any glyphset definition\n * U+E4C3 : not included in any glyphset definition\n * U+E4D1 : not included in any glyphset definition\n * U+E4E8 : not included in any glyphset definition\n * U+E4E9 : not included in any glyphset definition\n * U+E4EA : not included in any glyphset definition\n * U+E4EB : not included in any glyphset definition\n * U+E4EE : not included in any glyphset definition\n * U+E501 : not included in any glyphset definition\n * U+E516 : not included in any glyphset definition\n * U+E517 : not included in any glyphset definition\n * U+E52A : not included in any glyphset definition\n * U+E535 : not included in any glyphset definition\n * U+E537 : not included in any glyphset definition\n * U+E53F : not included in any glyphset definition\n * U+E543 : not included in any glyphset definition\n * U+E550 : not included in any glyphset definition\n * U+E551 : not included in any glyphset definition\n * U+E552 : not included in any glyphset definition\n * U+E553 : not included in any glyphset definition\n * U+E554 : not included in any glyphset definition\n * U+E55C : not included in any glyphset definition\n * U+E562 : not included in any glyphset definition\n * U+E563 : not included in any glyphset definition\n * U+E568 : not included in any glyphset definition\n * U+E58C : not included in any glyphset definition\n * U+E596 : not included in any glyphset definition\n * U+E5B0 : not included in any glyphset definition\n * U+E5B1 : not included in any glyphset definition\n * U+E5B8 : not included in any glyphset definition\n * U+E5D2 : not included in any glyphset definition\n * U+E608 : not included in any glyphset definition\n * U+E60C : not included in any glyphset definition\n * U+E61B : not included in any glyphset definition\n * U+E627 : not included in any glyphset definition\n * U+E64F : not included in any glyphset definition\n * U+E652 : not included in any glyphset definition\n * U+E653 : not included in any glyphset definition\n * U+E655 : not included in any glyphset definition\n * U+E657 : not included in any glyphset definition\n * U+E659 : not included in any glyphset definition\n * U+E66D : not included in any glyphset definition\n * U+E670 : not included in any glyphset definition\n * U+E67D : not included in any glyphset definition\n * U+E682 : not included in any glyphset definition\n * U+E688 : not included in any glyphset definition\n * U+E68A : not included in any glyphset definition\n * U+E6E2 : not included in any glyphset definition\n * U+E6EE : not included in any glyphset definition\n * U+E709 : not included in any glyphset definition\n * U+E70B : not included in any glyphset definition\n * U+E713 : not included in any glyphset definition\n * U+E731 : not included in any glyphset definition\n * U+E732 : not included in any glyphset definition\n * U+E733 : not included in any glyphset definition\n * U+E734 : not included in any glyphset definition\n * U+E735 : not included in any glyphset definition\n * U+E738 : not included in any glyphset definition\n * U+E73A : not included in any glyphset definition\n * U+E73B : not included in any glyphset definition\n * U+E73C : not included in any glyphset definition\n * U+E73F : not included in any glyphset definition\n * U+E740 : not included in any glyphset definition\n * U+E74B : not included in any glyphset definition\n * U+E74C : not included in any glyphset definition\n * U+E773 : not included in any glyphset definition\n * U+E775 : not included in any glyphset definition\n * U+E776 : not included in any glyphset definition\n * U+E778 : not included in any glyphset definition\n * U+E77C : not included in any glyphset definition\n * U+E784 : not included in any glyphset definition\n * U+E785 : not included in any glyphset definition\n * U+E79E : not included in any glyphset definition\n * U+E79F : not included in any glyphset definition\n * U+E7A0 : not included in any glyphset definition\n * U+E7A2 : not included in any glyphset definition\n * U+E7C1 : not included in any glyphset definition\n * U+E7C2 : not included in any glyphset definition\n * U+E7C3 : not included in any glyphset definition\n * U+E7C5 : not included in any glyphset definition\n * U+E7C7 : not included in any glyphset definition\n * U+E7C8 : not included in any glyphset definition\n * U+E7D3 : not included in any glyphset definition\n * U+E7D4 : not included in any glyphset definition\n * U+E7E5 : not included in any glyphset definition\n * U+E7E6 : not included in any glyphset definition\n * U+E7E7 : not included in any glyphset definition\n * U+E7FF : not included in any glyphset definition\n * U+E801 : not included in any glyphset definition\n * U+E802 : not included in any glyphset definition\n * U+E803 : not included in any glyphset definition\n * U+E804 : not included in any glyphset definition\n * U+E805 : not included in any glyphset definition\n * U+E810 : not included in any glyphset definition\n * U+E811 : not included in any glyphset definition\n * U+EEE0 : not included in any glyphset definition\n * U+EEE1 : not included in any glyphset definition\n * U+EEE2 : not included in any glyphset definition\n * U+EEE3 : not included in any glyphset definition\n * U+EEE4 : not included in any glyphset definition\n * U+EEE5 : not included in any glyphset definition\n * U+EEE6 : not included in any glyphset definition\n * U+EEE7 : not included in any glyphset definition\n * U+EEE8 : not included in any glyphset definition\n * U+EEE9 : not included in any glyphset definition\n * U+EEEA : not included in any glyphset definition\n * U+EEEB : not included in any glyphset definition\n * U+EEEC : not included in any glyphset definition\n * U+EEED : not included in any glyphset definition\n * U+EEEE : not included in any glyphset definition\n * U+EEEF : not included in any glyphset definition\n * U+EEF0 : not included in any glyphset definition\n * U+EEF1 : not included in any glyphset definition\n * U+EEF2 : not included in any glyphset definition\n * U+EEF3 : not included in any glyphset definition\n * U+EEF4 : not included in any glyphset definition\n * U+EEF5 : not included in any glyphset definition\n * U+EEF6 : not included in any glyphset definition\n * U+EEF7 : not included in any glyphset definition\n * U+EEF8 : not included in any glyphset definition\n * U+EEF9 : not included in any glyphset definition\n * U+EEFA : not included in any glyphset definition\n * U+EEFB : not included in any glyphset definition\n * U+EEFC : not included in any glyphset definition\n * U+EF05 : not included in any glyphset definition\n * U+EF0C : not included in any glyphset definition\n * U+EF0E : not included in any glyphset definition\n * U+EF11 : not included in any glyphset definition\n * U+EF15 : not included in any glyphset definition\n * U+EF20 : not included in any glyphset definition\n * U+EF21 : not included in any glyphset definition\n * U+EF22 : not included in any glyphset definition\n * U+EF23 : not included in any glyphset definition\n * U+EF24 : not included in any glyphset definition\n * U+EF25 : not included in any glyphset definition\n * U+EF26 : not included in any glyphset definition\n * U+EF27 : not included in any glyphset definition\n * U+EF28 : not included in any glyphset definition\n * U+EF29 : not included in any glyphset definition\n * U+EF2A : not included in any glyphset definition\n * U+EF2B : not included in any glyphset definition\n * U+EF2C : not included in any glyphset definition\n * U+EF2D : not included in any glyphset definition\n * U+EF90 : not included in any glyphset definition\n * U+EF91 : not included in any glyphset definition\n * U+EF92 : not included in any glyphset definition\n * U+EF93 : not included in any glyphset definition\n * U+EF94 : not included in any glyphset definition\n * U+EF95 : not included in any glyphset definition\n * U+EF96 : not included in any glyphset definition\n * U+EF97 : not included in any glyphset definition\n * U+EF98 : not included in any glyphset definition\n * U+EF99 : not included in any glyphset definition\n * U+EF9A : not included in any glyphset definition\n * U+EF9B : not included in any glyphset definition\n * U+EF9C : not included in any glyphset definition\n * U+EFE0 : not included in any glyphset definition\n * U+EFE1 : not included in any glyphset definition\n * U+EFE2 : not included in any glyphset definition\n * U+EFE3 : not included in any glyphset definition\n * U+EFE4 : not included in any glyphset definition\n * U+EFE5 : not included in any glyphset definition\n * U+EFE6 : not included in any glyphset definition\n * U+EFE7 : not included in any glyphset definition\n * U+EFE8 : not included in any glyphset definition\n * U+EFE9 : not included in any glyphset definition\n * U+EFEA : not included in any glyphset definition\n * U+EFEB : not included in any glyphset definition\n * U+EFEC : not included in any glyphset definition\n * U+EFED : not included in any glyphset definition\n * U+EFEE : not included in any glyphset definition\n * U+EFEF : not included in any glyphset definition\n * U+EFF0 : not included in any glyphset definition\n * U+EFF1 : not included in any glyphset definition\n * U+EFF2 : not included in any glyphset definition\n * U+EFF3 : not included in any glyphset definition\n * U+EFF4 : not included in any glyphset definition\n * U+EFF5 : not included in any glyphset definition\n * U+EFF6 : not included in any glyphset definition\n * U+EFF7 : not included in any glyphset definition\n * U+EFF8 : not included in any glyphset definition\n * U+EFF9 : not included in any glyphset definition\n * U+EFFA : not included in any glyphset definition\n * U+EFFB : not included in any glyphset definition\n * U+EFFC : not included in any glyphset definition\n * U+EFFD : not included in any glyphset definition\n * U+EFFE : not included in any glyphset definition\n * U+EFFF : not included in any glyphset definition\n * U+F000 : not included in any glyphset definition\n * U+F00A : not included in any glyphset definition\n * U+F00B : not included in any glyphset definition\n * U+F00C : not included in any glyphset definition\n * U+F00D : not included in any glyphset definition\n * U+F011 : not included in any glyphset definition\n * U+F012 : not included in any glyphset definition\n * U+F013 : not included in any glyphset definition\n * U+F014 : not included in any glyphset definition\n * U+F016 : not included in any glyphset definition\n * U+F017 : not included in any glyphset definition\n * U+F018 : not included in any glyphset definition\n * U+F019 : not included in any glyphset definition\n * U+F01B : not included in any glyphset definition\n * U+F01C : not included in any glyphset definition\n * U+F01D : not included in any glyphset definition\n * U+F01E : not included in any glyphset definition\n * U+F020 : not included in any glyphset definition\n * U+F021 : not included in any glyphset definition\n * U+F023 : not included in any glyphset definition\n * U+F025 : not included in any glyphset definition\n * U+F026 : not included in any glyphset definition\n * U+F027 : not included in any glyphset definition\n * U+F028 : not included in any glyphset definition\n * U+F02A : not included in any glyphset definition\n * U+F02B : not included in any glyphset definition\n * U+F02C : not included in any glyphset definition\n * U+F106 : not included in any glyphset definition\n * U+F109 : not included in any glyphset definition\n * U+F10A : not included in any glyphset definition\n * U+F10B : not included in any glyphset definition\n * U+F10C : not included in any glyphset definition\n * U+F10D : not included in any glyphset definition\n * U+F10E : not included in any glyphset definition\n * U+F10F : not included in any glyphset definition\n * U+F110 : not included in any glyphset definition\n * U+F11A : not included in any glyphset definition\n * U+F125 : not included in any glyphset definition\n * U+F126 : not included in any glyphset definition\n * U+F127 : not included in any glyphset definition\n * U+F129 : not included in any glyphset definition\n * U+F13A : not included in any glyphset definition\n * U+F142 : not included in any glyphset definition\n * U+F149 : not included in any glyphset definition\n * U+F14F : not included in any glyphset definition\n * U+F151 : not included in any glyphset definition\n * U+F152 : not included in any glyphset definition\n * U+F153 : not included in any glyphset definition\n * U+F154 : not included in any glyphset definition\n * U+F155 : not included in any glyphset definition\n * U+F156 : not included in any glyphset definition\n * U+F157 : not included in any glyphset definition\n * U+F158 : not included in any glyphset definition\n * U+F159 : not included in any glyphset definition\n * U+F15A : not included in any glyphset definition\n * U+F15B : not included in any glyphset definition\n * U+F160 : not included in any glyphset definition\n * U+F161 : not included in any glyphset definition\n * U+F163 : not included in any glyphset definition\n * U+F16E : not included in any glyphset definition\n * U+F16F : not included in any glyphset definition\n * U+F1C0 : not included in any glyphset definition\n * U+F1C1 : not included in any glyphset definition\n * U+F1C2 : not included in any glyphset definition\n * U+F1C3 : not included in any glyphset definition\n * U+F1C4 : not included in any glyphset definition\n * U+F1C5 : not included in any glyphset definition\n * U+F1C6 : not included in any glyphset definition\n * U+F1D2 : not included in any glyphset definition\n * U+F1D3 : not included in any glyphset definition\n * U+F1D4 : not included in any glyphset definition\n * U+F1D5 : not included in any glyphset definition\n * U+F1D6 : not included in any glyphset definition\n * U+F1D7 : not included in any glyphset definition\n * U+F1F0 : not included in any glyphset definition\n * U+F1F1 : not included in any glyphset definition\n * U+F1F2 : not included in any glyphset definition\n * U+F1F3 : not included in any glyphset definition\n * U+F1FD : not included in any glyphset definition\n * U+F1FE : not included in any glyphset definition\n * U+F200 : not included in any glyphset definition\n * U+F201 : not included in any glyphset definition\n * U+F202 : not included in any glyphset definition\n * U+F203 : not included in any glyphset definition\n * U+F204 : not included in any glyphset definition\n * U+F205 : not included in any glyphset definition\n * U+F206 : not included in any glyphset definition\n * U+F207 : not included in any glyphset definition\n * U+F208 : not included in any glyphset definition\n * U+F209 : not included in any glyphset definition\n * U+F20A : not included in any glyphset definition\n * U+F20B : not included in any glyphset definition\n * U+F20C : not included in any glyphset definition\n * U+F20D : not included in any glyphset definition\n * U+F20E : not included in any glyphset definition\n * U+F210 : not included in any glyphset definition\n * U+F211 : not included in any glyphset definition\n * U+F212 : not included in any glyphset definition\n * U+F213 : not included in any glyphset definition\n * U+F300 : not included in any glyphset definition\n * U+F310 : not included in any glyphset definition\n * U+F312 : not included in any glyphset definition\n * U+F313 : not included in any glyphset definition\n * U+F314 : not included in any glyphset definition\n * U+F315 : not included in any glyphset definition\n * U+F316 : not included in any glyphset definition\n * U+F317 : not included in any glyphset definition\n * U+F318 : not included in any glyphset definition\n * U+F319 : not included in any glyphset definition\n * U+F6BE : not included in any glyphset definition\n * U+F6C3 : not included in any glyphset definition\n * U+F6C9 : not included in any glyphset definition\n * U+F6CA : not included in any glyphset definition\n * U+F6CB : not included in any glyphset definition\n * U+F6CC : not included in any glyphset definition\n * U+F6CD : not included in any glyphset definition\n * U+F6CE : not included in any glyphset definition\n * U+F6CF : not included in any glyphset definition\n * U+F6F4 : not included in any glyphset definition\n * U+F6F5 : not included in any glyphset definition\n * U+F6F6 : not included in any glyphset definition\n * U+F6F7 : not included in any glyphset definition\n * U+F6F8 : not included in any glyphset definition\n * U+F6F9 : not included in any glyphset definition\n * U+F6FA : not included in any glyphset definition\n * U+F6FB : not included in any glyphset definition\n * U+F6FC : not included in any glyphset definition\n * U+F6FD : not included in any glyphset definition\n * U+F6FE : not included in any glyphset definition\n * U+F6FF : not included in any glyphset definition\n * U+F700 : not included in any glyphset definition\n * U+F701 : not included in any glyphset definition\n * U+F702 : not included in any glyphset definition\n * U+F703 : not included in any glyphset definition\n * U+F704 : not included in any glyphset definition\n * U+F705 : not included in any glyphset definition\n * U+F706 : not included in any glyphset definition\n * U+F707 : not included in any glyphset definition\n * U+F708 : not included in any glyphset definition\n * U+F709 : not included in any glyphset definition\n * U+F70A : not included in any glyphset definition\n * U+F70B : not included in any glyphset definition\n * U+F70C : not included in any glyphset definition\n * U+F714 : not included in any glyphset definition\n * U+F715 : not included in any glyphset definition\n * U+F716 : not included in any glyphset definition\n * U+F717 : not included in any glyphset definition\n * U+F718 : not included in any glyphset definition\n * U+F719 : not included in any glyphset definition\n * U+F71A : not included in any glyphset definition\n * U+F71B : not included in any glyphset definition\n * U+F71C : not included in any glyphset definition\n * U+F721 : not included in any glyphset definition\n * U+F726 : not included in any glyphset definition\n * U+F730 : not included in any glyphset definition\n * U+F731 : not included in any glyphset definition\n * U+F732 : not included in any glyphset definition\n * U+F733 : not included in any glyphset definition\n * U+F734 : not included in any glyphset definition\n * U+F735 : not included in any glyphset definition\n * U+F736 : not included in any glyphset definition\n * U+F737 : not included in any glyphset definition\n * U+F738 : not included in any glyphset definition\n * U+F739 : not included in any glyphset definition\n * U+F73F : not included in any glyphset definition\n * U+F743 : not included in any glyphset definition\n * U+F760 : not included in any glyphset definition\n * U+F761 : not included in any glyphset definition\n * U+F762 : not included in any glyphset definition\n * U+F763 : not included in any glyphset definition\n * U+F764 : not included in any glyphset definition\n * U+F765 : not included in any glyphset definition\n * U+F766 : not included in any glyphset definition\n * U+F767 : not included in any glyphset definition\n * U+F768 : not included in any glyphset definition\n * U+F769 : not included in any glyphset definition\n * U+F76A : not included in any glyphset definition\n * U+F76B : not included in any glyphset definition\n * U+F76C : not included in any glyphset definition\n * U+F76D : not included in any glyphset definition\n * U+F76E : not included in any glyphset definition\n * U+F76F : not included in any glyphset definition\n * U+F770 : not included in any glyphset definition\n * U+F771 : not included in any glyphset definition\n * U+F772 : not included in any glyphset definition\n * U+F773 : not included in any glyphset definition\n * U+F774 : not included in any glyphset definition\n * U+F775 : not included in any glyphset definition\n * U+F776 : not included in any glyphset definition\n * U+F777 : not included in any glyphset definition\n * U+F778 : not included in any glyphset definition\n * U+F779 : not included in any glyphset definition\n * U+F77A : not included in any glyphset definition\n * U+F77D : not included in any glyphset definition\n * U+F77E : not included in any glyphset definition\n * U+F77F : not included in any glyphset definition\n * U+F7A1 : not included in any glyphset definition\n * U+F7A8 : not included in any glyphset definition\n * U+F7AF : not included in any glyphset definition\n * U+F7B4 : not included in any glyphset definition\n * U+F7B8 : not included in any glyphset definition\n * U+F7BF : not included in any glyphset definition\n * U+F7E0 : not included in any glyphset definition\n * U+F7E1 : not included in any glyphset definition\n * U+F7E2 : not included in any glyphset definition\n * U+F7E3 : not included in any glyphset definition\n * U+F7E4 : not included in any glyphset definition\n * U+F7E5 : not included in any glyphset definition\n * U+F7E6 : not included in any glyphset definition\n * U+F7E7 : not included in any glyphset definition\n * U+F7E8 : not included in any glyphset definition\n * U+F7E9 : not included in any glyphset definition\n * U+F7EA : not included in any glyphset definition\n * U+F7EB : not included in any glyphset definition\n * U+F7EC : not included in any glyphset definition\n * U+F7ED : not included in any glyphset definition\n * U+F7EE : not included in any glyphset definition\n * U+F7EF : not included in any glyphset definition\n * U+F7F0 : not included in any glyphset definition\n * U+F7F1 : not included in any glyphset definition\n * U+F7F2 : not included in any glyphset definition\n * U+F7F3 : not included in any glyphset definition\n * U+F7F4 : not included in any glyphset definition\n * U+F7F5 : not included in any glyphset definition\n * U+F7F6 : not included in any glyphset definition\n * U+F7F8 : not included in any glyphset definition\n * U+F7F9 : not included in any glyphset definition\n * U+F7FA : not included in any glyphset definition\n * U+F7FB : not included in any glyphset definition\n * U+F7FC : not included in any glyphset definition\n * U+F7FD : not included in any glyphset definition\n * U+F7FE : not included in any glyphset definition\n * U+F7FF : not included in any glyphset definition\n * U+F800 : not included in any glyphset definition\n * U+F801 : not included in any glyphset definition\n * U+F802 : not included in any glyphset definition\n * U+F803 : not included in any glyphset definition\n * U+F804 : not included in any glyphset definition\n * U+F805 : not included in any glyphset definition\n * U+F806 : not included in any glyphset definition\n * U+F850 : not included in any glyphset definition\n * U+F851 : not included in any glyphset definition\n * U+F852 : not included in any glyphset definition\n * U+F853 : not included in any glyphset definition\n * U+F856 : not included in any glyphset definition\n * U+F857 : not included in any glyphset definition\n * U+F858 : not included in any glyphset definition\n * U+F859 : not included in any glyphset definition\n * U+F860 : not included in any glyphset definition\n * U+F861 : not included in any glyphset definition\n * U+F862 : not included in any glyphset definition\n * U+F863 : not included in any glyphset definition\n * U+F864 : not included in any glyphset definition\n * U+F865 : not included in any glyphset definition\n * U+F866 : not included in any glyphset definition\n * U+FB00 LATIN SMALL LIGATURE FF: not included in any glyphset definition\n * U+FB01 LATIN SMALL LIGATURE FI: not included in any glyphset definition\n * U+FB02 LATIN SMALL LIGATURE FL: not included in any glyphset definition\n * U+FB03 LATIN SMALL LIGATURE FFI: not included in any glyphset definition\n * U+FB04 LATIN SMALL LIGATURE FFL: not included in any glyphset definition\n * U+FB05 LATIN SMALL LIGATURE LONG S T: not included in any glyphset definition\n * U+FB06 LATIN SMALL LIGATURE ST: not included in any glyphset definition\n * U+FB1D HEBREW LETTER YOD WITH HIRIQ: not included in any glyphset definition\n * U+FB1E HEBREW POINT JUDEO-SPANISH VARIKA: not included in any glyphset definition\n * U+FB1F HEBREW LIGATURE YIDDISH YOD YOD PATAH: not included in any glyphset definition\n * U+FB20 HEBREW LETTER ALTERNATIVE AYIN: not included in any glyphset definition\n * U+FB21 HEBREW LETTER WIDE ALEF: not included in any glyphset definition\n * U+FB22 HEBREW LETTER WIDE DALET: not included in any glyphset definition\n * U+FB23 HEBREW LETTER WIDE HE: not included in any glyphset definition\n * U+FB24 HEBREW LETTER WIDE KAF: not included in any glyphset definition\n * U+FB25 HEBREW LETTER WIDE LAMED: not included in any glyphset definition\n * U+FB26 HEBREW LETTER WIDE FINAL MEM: not included in any glyphset definition\n * U+FB27 HEBREW LETTER WIDE RESH: not included in any glyphset definition\n * U+FB28 HEBREW LETTER WIDE TAV: not included in any glyphset definition\n * U+FB29 HEBREW LETTER ALTERNATIVE PLUS SIGN: not included in any glyphset definition\n * U+FB4C HEBREW LETTER BET WITH RAFE: not included in any glyphset definition\n * U+FB4D HEBREW LETTER KAF WITH RAFE: not included in any glyphset definition\n * U+FB4E HEBREW LETTER PE WITH RAFE: not included in any glyphset definition\n * U+FB4F HEBREW LIGATURE ALEF LAMED: not included in any glyphset definition\n * U+10110 AEGEAN NUMBER TEN: try adding linear-b\n * U+10112 AEGEAN NUMBER THIRTY: try adding linear-b\n * U+10140 GREEK ACROPHONIC ATTIC ONE QUARTER: not included in any glyphset definition\n * U+10141 GREEK ACROPHONIC ATTIC ONE HALF: not included in any glyphset definition\n * U+10142 GREEK ACROPHONIC ATTIC ONE DRACHMA: not included in any glyphset definition\n * U+10143 GREEK ACROPHONIC ATTIC FIVE: not included in any glyphset definition\n * U+10144 GREEK ACROPHONIC ATTIC FIFTY: not included in any glyphset definition\n * U+10145 GREEK ACROPHONIC ATTIC FIVE HUNDRED: not included in any glyphset definition\n * U+10146 GREEK ACROPHONIC ATTIC FIVE THOUSAND: not included in any glyphset definition\n * U+10147 GREEK ACROPHONIC ATTIC FIFTY THOUSAND: not included in any glyphset definition\n * U+10148 GREEK ACROPHONIC ATTIC FIVE TALENTS: not included in any glyphset definition\n * U+10149 GREEK ACROPHONIC ATTIC TEN TALENTS: not included in any glyphset definition\n * U+1014A GREEK ACROPHONIC ATTIC FIFTY TALENTS: not included in any glyphset definition\n * U+1014B GREEK ACROPHONIC ATTIC ONE HUNDRED TALENTS: not included in any glyphset definition\n * U+1014C GREEK ACROPHONIC ATTIC FIVE HUNDRED TALENTS: not included in any glyphset definition\n * U+1014D GREEK ACROPHONIC ATTIC ONE THOUSAND TALENTS: not included in any glyphset definition\n * U+1014E GREEK ACROPHONIC ATTIC FIVE THOUSAND TALENTS: not included in any glyphset definition\n * U+1014F GREEK ACROPHONIC ATTIC FIVE STATERS: not included in any glyphset definition\n * U+10150 GREEK ACROPHONIC ATTIC TEN STATERS: not included in any glyphset definition\n * U+10151 GREEK ACROPHONIC ATTIC FIFTY STATERS: not included in any glyphset definition\n * U+10152 GREEK ACROPHONIC ATTIC ONE HUNDRED STATERS: not included in any glyphset definition\n * U+10153 GREEK ACROPHONIC ATTIC FIVE HUNDRED STATERS: not included in any glyphset definition\n * U+10154 GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS: not included in any glyphset definition\n * U+10155 GREEK ACROPHONIC ATTIC TEN THOUSAND STATERS: not included in any glyphset definition\n * U+10156 GREEK ACROPHONIC ATTIC FIFTY THOUSAND STATERS: not included in any glyphset definition\n * U+10157 GREEK ACROPHONIC ATTIC TEN MNAS: not included in any glyphset definition\n * U+10158 GREEK ACROPHONIC HERAEUM ONE PLETHRON: not included in any glyphset definition\n * U+10159 GREEK ACROPHONIC THESPIAN ONE: not included in any glyphset definition\n * U+1015A GREEK ACROPHONIC HERMIONIAN ONE: not included in any glyphset definition\n * U+1015B GREEK ACROPHONIC EPIDAUREAN TWO: not included in any glyphset definition\n * U+1015C GREEK ACROPHONIC THESPIAN TWO: not included in any glyphset definition\n * U+1015D GREEK ACROPHONIC CYRENAIC TWO DRACHMAS: not included in any glyphset definition\n * U+1015E GREEK ACROPHONIC EPIDAUREAN TWO DRACHMAS: not included in any glyphset definition\n * U+1015F GREEK ACROPHONIC TROEZENIAN FIVE: not included in any glyphset definition\n * U+10160 GREEK ACROPHONIC TROEZENIAN TEN: not included in any glyphset definition\n * U+10161 GREEK ACROPHONIC TROEZENIAN TEN ALTERNATE FORM: not included in any glyphset definition\n * U+10162 GREEK ACROPHONIC HERMIONIAN TEN: not included in any glyphset definition\n * U+10163 GREEK ACROPHONIC MESSENIAN TEN: not included in any glyphset definition\n * U+10164 GREEK ACROPHONIC THESPIAN TEN: not included in any glyphset definition\n * U+10165 GREEK ACROPHONIC THESPIAN THIRTY: not included in any glyphset definition\n * U+10166 GREEK ACROPHONIC TROEZENIAN FIFTY: not included in any glyphset definition\n * U+10167 GREEK ACROPHONIC TROEZENIAN FIFTY ALTERNATE FORM: not included in any glyphset definition\n * U+10168 GREEK ACROPHONIC HERMIONIAN FIFTY: not included in any glyphset definition\n * U+10169 GREEK ACROPHONIC THESPIAN FIFTY: not included in any glyphset definition\n * U+1016A GREEK ACROPHONIC THESPIAN ONE HUNDRED: not included in any glyphset definition\n * U+1016B GREEK ACROPHONIC THESPIAN THREE HUNDRED: not included in any glyphset definition\n * U+1016C GREEK ACROPHONIC EPIDAUREAN FIVE HUNDRED: not included in any glyphset definition\n * U+1016D GREEK ACROPHONIC TROEZENIAN FIVE HUNDRED: not included in any glyphset definition\n * U+1016E GREEK ACROPHONIC THESPIAN FIVE HUNDRED: not included in any glyphset definition\n * U+1016F GREEK ACROPHONIC CARYSTIAN FIVE HUNDRED: not included in any glyphset definition\n * U+10170 GREEK ACROPHONIC NAXIAN FIVE HUNDRED: not included in any glyphset definition\n * U+10171 GREEK ACROPHONIC THESPIAN ONE THOUSAND: not included in any glyphset definition\n * U+10172 GREEK ACROPHONIC THESPIAN FIVE THOUSAND: not included in any glyphset definition\n * U+10173 GREEK ACROPHONIC DELPHIC FIVE MNAS: not included in any glyphset definition\n * U+10174 GREEK ACROPHONIC STRATIAN FIFTY MNAS: not included in any glyphset definition\n * U+10175 GREEK ONE HALF SIGN: not included in any glyphset definition\n * U+10176 GREEK ONE HALF SIGN ALTERNATE FORM: not included in any glyphset definition\n * U+10177 GREEK TWO THIRDS SIGN: not included in any glyphset definition\n * U+10178 GREEK THREE QUARTERS SIGN: not included in any glyphset definition\n * U+10179 GREEK YEAR SIGN: not included in any glyphset definition\n * U+1017A GREEK TALENT SIGN: not included in any glyphset definition\n * U+1017B GREEK DRACHMA SIGN: not included in any glyphset definition\n * U+1017C GREEK OBOL SIGN: not included in any glyphset definition\n * U+1017D GREEK TWO OBOLS SIGN: not included in any glyphset definition\n * U+1017E GREEK THREE OBOLS SIGN: not included in any glyphset definition\n * U+1017F GREEK FOUR OBOLS SIGN: not included in any glyphset definition\n * U+10180 GREEK FIVE OBOLS SIGN: not included in any glyphset definition\n * U+10181 GREEK METRETES SIGN: not included in any glyphset definition\n * U+10182 GREEK KYATHOS BASE SIGN: not included in any glyphset definition\n * U+10183 GREEK LITRA SIGN: not included in any glyphset definition\n * U+10184 GREEK OUNKIA SIGN: not included in any glyphset definition\n * U+10185 GREEK XESTES SIGN: not included in any glyphset definition\n * U+10186 GREEK ARTABE SIGN: not included in any glyphset definition\n * U+10187 GREEK AROURA SIGN: not included in any glyphset definition\n * U+10188 GREEK GRAMMA SIGN: not included in any glyphset definition\n * U+10189 GREEK TRYBLION BASE SIGN: not included in any glyphset definition\n * U+1018A GREEK ZERO SIGN: not included in any glyphset definition\n * U+10300 OLD ITALIC LETTER A: try adding old-italic\n * U+10301 OLD ITALIC LETTER BE: try adding old-italic\n * U+10302 OLD ITALIC LETTER KE: try adding old-italic\n * U+10303 OLD ITALIC LETTER DE: try adding old-italic\n * U+10304 OLD ITALIC LETTER E: try adding old-italic\n * U+10305 OLD ITALIC LETTER VE: try adding old-italic\n * U+10306 OLD ITALIC LETTER ZE: try adding old-italic\n * U+10307 OLD ITALIC LETTER HE: try adding old-italic\n * U+10308 OLD ITALIC LETTER THE: try adding old-italic\n * U+10309 OLD ITALIC LETTER I: try adding old-italic\n * U+1030A OLD ITALIC LETTER KA: try adding old-italic\n * U+1030B OLD ITALIC LETTER EL: try adding old-italic\n * U+1030C OLD ITALIC LETTER EM: try adding old-italic\n * U+1030D OLD ITALIC LETTER EN: try adding old-italic\n * U+1030E OLD ITALIC LETTER ESH: try adding old-italic\n * U+1030F OLD ITALIC LETTER O: try adding old-italic\n * U+10310 OLD ITALIC LETTER PE: try adding old-italic\n * U+10311 OLD ITALIC LETTER SHE: try adding old-italic\n * U+10312 OLD ITALIC LETTER KU: try adding old-italic\n * U+10313 OLD ITALIC LETTER ER: try adding old-italic\n * U+10314 OLD ITALIC LETTER ES: try adding old-italic\n * U+10315 OLD ITALIC LETTER TE: try adding old-italic\n * U+10316 OLD ITALIC LETTER U: try adding old-italic\n * U+10317 OLD ITALIC LETTER EKS: try adding old-italic\n * U+10318 OLD ITALIC LETTER PHE: try adding old-italic\n * U+10319 OLD ITALIC LETTER KHE: try adding old-italic\n * U+1031A OLD ITALIC LETTER EF: try adding old-italic\n * U+1031B OLD ITALIC LETTER ERS: try adding old-italic\n * U+1031C OLD ITALIC LETTER CHE: try adding old-italic\n * U+1031D OLD ITALIC LETTER II: try adding old-italic\n * U+1031E OLD ITALIC LETTER UU: try adding old-italic\n * U+10320 OLD ITALIC NUMERAL ONE: try adding old-italic\n * U+10321 OLD ITALIC NUMERAL FIVE: try adding old-italic\n * U+10322 OLD ITALIC NUMERAL TEN: try adding old-italic\n * U+10323 OLD ITALIC NUMERAL FIFTY: try adding old-italic\n * U+10330 GOTHIC LETTER AHSA: try adding gothic\n * U+10331 GOTHIC LETTER BAIRKAN: try adding gothic\n * U+10332 GOTHIC LETTER GIBA: try adding gothic\n * U+10333 GOTHIC LETTER DAGS: try adding gothic\n * U+10334 GOTHIC LETTER AIHVUS: try adding gothic\n * U+10335 GOTHIC LETTER QAIRTHRA: try adding gothic\n * U+10336 GOTHIC LETTER IUJA: try adding gothic\n * U+10337 GOTHIC LETTER HAGL: try adding gothic\n * U+10338 GOTHIC LETTER THIUTH: try adding gothic\n * U+10339 GOTHIC LETTER EIS: try adding gothic\n * U+1033A GOTHIC LETTER KUSMA: try adding gothic\n * U+1033B GOTHIC LETTER LAGUS: try adding gothic\n * U+1033C GOTHIC LETTER MANNA: try adding gothic\n * U+1033D GOTHIC LETTER NAUTHS: try adding gothic\n * U+1033E GOTHIC LETTER JER: try adding gothic\n * U+1033F GOTHIC LETTER URUS: try adding gothic\n * U+10340 GOTHIC LETTER PAIRTHRA: try adding gothic\n * U+10341 GOTHIC LETTER NINETY: try adding gothic\n * U+10342 GOTHIC LETTER RAIDA: try adding gothic\n * U+10343 GOTHIC LETTER SAUIL: try adding gothic\n * U+10344 GOTHIC LETTER TEIWS: try adding gothic\n * U+10345 GOTHIC LETTER WINJA: try adding gothic\n * U+10346 GOTHIC LETTER FAIHU: try adding gothic\n * U+10347 GOTHIC LETTER IGGWS: try adding gothic\n * U+10348 GOTHIC LETTER HWAIR: try adding gothic\n * U+10349 GOTHIC LETTER OTHAL: try adding gothic\n * U+1034A GOTHIC LETTER NINE HUNDRED: try adding gothic\n * U+1D200 GREEK VOCAL NOTATION SYMBOL-1: not included in any glyphset definition\n * U+1D201 GREEK VOCAL NOTATION SYMBOL-2: not included in any glyphset definition\n * U+1D202 GREEK VOCAL NOTATION SYMBOL-3: not included in any glyphset definition\n * U+1D203 GREEK VOCAL NOTATION SYMBOL-4: not included in any glyphset definition\n * U+1D204 GREEK VOCAL NOTATION SYMBOL-5: not included in any glyphset definition\n * U+1D205 GREEK VOCAL NOTATION SYMBOL-6: not included in any glyphset definition\n * U+1D206 GREEK VOCAL NOTATION SYMBOL-7: not included in any glyphset definition\n * U+1D207 GREEK VOCAL NOTATION SYMBOL-8: not included in any glyphset definition\n * U+1D208 GREEK VOCAL NOTATION SYMBOL-9: not included in any glyphset definition\n * U+1D209 GREEK VOCAL NOTATION SYMBOL-10: not included in any glyphset definition\n * U+1D20A GREEK VOCAL NOTATION SYMBOL-11: not included in any glyphset definition\n * U+1D20B GREEK VOCAL NOTATION SYMBOL-12: not included in any glyphset definition\n * U+1D20C GREEK VOCAL NOTATION SYMBOL-13: not included in any glyphset definition\n * U+1D20D GREEK VOCAL NOTATION SYMBOL-14: not included in any glyphset definition\n * U+1D20E GREEK VOCAL NOTATION SYMBOL-15: not included in any glyphset definition\n * U+1D20F GREEK VOCAL NOTATION SYMBOL-16: not included in any glyphset definition\n * U+1D210 GREEK VOCAL NOTATION SYMBOL-17: not included in any glyphset definition\n * U+1D211 GREEK VOCAL NOTATION SYMBOL-18: not included in any glyphset definition\n * U+1D212 GREEK VOCAL NOTATION SYMBOL-19: not included in any glyphset definition\n * U+1D213 GREEK VOCAL NOTATION SYMBOL-20: not included in any glyphset definition\n * U+1D214 GREEK VOCAL NOTATION SYMBOL-21: not included in any glyphset definition\n * U+1D215 GREEK VOCAL NOTATION SYMBOL-22: not included in any glyphset definition\n * U+1D216 GREEK VOCAL NOTATION SYMBOL-23: not included in any glyphset definition\n * U+1D217 GREEK VOCAL NOTATION SYMBOL-24: not included in any glyphset definition\n * U+1D218 GREEK VOCAL NOTATION SYMBOL-50: not included in any glyphset definition\n * U+1D219 GREEK VOCAL NOTATION SYMBOL-51: not included in any glyphset definition\n * U+1D21A GREEK VOCAL NOTATION SYMBOL-52: not included in any glyphset definition\n * U+1D21B GREEK VOCAL NOTATION SYMBOL-53: not included in any glyphset definition\n * U+1D21C GREEK VOCAL NOTATION SYMBOL-54: not included in any glyphset definition\n * U+1D21D GREEK INSTRUMENTAL NOTATION SYMBOL-1: not included in any glyphset definition\n * U+1D21E GREEK INSTRUMENTAL NOTATION SYMBOL-2: not included in any glyphset definition\n * U+1D21F GREEK INSTRUMENTAL NOTATION SYMBOL-4: not included in any glyphset definition\n * U+1D220 GREEK INSTRUMENTAL NOTATION SYMBOL-5: not included in any glyphset definition\n * U+1D221 GREEK INSTRUMENTAL NOTATION SYMBOL-7: not included in any glyphset definition\n * U+1D222 GREEK INSTRUMENTAL NOTATION SYMBOL-8: not included in any glyphset definition\n * U+1D223 GREEK INSTRUMENTAL NOTATION SYMBOL-11: not included in any glyphset definition\n * U+1D224 GREEK INSTRUMENTAL NOTATION SYMBOL-12: not included in any glyphset definition\n * U+1D225 GREEK INSTRUMENTAL NOTATION SYMBOL-13: not included in any glyphset definition\n * U+1D226 GREEK INSTRUMENTAL NOTATION SYMBOL-14: not included in any glyphset definition\n * U+1D227 GREEK INSTRUMENTAL NOTATION SYMBOL-17: not included in any glyphset definition\n * U+1D228 GREEK INSTRUMENTAL NOTATION SYMBOL-18: not included in any glyphset definition\n * U+1D229 GREEK INSTRUMENTAL NOTATION SYMBOL-19: not included in any glyphset definition\n * U+1D22A GREEK INSTRUMENTAL NOTATION SYMBOL-23: not included in any glyphset definition\n * U+1D22B GREEK INSTRUMENTAL NOTATION SYMBOL-24: not included in any glyphset definition\n * U+1D22C GREEK INSTRUMENTAL NOTATION SYMBOL-25: not included in any glyphset definition\n * U+1D22D GREEK INSTRUMENTAL NOTATION SYMBOL-26: not included in any glyphset definition\n * U+1D22E GREEK INSTRUMENTAL NOTATION SYMBOL-27: not included in any glyphset definition\n * U+1D22F GREEK INSTRUMENTAL NOTATION SYMBOL-29: not included in any glyphset definition\n * U+1D230 GREEK INSTRUMENTAL NOTATION SYMBOL-30: not included in any glyphset definition\n * U+1D231 GREEK INSTRUMENTAL NOTATION SYMBOL-32: not included in any glyphset definition\n * U+1D232 GREEK INSTRUMENTAL NOTATION SYMBOL-36: not included in any glyphset definition\n * U+1D233 GREEK INSTRUMENTAL NOTATION SYMBOL-37: not included in any glyphset definition\n * U+1D234 GREEK INSTRUMENTAL NOTATION SYMBOL-38: not included in any glyphset definition\n * U+1D235 GREEK INSTRUMENTAL NOTATION SYMBOL-39: not included in any glyphset definition\n * U+1D236 GREEK INSTRUMENTAL NOTATION SYMBOL-40: not included in any glyphset definition\n * U+1D237 GREEK INSTRUMENTAL NOTATION SYMBOL-42: not included in any glyphset definition\n * U+1D238 GREEK INSTRUMENTAL NOTATION SYMBOL-43: not included in any glyphset definition\n * U+1D239 GREEK INSTRUMENTAL NOTATION SYMBOL-45: not included in any glyphset definition\n * U+1D23A GREEK INSTRUMENTAL NOTATION SYMBOL-47: not included in any glyphset definition\n * U+1D23B GREEK INSTRUMENTAL NOTATION SYMBOL-48: not included in any glyphset definition\n * U+1D23C GREEK INSTRUMENTAL NOTATION SYMBOL-49: not included in any glyphset definition\n * U+1D23D GREEK INSTRUMENTAL NOTATION SYMBOL-50: not included in any glyphset definition\n * U+1D23E GREEK INSTRUMENTAL NOTATION SYMBOL-51: not included in any glyphset definition\n * U+1D23F GREEK INSTRUMENTAL NOTATION SYMBOL-52: not included in any glyphset definition\n * U+1D240 GREEK INSTRUMENTAL NOTATION SYMBOL-53: not included in any glyphset definition\n * U+1D241 GREEK INSTRUMENTAL NOTATION SYMBOL-54: not included in any glyphset definition\n * U+1D242 COMBINING GREEK MUSICAL TRISEME: not included in any glyphset definition\n * U+1D243 COMBINING GREEK MUSICAL TETRASEME: not included in any glyphset definition\n * U+1D244 COMBINING GREEK MUSICAL PENTASEME: not included in any glyphset definition\n * U+1D245 GREEK MUSICAL LEIMMA: not included in any glyphset definition\n * U+1D459 MATHEMATICAL ITALIC SMALL L: not included in any glyphset definition\n * U+1D504 MATHEMATICAL FRAKTUR CAPITAL A: not included in any glyphset definition\n * U+1D505 MATHEMATICAL FRAKTUR CAPITAL B: not included in any glyphset definition\n * U+1D50A MATHEMATICAL FRAKTUR CAPITAL G: not included in any glyphset definition\n * U+1D50E MATHEMATICAL FRAKTUR CAPITAL K: not included in any glyphset definition\n * U+1D50F MATHEMATICAL FRAKTUR CAPITAL L: not included in any glyphset definition\n * U+1D510 MATHEMATICAL FRAKTUR CAPITAL M: not included in any glyphset definition\n * U+1D513 MATHEMATICAL FRAKTUR CAPITAL P: not included in any glyphset definition\n * U+1D514 MATHEMATICAL FRAKTUR CAPITAL Q: not included in any glyphset definition\n * U+1D516 MATHEMATICAL FRAKTUR CAPITAL S: not included in any glyphset definition\n * U+1D517 MATHEMATICAL FRAKTUR CAPITAL T: not included in any glyphset definition\n * U+1D519 MATHEMATICAL FRAKTUR CAPITAL V: not included in any glyphset definition\n * U+1D52D MATHEMATICAL FRAKTUR SMALL P: not included in any glyphset definition\n * U+F0000 : not included in any glyphset definition\n * U+F0001 : not included in any glyphset definition\n * U+F0002 : not included in any glyphset definition\n * U+F0003 : not included in any glyphset definition\n * U+F0004 : not included in any glyphset definition\n * U+F0005 : not included in any glyphset definition\n * U+F0006 : not included in any glyphset definition\n * U+F0007 : not included in any glyphset definition\n * U+F0010 : not included in any glyphset definition\n * U+F0011 : not included in any glyphset definition\n * U+F0013 : not included in any glyphset definition\n * U+F0014 : not included in any glyphset definition\n * U+F0015 : not included in any glyphset definition\n * U+F001A : not included in any glyphset definition\n * U+F0020 : not included in any glyphset definition\n * U+F0021 : not included in any glyphset definition\n * U+F0022 : not included in any glyphset definition\n * U+F0023 : not included in any glyphset definition\n * U+F0024 : not included in any glyphset definition\n * U+F0026 : not included in any glyphset definition\n * U+F0028 : not included in any glyphset definition\n * U+F0029 : not included in any glyphset definition\n * U+F002A : not included in any glyphset definition\n * U+F0030 : not included in any glyphset definition\n * U+F0031 : not included in any glyphset definition\n * U+F0034 : not included in any glyphset definition\n * U+F0035 : not included in any glyphset definition\n * U+F0036 : not included in any glyphset definition\n * U+F0037 : not included in any glyphset definition\n * U+F0038 : not included in any glyphset definition\n * U+F0039 : not included in any glyphset definition\n * U+F003A : not included in any glyphset definition\n * U+F003C : not included in any glyphset definition\n * U+F003D : not included in any glyphset definition\n * U+F003E : not included in any glyphset definition\n * U+F003F : not included in any glyphset definition\n * U+F0040 : not included in any glyphset definition\n * U+F0041 : not included in any glyphset definition\n * U+F0042 : not included in any glyphset definition\n * U+F0044 : not included in any glyphset definition\n * U+F0045 : not included in any glyphset definition\n * U+F0046 : not included in any glyphset definition\n * U+F0048 : not included in any glyphset definition\n * U+F0049 : not included in any glyphset definition\n * U+F004A : not included in any glyphset definition\n * U+F004B : not included in any glyphset definition\n * U+F004C : not included in any glyphset definition\n * U+F004F : not included in any glyphset definition\n * U+F0050 : not included in any glyphset definition\n * U+F0052 : not included in any glyphset definition\n * U+F0053 : not included in any glyphset definition\n * U+F0054 : not included in any glyphset definition\n * U+F0056 : not included in any glyphset definition\n * U+F0057 : not included in any glyphset definition\n * U+F0058 : not included in any glyphset definition\n * U+F0059 : not included in any glyphset definition\n * U+F005A : not included in any glyphset definition\n * U+F005B : not included in any glyphset definition\n * U+F005C : not included in any glyphset definition\n * U+F0060 : not included in any glyphset definition\n * U+F0061 : not included in any glyphset definition\n * U+F0062 : not included in any glyphset definition\n * U+F0063 : not included in any glyphset definition\n * U+F0064 : not included in any glyphset definition\n * U+F0065 : not included in any glyphset definition\n * U+F0066 : not included in any glyphset definition\n * U+F0067 : not included in any glyphset definition\n * U+F0068 : not included in any glyphset definition\n * U+F0069 : not included in any glyphset definition\n * U+F006A : not included in any glyphset definition\n * U+F006B : not included in any glyphset definition\n * U+F006C : not included in any glyphset definition\n * U+F0070 : not included in any glyphset definition\n * U+F0072 : not included in any glyphset definition\n * U+F0073 : not included in any glyphset definition\n * U+F0074 : not included in any glyphset definition\n * U+F0076 : not included in any glyphset definition\n * U+F0077 : not included in any glyphset definition\n * U+F0078 : not included in any glyphset definition\n * U+F007D : not included in any glyphset definition\n * U+F007F : not included in any glyphset definition\n * U+F0080 : not included in any glyphset definition\n * U+F0081 : not included in any glyphset definition\n * U+F0086 : not included in any glyphset definition\n * U+F0087 : not included in any glyphset definition\n * U+F0088 : not included in any glyphset definition\n * U+F0089 : not included in any glyphset definition\n * U+F008A : not included in any glyphset definition\n * U+F008B : not included in any glyphset definition\n * U+F008D : not included in any glyphset definition\n * U+F008E : not included in any glyphset definition\n * U+F0090 : not included in any glyphset definition\n * U+F0091 : not included in any glyphset definition\n * U+F0092 : not included in any glyphset definition\n * U+F0093 : not included in any glyphset definition\n * U+F0096 : not included in any glyphset definition\n * U+F0098 : not included in any glyphset definition\n * U+F009A : not included in any glyphset definition\n * U+F009B : not included in any glyphset definition\n * U+F009C : not included in any glyphset definition\n * U+F009D : not included in any glyphset definition\n * U+F00A1 : not included in any glyphset definition\n * U+F00A2 : not included in any glyphset definition\n * U+F00A3 : not included in any glyphset definition\n * U+F00A4 : not included in any glyphset definition\n * U+F00A5 : not included in any glyphset definition\n * U+F00A6 : not included in any glyphset definition\n * U+F00A9 : not included in any glyphset definition\n * U+F00AA : not included in any glyphset definition\n * U+F00AB : not included in any glyphset definition\n * U+F00AD : not included in any glyphset definition\n * U+F00B2 : not included in any glyphset definition\n * U+F00B3 : not included in any glyphset definition\n * U+F00B4 : not included in any glyphset definition\n * U+F00B5 : not included in any glyphset definition\n * U+F00B6 : not included in any glyphset definition\n * U+F00B7 : not included in any glyphset definition\n * U+F00B8 : not included in any glyphset definition\n * U+F00BA : not included in any glyphset definition\n * U+F00BC : not included in any glyphset definition\n * U+F00BD : not included in any glyphset definition\n * U+F00BE : not included in any glyphset definition\n * U+F00BF : not included in any glyphset definition\n * U+F00C0 : not included in any glyphset definition\n * U+F00C1 : not included in any glyphset definition\n * U+F00C2 : not included in any glyphset definition\n * U+F00C5 : not included in any glyphset definition\n * U+F00C6 : not included in any glyphset definition\n * U+F00C7 : not included in any glyphset definition\n * U+F00C8 : not included in any glyphset definition\n * U+F00C9 : not included in any glyphset definition\n * U+F00CA : not included in any glyphset definition\n * U+F00CB : not included in any glyphset definition\n * U+F00CC : not included in any glyphset definition\n * U+F00CD : not included in any glyphset definition\n * U+F00D0 : not included in any glyphset definition\n * U+F00D1 : not included in any glyphset definition\n * U+F00D2 : not included in any glyphset definition\n * U+F00D3 : not included in any glyphset definition\n * U+F00D4 : not included in any glyphset definition\n * U+F00D5 : not included in any glyphset definition\n * U+F00D6 : not included in any glyphset definition\n * U+F00D7 : not included in any glyphset definition\n * U+F00D8 : not included in any glyphset definition\n * U+F00DC : not included in any glyphset definition\n * U+F00DE : not included in any glyphset definition\n * U+F00DF : not included in any glyphset definition\n * U+F00E0 : not included in any glyphset definition\n * U+F00E1 : not included in any glyphset definition\n * U+F00E4 : not included in any glyphset definition\n * U+F00E5 : not included in any glyphset definition\n * U+F00E8 : not included in any glyphset definition\n * U+F00E9 : not included in any glyphset definition\n * U+F00EA : not included in any glyphset definition\n * U+F00EB : not included in any glyphset definition\n * U+F00EF : not included in any glyphset definition\n * U+F00F0 : not included in any glyphset definition\n * U+F00F1 : not included in any glyphset definition\n * U+F00F2 : not included in any glyphset definition\n * U+F00F4 : not included in any glyphset definition\n * U+F00F5 : not included in any glyphset definition\n * U+F00F6 : not included in any glyphset definition\n * U+F00F7 : not included in any glyphset definition\n * U+F00F9 : not included in any glyphset definition\n * U+F0100 : not included in any glyphset definition\n * U+F0101 : not included in any glyphset definition\n * U+F0102 : not included in any glyphset definition\n * U+F0103 : not included in any glyphset definition\n * U+F0104 : not included in any glyphset definition\n * U+F0105 : not included in any glyphset definition\n * U+F0106 : not included in any glyphset definition\n * U+F0107 : not included in any glyphset definition\n * U+F0110 : not included in any glyphset definition\n * U+F0111 : not included in any glyphset definition\n * U+F0113 : not included in any glyphset definition\n * U+F0114 : not included in any glyphset definition\n * U+F0115 : not included in any glyphset definition\n * U+F011A : not included in any glyphset definition\n * U+F0120 : not included in any glyphset definition\n * U+F0121 : not included in any glyphset definition\n * U+F0122 : not included in any glyphset definition\n * U+F0123 : not included in any glyphset definition\n * U+F0124 : not included in any glyphset definition\n * U+F0126 : not included in any glyphset definition\n * U+F0128 : not included in any glyphset definition\n * U+F0129 : not included in any glyphset definition\n * U+F012A : not included in any glyphset definition\n * U+F0130 : not included in any glyphset definition\n * U+F0131 : not included in any glyphset definition\n * U+F0134 : not included in any glyphset definition\n * U+F0135 : not included in any glyphset definition\n * U+F0136 : not included in any glyphset definition\n * U+F0137 : not included in any glyphset definition\n * U+F0138 : not included in any glyphset definition\n * U+F0139 : not included in any glyphset definition\n * U+F013A : not included in any glyphset definition\n * U+F013C : not included in any glyphset definition\n * U+F013D : not included in any glyphset definition\n * U+F013E : not included in any glyphset definition\n * U+F013F : not included in any glyphset definition\n * U+F0140 : not included in any glyphset definition\n * U+F0141 : not included in any glyphset definition\n * U+F0142 : not included in any glyphset definition\n * U+F0144 : not included in any glyphset definition\n * U+F0145 : not included in any glyphset definition\n * U+F0146 : not included in any glyphset definition\n * U+F0148 : not included in any glyphset definition\n * U+F0149 : not included in any glyphset definition\n * U+F014A : not included in any glyphset definition\n * U+F014B : not included in any glyphset definition\n * U+F014C : not included in any glyphset definition\n * U+F014F : not included in any glyphset definition\n * U+F0150 : not included in any glyphset definition\n * U+F0152 : not included in any glyphset definition\n * U+F0159 : not included in any glyphset definition\n * U+F015B : not included in any glyphset definition\n * U+F015C : not included in any glyphset definition\n * U+F0172 : not included in any glyphset definition\n * U+F0173 : not included in any glyphset definition\n * U+F0174 : not included in any glyphset definition\n * U+F0177 : not included in any glyphset definition\n * U+F0178 : not included in any glyphset definition\n * U+F017D : not included in any glyphset definition\n * U+F017F : not included in any glyphset definition\n * U+F0180 : not included in any glyphset definition\n * U+F0181 : not included in any glyphset definition\n * U+F0186 : not included in any glyphset definition\n * U+F0187 : not included in any glyphset definition\n * U+F0188 : not included in any glyphset definition\n * U+F0189 : not included in any glyphset definition\n * U+F018A : not included in any glyphset definition\n * U+F018B : not included in any glyphset definition\n * U+F018E : not included in any glyphset definition\n * U+F0190 : not included in any glyphset definition\n * U+F0191 : not included in any glyphset definition\n * U+F0192 : not included in any glyphset definition\n * U+F0193 : not included in any glyphset definition\n * U+F0196 : not included in any glyphset definition\n * U+F019A : not included in any glyphset definition\n * U+F01AA : not included in any glyphset definition\n * U+F01B7 : not included in any glyphset definition\n * U+F01B8 : not included in any glyphset definition\n * U+F01BA : not included in any glyphset definition\n * U+F01BC : not included in any glyphset definition\n * U+F01BD : not included in any glyphset definition\n * U+F01BE : not included in any glyphset definition\n * U+F01BF : not included in any glyphset definition\n * U+F01C0 : not included in any glyphset definition\n * U+F01C1 : not included in any glyphset definition\n * U+F01C2 : not included in any glyphset definition\n * U+F01C5 : not included in any glyphset definition\n * U+F01C6 : not included in any glyphset definition\n * U+F01C7 : not included in any glyphset definition\n * U+F01C8 : not included in any glyphset definition\n * U+F01C9 : not included in any glyphset definition\n * U+F01CA : not included in any glyphset definition\n * U+F01CB : not included in any glyphset definition\n * U+F01CD : not included in any glyphset definition\n * U+F01D0 : not included in any glyphset definition\n * U+F01D1 : not included in any glyphset definition\n * U+F01D2 : not included in any glyphset definition\n * U+F01D3 : not included in any glyphset definition\n * U+F01D4 : not included in any glyphset definition\n * U+F01DC : not included in any glyphset definition\n * U+F01E0 : not included in any glyphset definition\n * U+F01E1 : not included in any glyphset definition\n * U+F01E5 : not included in any glyphset definition\n * U+F01E8 : not included in any glyphset definition\n * U+F01E9 : not included in any glyphset definition\n * U+F01F6 : not included in any glyphset definition\n * U+F0200 : not included in any glyphset definition\n * U+F0201 : not included in any glyphset definition\n * U+F0202 : not included in any glyphset definition\n * U+F0203 : not included in any glyphset definition\n * U+F0204 : not included in any glyphset definition\n * U+F0205 : not included in any glyphset definition\n * U+F0206 : not included in any glyphset definition\n * U+F0207 : not included in any glyphset definition\n * U+F0208 : not included in any glyphset definition\n * U+F0209 : not included in any glyphset definition\n * U+F020A : not included in any glyphset definition\n * U+F020B : not included in any glyphset definition\n * U+F020C : not included in any glyphset definition\n * U+F020D : not included in any glyphset definition\n * U+F020E : not included in any glyphset definition\n * U+F020F : not included in any glyphset definition\n * U+F0210 : not included in any glyphset definition\n * U+F0211 : not included in any glyphset definition\n * U+F0212 : not included in any glyphset definition\n * U+F0213 : not included in any glyphset definition\n * U+F021E : not included in any glyphset definition\n * U+F021F : not included in any glyphset definition\n * U+F0220 : not included in any glyphset definition\n * U+F0221 : not included in any glyphset definition\n * U+F0222 : not included in any glyphset definition\n * U+F0223 : not included in any glyphset definition\n * U+F0224 : not included in any glyphset definition\n * U+F0225 : not included in any glyphset definition\n * U+F0226 : not included in any glyphset definition\n * U+F0227 : not included in any glyphset definition\n * U+F0228 : not included in any glyphset definition\n * U+F0229 : not included in any glyphset definition\n * U+F022A : not included in any glyphset definition\n * U+F022B : not included in any glyphset definition\n * U+F022C : not included in any glyphset definition\n * U+F022D : not included in any glyphset definition\n * U+F022E : not included in any glyphset definition\n * U+F0230 : not included in any glyphset definition\n * U+F0231 : not included in any glyphset definition\n * U+F0232 : not included in any glyphset definition\n * U+F0233 : not included in any glyphset definition\n * U+F0234 : not included in any glyphset definition\n * U+F0235 : not included in any glyphset definition\n * U+F0236 : not included in any glyphset definition\n * U+F0237 : not included in any glyphset definition\n * U+F0238 : not included in any glyphset definition\n * U+F0239 : not included in any glyphset definition\n * U+F023C : not included in any glyphset definition\n * U+F023D : not included in any glyphset definition\n * U+F023E : not included in any glyphset definition\n * U+F023F : not included in any glyphset definition\n * U+F0240 : not included in any glyphset definition\n * U+F0241 : not included in any glyphset definition\n * U+F0242 : not included in any glyphset definition\n * U+F0243 : not included in any glyphset definition\n * U+F0244 : not included in any glyphset definition\n * U+F0245 : not included in any glyphset definition\n * U+F0246 : not included in any glyphset definition\n * U+F0247 : not included in any glyphset definition\n * U+F0248 : not included in any glyphset definition\n * U+F0249 : not included in any glyphset definition\n * U+F024A : not included in any glyphset definition\n * U+F024B : not included in any glyphset definition\n * U+F024C : not included in any glyphset definition\n * U+F024D : not included in any glyphset definition\n * U+F024E : not included in any glyphset definition\n * U+F024F : not included in any glyphset definition\n * U+F0250 : not included in any glyphset definition\n * U+F0251 : not included in any glyphset definition\n * U+F0252 : not included in any glyphset definition\n * U+F0253 : not included in any glyphset definition\n * U+F0254 : not included in any glyphset definition\n * U+F0255 : not included in any glyphset definition\n * U+F0256 : not included in any glyphset definition\n * U+F0257 : not included in any glyphset definition\n * U+F0258 : not included in any glyphset definition\n * U+F0259 : not included in any glyphset definition\n * U+F025A : not included in any glyphset definition\n * U+F025B : not included in any glyphset definition\n * U+F025C : not included in any glyphset definition\n * U+F025D : not included in any glyphset definition\n * U+F025E : not included in any glyphset definition\n * U+F025F : not included in any glyphset definition\n * U+F0260 : not included in any glyphset definition\n * U+F0261 : not included in any glyphset definition\n * U+F0262 : not included in any glyphset definition\n * U+F0263 : not included in any glyphset definition\n * U+F0264 : not included in any glyphset definition\n * U+F0265 : not included in any glyphset definition\n * U+F0266 : not included in any glyphset definition\n * U+F0267 : not included in any glyphset definition\n * U+F0268 : not included in any glyphset definition\n * U+F0269 : not included in any glyphset definition\n * U+F026A : not included in any glyphset definition\n * U+F026B : not included in any glyphset definition\n * U+F0270 : not included in any glyphset definition\n * U+F0271 : not included in any glyphset definition\n * U+F0272 : not included in any glyphset definition\n * U+F0273 : not included in any glyphset definition\n * U+F0274 : not included in any glyphset definition\n * U+F0275 : not included in any glyphset definition\n * U+F0276 : not included in any glyphset definition\n * U+F0277 : not included in any glyphset definition\n * U+F0278 : not included in any glyphset definition\n * U+F0279 : not included in any glyphset definition\n * U+F027A : not included in any glyphset definition\n * U+F027B : not included in any glyphset definition\n * U+F027C : not included in any glyphset definition\n * U+F027D : not included in any glyphset definition\n * U+F027E : not included in any glyphset definition\n * U+F027F : not included in any glyphset definition\n * U+F0280 : not included in any glyphset definition\n * U+F0281 : not included in any glyphset definition\n * U+F0282 : not included in any glyphset definition\n * U+F0283 : not included in any glyphset definition\n * U+F0284 : not included in any glyphset definition\n * U+F0285 : not included in any glyphset definition\n * U+F0286 : not included in any glyphset definition\n * U+F0287 : not included in any glyphset definition\n * U+F0288 : not included in any glyphset definition\n * U+F0289 : not included in any glyphset definition\n * U+F028A : not included in any glyphset definition\n * U+F028B : not included in any glyphset definition\n * U+F028C : not included in any glyphset definition\n * U+F028D : not included in any glyphset definition\n * U+F028E : not included in any glyphset definition\n * U+F028F : not included in any glyphset definition\n * U+F0290 : not included in any glyphset definition\n * U+F0291 : not included in any glyphset definition\n * U+F0292 : not included in any glyphset definition\n * U+F0293 : not included in any glyphset definition\n * U+F0294 : not included in any glyphset definition\n * U+F0295 : not included in any glyphset definition\n * U+F0296 : not included in any glyphset definition\n * U+F0297 : not included in any glyphset definition\n * U+F0298 : not included in any glyphset definition\n * U+F0299 : not included in any glyphset definition\n * U+F029A : not included in any glyphset definition\n * U+F029B : not included in any glyphset definition\n * U+F029C : not included in any glyphset definition\n * U+F029D : not included in any glyphset definition\n * U+F029E : not included in any glyphset definition\n * U+F029F : not included in any glyphset definition\n * U+F02A0 : not included in any glyphset definition\n * U+F02A1 : not included in any glyphset definition\n * U+F02A2 : not included in any glyphset definition\n * U+F02A3 : not included in any glyphset definition\n * U+F02A4 : not included in any glyphset definition\n * U+F02A5 : not included in any glyphset definition\n * U+F02A6 : not included in any glyphset definition\n * U+F02A7 : not included in any glyphset definition\n * U+F02A8 : not included in any glyphset definition\n * U+F02A9 : not included in any glyphset definition\n * U+F02AA : not included in any glyphset definition\n * U+F02AB : not included in any glyphset definition\n * U+F02AC : not included in any glyphset definition\n * U+F02AD : not included in any glyphset definition\n * U+F02AE : not included in any glyphset definition\n * U+F02AF : not included in any glyphset definition\n * U+F02B0 : not included in any glyphset definition\n * U+F02B1 : not included in any glyphset definition\n * U+F02B2 : not included in any glyphset definition\n * U+F02B3 : not included in any glyphset definition\n * U+F02B4 : not included in any glyphset definition\n * U+F02B5 : not included in any glyphset definition\n * U+F02B6 : not included in any glyphset definition\n * U+F02B7 : not included in any glyphset definition\n * U+F02B8 : not included in any glyphset definition\n * U+F02B9 : not included in any glyphset definition\n * U+F02BA : not included in any glyphset definition\n * U+F02C0 : not included in any glyphset definition\n * U+F02C1 : not included in any glyphset definition\n * U+F02C2 : not included in any glyphset definition\n * U+F02C3 : not included in any glyphset definition\n * U+F02C4 : not included in any glyphset definition\n * U+F02C5 : not included in any glyphset definition\n * U+F02C6 : not included in any glyphset definition\n * U+F02C7 : not included in any glyphset definition\n * U+F02C8 : not included in any glyphset definition\n * U+F02C9 : not included in any glyphset definition\n * U+F02CA : not included in any glyphset definition\n * U+F02CB : not included in any glyphset definition\n * U+F02CC : not included in any glyphset definition\n * U+F02CD : not included in any glyphset definition\n * U+F02CE : not included in any glyphset definition\n * U+F02CF : not included in any glyphset definition\n * U+F02D0 : not included in any glyphset definition\n * U+F02D1 : not included in any glyphset definition\n * U+F02D2 : not included in any glyphset definition\n * U+F02D3 : not included in any glyphset definition\n * U+F02D4 : not included in any glyphset definition\n * U+F02D5 : not included in any glyphset definition\n\nOr you can add the above codepoints to one of the subsets supported by the font: `menu`, `greek`, `greek-ext`, `hebrew`, `latin`, `latin-ext` [code: unreachable-subsetting]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that all encoded glyphs in the font are covered by a\n        subset declared in the METADATA.pb. Google Fonts splits the font into\n        a set of subset fonts based on the contents of the `subsets` field and\n        the subset definitions in the `glyphsets` repository.\n\n        Any encoded glyphs which are not by any of these subset definitions\n        will not be served in the subsetted fonts, and so will be unreachable to\n        the end user.\n    ",
                    "result": "WARN",
                    "severity": 2
                },
                {
                    "description": "Substitute copyright, registered and trademark symbols in name table entries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/unwanted_chars>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No need to substitute copyright, registered and trademark symbols in name table entries of this font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check the OS/2 usWeightClass is appropriate for the font's best SubFamily name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/usweightclass>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass is good",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects variable fonts, static ttfs and static otfs to have\n        differing OS/2 usWeightClass values.\n\n        - For Variable Fonts, Thin-Black must be 100-900\n\n        - For static ttfs, Thin-Black can be 100-900 or 250-900\n\n        - For static otfs, Thin-Black must be 250-900\n\n        If static otfs are set lower than 250, text may appear blurry in\n        legacy Windows applications.\n\n        Glyphsapp users can change the usWeightClass value of an instance by adding\n        a 'weightClass' customParameter.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has a license.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/has_license>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Found license at '/Users/simon/others-repos/fonts/ofl/cardo/OFL.txt'",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check license file has good copyright string.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_copyright>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "First line in license file is:\n\n\"copyright (c) 2002-2011, david j. perry (hospes02@scholarsfonts.net)\"\n\nwhich does not match the expected format, similar to:\n\n\"Copyright 2022 The Familyname Project Authors (git url)\" [code: bad-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An OFL.txt file's first line should be the font copyright e.g:\n        \"Copyright 2019 The Montserrat Project Authors\n        (https://github.com/julietaula/montserrat)\"\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Check OFL body text is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_body_text>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OFL license body text is correct",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check OFL body text is correct.\n        Often users will accidently delete parts of the body text.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check copyright namerecords match license file.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "For now we're still accepting http URLs, but you should consider using https instead.\n [code: http]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Licensing entry on name table is correctly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known licensing description must be provided in the NameID 14\n        (LICENSE DESCRIPTION) entries of the name table.\n\n        The source of truth for this check (to determine which license is in use) is\n        a file placed side-by-side to your font project including the licensing terms.\n\n        Depending on the chosen license, one of the following string snippets is\n        expected to be found on the NameID 13 (LICENSE DESCRIPTION) entries of the\n        name table:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set\n        of legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "License URL matches License text on name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license_url>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "For now we're still accepting http URLs, but you should consider using https instead.\n [code: http]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "A known license URL must be provided in the NameID 14 (LICENSE INFO URL) entry. Currently accepted licenses are Apache: 'https://www.apache.org/licenses/LICENSE-2.0' or Open Font License: 'https://scripts.sil.org/OFL'\nFor a small set of legacy families the Ubuntu Font License 'https://www.ubuntu.com/legal/terms-and-policies/font-licence' may be acceptable as well.\nWhen in doubt, please choose OFL for new font projects. [code: no-license-found]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known license URL must be provided in the NameID 14 (LICENSE INFO URL)\n        entry of the name table.\n\n        The source of truth for this check is the licensing text found on the NameID 13\n        entry (LICENSE DESCRIPTION).\n\n        The string snippets used for detecting licensing terms are:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set of\n        legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Description strings in the name table must not exceed 200 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/description_max_length>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All description name records have reasonably small lengths.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An old FontLab version had a bug which caused it to store copyright notices\n        in nameID 10 entries.\n\n        In order to detect those and distinguish them from actual legitimate usage of\n        this name table entry, we expect that such strings do not exceed a reasonable\n        length of 200 chars.\n\n        Longer strings are likely instances of the FontLab bug.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Show hinting filesize impact.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/hinting_impact>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Hinting filesize impact:\n\n |               | /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf          |\n |:------------- | ---------------:|\n | Dehinted Size | 336.8kb |\n | Hinted Size   | 340.2kb   |\n | Increase      | 3.3kb      |\n | Change        | 1.0 %  |\n [code: size-impact]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check is merely informative, displaying and useful comparison of filesizes\n        of hinted versus unhinted font files.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Ensure files are not too large.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/file_size>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font had a reasonable file size",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Serving extremely large font files on Google Fonts causes usability issues.\n        This check ensures that file sizes are reasonable.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Version format is correct in 'name' table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/version_format>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version format in NAME table entries is correct.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has ttfautohint params?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/has_ttfautohint_params>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "Font has old ttfautohint applied?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/old_ttfautohint>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Could not detect which version of ttfautohint was used in this font. It is typically specified as a comment in the font version entries of the 'name' table. Such font version strings are currently: ['Version 1.0011', 'Version 1.0011'] [code: version-not-detected]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check if font has been hinted with an outdated version of ttfautohint.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "EPAR table present in font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/epar>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "EPAR table not present in font. To learn more see https://github.com/fonttools/fontbakery/issues/818 [code: lacks-EPAR]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The EPAR table is/was a way of expressing common licensing permissions and\n        restrictions in metadata; while almost nothing supported it, Dave Crossland\n        wonders that adding it to everything in Google Fonts could help make it\n        more popular.\n\n        More info is available at:\n        https://davelab6.github.io/epar/\n    ",
                    "result": "INFO",
                    "severity": 1
                },
                {
                    "description": "Is the Grid-fitting and Scan-conversion Procedure ('gasp') table set to optimize rendering?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gasp>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "These are the ppm ranges declared on the gasp table:\n\nPPM <= 65535:\n\tflag = 0x03\n\t- Use grid-fitting\n\t- Use grayscale rendering\n [code: ranges]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "The gasp range 0xFFFF value 0x03 should be set to 0x0F. [code: unset-flags]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Traditionally version 0 'gasp' tables were set so that font sizes below 8 ppem\n        had no grid fitting but did have antialiasing. From 9-16 ppem, just grid\n        fitting.\n        And fonts above 17ppem had both antialiasing and grid fitting toggled on.\n        The use of accelerated graphics cards and higher resolution screens make this\n        approach obsolete. Microsoft's DirectWrite pushed this even further with much\n        improved rendering built into the OS and apps.\n\n        In this scenario it makes sense to simply toggle all 4 flags ON for all font\n        sizes.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Make sure family name does not begin with a digit.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/familyname_first_char>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font family name first character is not a digit.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Font family names which start with a numeral are often not discoverable\n        in Windows applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there non-ASCII characters in ASCII-only NAME table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/ascii_only_entries>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the ASCII-only NAME table entries contain non-ASCII characteres.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec requires ASCII for the POSTSCRIPT_NAME (nameID 6).\n\n        For COPYRIGHT_NOTICE (nameID 0) ASCII is required because that string should be\n        the same in CFF fonts which also have this requirement in the OpenType spec.\n\n        Note:\n        A common place where we find non-ASCII strings is on name table entries\n        with NameID > 18, which are expressly for localising the ASCII-only IDs\n        into Hindi / Arabic / etc.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only has unique \"full_name\" values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_full_name_values>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique \"full_name\" values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only contains unique style:weight pairs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_weight_style_pairs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique style:weight pairs.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb license is \"APACHE2\", \"UFL\" or \"OFL\"?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/license>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font license is declared in METADATA.pb as \"OFL\"",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb should contain at least \"menu\" and \"latin\" subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/menu_and_latin>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb contains \"menu\" and \"latin\" subsets.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb subsets should be alphabetically ordered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/subsets_order>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb subsets are not sorted in alphabetical order: Got ['menu', 'greek', 'greek-ext', 'hebrew', 'latin', 'latin-ext'] and expected ['greek', 'greek-ext', 'hebrew', 'latin', 'latin-ext', 'menu'] [code: not-sorted]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Check METADATA.pb includes production subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/includes_production_subsets>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No missing subsets",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb file includes the same subsets as the family in production.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice is the same in all fonts?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright is consistent across family",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check that METADATA.pb family values are all the same.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/familyname>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Family name is the same in all metadata \"fonts\" items.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: According to Google Fonts standards, families should have a Regular style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/has_regular>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family has a Regular style.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Regular should be 400.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/regular_is_400>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Regular has weight = 400.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.name field matches family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.post_script_name matches postscript name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/post_script_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Postscript name \"Cardo-Bold\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name value matches fullname declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/full_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font fullname \"Cardo Bold\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "Font fullname \"Cardo Bold\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name value should be same as the family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/font_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK: Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OK: Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures consistency between the font name declared on the name table\n        and the contents of the METADATA.pb file.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name and font.post_script_name fields have equivalent values ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_fullname_postscript>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"full_name\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename and font.post_script_name fields have equivalent values?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_filename_postscript>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"filename\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_name_values>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.name field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_full_name_values>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Cardo\" in \"Cardo Bold\")",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Cardo\" in \"Cardo Bold\")",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_filename_values>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb filename field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.post_script_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_post_script_name_values>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check name ID 25 to end with \"Italic\" for Italic VFs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_nameid25>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Not an Italic VF.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Due to a bug in (at least) Adobe Indesign, name ID 25\n        needs to be different for Italic VFs than their Upright counterparts.\n        Google Fonts chooses to append \"Italic\" here.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright notices match canonical pattern in METADATA.pb",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_copyright>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Copyright notices should match a pattern similar to:\n \"Copyright 2020 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"copyright (c) 2002-2011, david j. perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The expected pattern for the copyright string adheres to the following rules:\n\n        * It must say \"Copyright\" followed by a 4 digit year (optionally followed by\n          a hyphen and another 4 digit year)\n\n        * Then it must say \"The <familyname> Project Authors\"\n\n        * And within parentheses, a URL for a git repository must be provided\n\n        * The check is case insensitive and does not validate whether the familyname\n          is correct, even though we'd expect it is (and we may soon update the check\n          to validate that aspect as well!)\n\n\n        Here is an example of a valid copyright string:\n\n        \"Copyright 2017 The Archivo Black Project Authors\n         (https://github.com/Omnibus-Type/ArchivoBlack)\"\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notices match canonical pattern in fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_copyright>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Copyright (c) 2002-2011, David J. Perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Copyright (c) 2002-2011, David J. Perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notice on METADATA.pb should not contain 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/reserved_font_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb copyright field does not contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice shouldn't exceed 500 chars.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright_max_length>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright notice string is shorter than 500 chars.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font filenames match font.filename entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/filenames>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filenames in METADATA.pb look good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Note:\n        This check only looks for files in the current directory.\n\n        Font files in subdirectories are checked by these other two checks:\n         - com.google.fonts/check/metadata/undeclared_fonts\n         - com.google.fonts/check/repo/vf_has_static_fonts\n\n        We may want to merge them all into a single check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.style \"italic\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/italic_style>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check only applies to italic fonts.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "METADATA.pb font.style \"normal\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/normal_style>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.style \"normal\" matches font internals.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name and font.full_name fields match the values declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_and_full_names>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb familyname and fullName fields match corresponding name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check font name is the same as family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_name_familyname>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name is the same as family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check that font weight has a canonical value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_weight_value>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font weight has a canonical value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check METADATA.pb font weights are correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/os2_weightclass>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass or wght axis value matches weight specified at METADATA.pb",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb font weights are correct.\n\n        For static fonts, the metadata weight should be the same as the static font's\n        OS/2 usWeightClass.\n\n        For variable fonts, the weight value should be 400 if the font's wght axis range\n        includes 400, otherwise it should be the value closest to 400.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb weight matches postScriptName for static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_weight_postscript>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Weight value matches postScriptName.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font styles are named canonically?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_style_names>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font styles are named canonically.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check URL on copyright string is the same as in repository_url field.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_repo_urls>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes, perhaps due to copy-pasting, projects may declare different URLs\n        between the font.coyright and the family.sources.repository_url fields.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check for primary_script",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/primary_script>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Try to guess font's primary script and see if that's set in METADATA.pb.\n        This is an educated guess based on the number of glyphs per script in the font\n        and should be taken with caution.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Stricter unitsPerEm criteria for Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem_strict>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font em size is good (unitsPerEm = 2048).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though the OpenType spec allows unitsPerEm to be any value between 16\n        and 16384, the Google Fonts project aims at a narrower set of reasonable values.\n\n        The spec suggests usage of powers of two in order to get some performance\n        improvements on legacy renderers, so those values are acceptable.\n\n        But values of 500 or 1000 are also acceptable, with the added benefit that it\n        makes upm math easier for designers, while the performance hit of not using a\n        power of two is most likely negligible nowadays.\n\n        Additionally, values above 2048 would likely result in unreasonable\n        filesize increases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Glyphs are similiar to Google Fonts version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/production_glyphs_similarity>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs are similar in comparison to the Google Fonts version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking direction of slnt axis angles",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/slant_direction>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'slnt' axis values are defined as negative values for a clockwise (right)\n        lean, and positive values for counter-clockwise lean. This is counter-intuitive\n        for many designers who are used to think of a positive slant as a lean to\n        the right.\n\n        This check ensures that the slant axis direction is consistent with the specs.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font names are correct",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_names>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font names are good:\n\n| nameID | current | expected |\n| :--- | :--- | :--- |\n| Family Name | Cardo | Cardo |\n| Subfamily Name | Bold | Bold |\n| Full Name | Cardo Bold | Cardo Bold |\n| Poscript Name | Cardo-Bold | Cardo-Bold |",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has several rules which need to be adhered to when\n        setting a font's name table. Please read:\n        https://googlefonts.github.io/gf-guide/statics.html#supported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#style-linking\n        https://googlefonts.github.io/gf-guide/statics.html#unsupported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#single-weight-families\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright field for this font on METADATA.pb matches all copyright notice entries on the name table ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/copyright>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright field for this font on METADATA.pb matches copyright notice entries on the name table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has all mandatory 'name' table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/mandatory_entries>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains values for all mandatory name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Length of copyright notice must not exceed 500 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/copyright_length>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All copyright notice name entries on the 'name' table are shorter than 500 characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is an arbitrary max length for the copyright notice field of the name\n        table. We simply don't want such notices to be too long. Typically such notices\n        are actually much shorter than this with a length of roughly 70 or 80\n        characters.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check for font-v versioning.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fontv>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version string is: \"Version 1.0011\"\nThe version string must ideally include a git commit hash and either a \"dev\" or a \"release\" suffix such as in the example below:\n\"Version 1.3; git-0d08353-release\" [code: bad-format]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The git sha1 tagging and dev/release features of Source Foundry `font-v` tool\n        are awesome and we would love to consider upstreaming the approach into\n        fontmake someday. For now we only emit an INFO if a given font does not yet\n        follow the experimental versioning style, but at some point we may start\n        enforcing it.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Check glyphs do not have components which are themselves components.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_nested_components>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs do not contain nested components.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been bugs rendering variable fonts with nested components.\n        Additionally, some static fonts with nested components have been reported\n        to have rendering and printing issues.\n\n        For more info, see:\n        * https://github.com/fonttools/fontbakery/issues/2961\n        * https://github.com/arrowtype/recursive/issues/412\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a static ttf can be generated from a variable font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/generate_static>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts may serve static fonts which have been generated from variable\n        fonts. This test will attempt to generate a static ttf using fontTool's\n        varLib mutator.\n\n        The target font will be the mean of each axis e.g:\n\n        ## VF font axes\n\n        - min weight, max weight = 400, 800\n\n        - min width, max width = 50, 100\n\n        ## Target Instance\n\n        - weight = 600\n\n        - width = 75\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that variable fonts have an HVAR table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/has_HVAR>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Not having a HVAR table can lead to costly text-layout operations on some\n        platforms, which we want to avoid.\n\n        So, all variable fonts on the Google Fonts collection should have an HVAR\n        with valid values.\n\n        More info on the HVAR table can be found at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otvaroverview#variation-data-tables-and-miscellaneous-requirements\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Font enables smart dropout control in \"prep\" table instructions?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/smart_dropout>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The 'prep' table does not contain TrueType instructions enabling smart dropout control. To fix, export the font with autohinting enabled, or run ttfautohint on the font, or run the `gftools fix-nonhinting` script. [code: lacks-smart-dropout]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This setup is meant to ensure consistent rendering quality for fonts across\n        all devices (with different rendering/hinting capabilities).\n\n        Below is the snippet of instructions we expect to see in the fonts:\n        B8 01 FF    PUSHW 0x01FF\n        85          SCANCTRL (unconditinally turn on\n                              dropout control mode)\n        B0 04       PUSHB 0x04\n        8D          SCANTYPE (enable smart dropout control)\n\n        \"Smart dropout control\" means activating rules 1, 2 and 5:\n        Rule 1: If a pixel's center falls within the glyph outline,\n                that pixel is turned on.\n        Rule 2: If a contour falls exactly on a pixel's center,\n                that pixel is turned on.\n        Rule 5: If a scan line between two adjacent pixel centers\n                (either vertical or horizontal) is intersected\n                by both an on-Transition contour and an off-Transition\n                contour and neither of the pixels was already turned on\n                by rules 1 and 2, turn on the pixel which is closer to\n                the midpoint between the on-Transition contour and\n                off-Transition contour. This is \"Smart\" dropout control.\n\n        For more detailed info (such as other rules not enabled in this snippet),\n        please refer to the TrueType Instruction Set documentation.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "There must not be VTT Talk sources in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vttclean>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no tables with VTT Talk sources embedded in the font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The goal here is to reduce filesizes and improve pageloading when dealing\n        with webfonts.\n\n        The VTT Talk sources are not necessary at runtime and endup being just dead\n        weight when left embedded in the font binaries. The sources should be kept on\n        the project files but stripped out when building release binaries.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there unwanted Apple tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/aat>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no unwanted AAT tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Apple's TrueType reference manual [1] describes SFNT tables not in the\n        Microsoft OpenType specification [2] and these can sometimes sneak into final\n        release files, but Google Fonts should only have OpenType tables.\n\n        [1] https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6.html\n        [2] https://docs.microsoft.com/en-us/typography/opentype/spec/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a font's STAT table contains compulsory Axis Values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's STAT table contains compulsory Axis Values which exist\n        in the Google Fonts Axis Registry.\n\n        We cannot determine what Axis Values the user will set for axes such as\n        opsz, GRAD since these axes are unique for each font so we'll skip them.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_instances>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's fvar instance coordinates comply with our guidelines:\n        https://googlefonts.github.io/gf-guide/variable.html#fvar-instances\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All name entries referenced by fvar instances exist on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_name_entries>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to make sure that all name entries referenced\n        by variable font instances do exist in the name table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "PPEM must be an integer on hinted fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/integer_ppem_if_hinted>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_hinted",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Hinted fonts must have head table flag bit 3 set.\n\n        Per https://docs.microsoft.com/en-us/typography/opentype/spec/head,\n        bit 3 of Head::flags decides whether PPEM should be rounded. This bit should\n        always be set for hinted fonts.\n\n        Note:\n        Bit 3 = Force ppem to integer values for all internal scaler math;\n                May use fractional ppem sizes if this bit is clear;\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Are there caret positions declared for every ligature?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/ligature_carets>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: ligature_glyphs",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All ligatures in a font must have corresponding caret (text cursor) positions\n        defined in the GDEF table, otherwhise, users may experience issues with\n        caret rendering.\n\n        If using GlyphsApp or UFOs, ligature carets can be defined as anchors with\n        names starting with 'caret_'. These can be compiled with fontmake as of\n        version v2.4.0.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is there kerning info for non-ligated sequences?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/kerning_for_non_ligated_sequences>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: ligatures",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with ligatures should have kerning on the corresponding non-ligated\n        sequences for text where ligatures aren't used\n        (eg https://github.com/impallari/Raleway/issues/14).\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Combined length of family and style must not exceed 27 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_and_style_max_length>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All name entries are good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to a GlyphsApp tutorial [1], in order to make sure all versions of\n        Windows recognize it as a valid font file, we must make sure that the\n        concatenated length of the familyname (NameID.FONT_FAMILY_NAME) and\n        style (NameID.FONT_SUBFAMILY_NAME) strings in the name table do not\n        exceed 20 characters.\n\n        After discussing the problem in more detail at FontBakery issue #2179 [2] we\n        decided that allowing up to 27 chars would still be on the safe side, though.\n\n        [1] https://glyphsapp.com/tutorials/multiple-masters-part-3-setting-up-instances\n        [2] https://github.com/fonttools/fontbakery/issues/2179\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table entries should not contain line-breaks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/line_breaks>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name table entries are all single-line (no line-breaks found).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are some entries on the name table that may include more than one line\n        of text. The Google Fonts team, though, prefers to keep the name table entries\n        short and simple without line breaks.\n\n        For instance, some designers like to include the full text of a font license in\n        the \"copyright notice\" entry, but for the GFonts collection this entry should\n        only mention year, author and other basic info in a manner enforced by\n        com.google.fonts/check/font_copyright\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table strings must not contain the string 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/rfn>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the name table strings contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some designers adopt the \"Reserved Font Name\" clause of the OFL license. This\n        means that the original author reserves the rights to the family name and other\n        people can only distribute modified versions using a different family name.\n\n        Google Fonts published updates to the fonts in the collection in order to fix\n        issues and/or implement further improvements to the fonts. It is important to\n        keep the family name so that users of the webfonts can benefit from the updates.\n        Since it would forbid such usage scenario, all families in the GFonts collection\n        are required to not adopt the RFN clause.\n\n        This check ensures \"Reserved Font Name\" is not mentioned in the name table.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check family name for GF Guide compliance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_name_compliance>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks the family name for compliance with the Google Fonts Guide.\n        https://googlefonts.github.io/gf-guide/onboarding.html#new-fonts\n\n        If you want to have your family name added to the CamelCase\n        exceptions list, please submit a pull request to the\n        camelcased_familyname_exceptions.txt file.\n\n        Similarly, abbreviations can be submitted to the\n        abbreviations_familyname_exceptions.txt file.\n\n        These are located in the Lib/fontbakery/data/googlefonts/ directory\n        of the FontBakery source code currently hosted at\n        https://github.com/fonttools/fontbakery/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Directory name in GFonts repo structure must match NameID 1 of the regular.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/dirname_matches_nameid_1>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "A static fonts directory with at least two fonts must accompany variable fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/vf_has_static_fonts>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider adding a subdirectory called \"static/\" and including in it static font files. [code: missing]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Variable font family directories kept in the google/fonts git repo may include\n        a static/ subdir containing static fonts.\n\n        These files are meant to be served for users that still lack support for\n        variable fonts in their web browsers.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "A font repository should not include FontBakery report files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/fb_report>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A FontBakery report is ephemeral and so should be used for posting issues on a\n        bug-tracker instead of being hosted in the font project repository.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check upstream.yaml file contains all required fields",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/upstream_yaml_has_required_fields>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: upstream_yaml",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If a family has been pushed using the gftools packager, we must check that all\n        the required fields in the upstream.yaml file have been populated.\n    ",
                    "result": "SKIP",
                    "severity": 10
                },
                {
                    "description": "A font repository should not include ZIP files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/zip_files>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people check in ZIPs into their font project repositories. While we\n        accept the practice of checking in binaries, we believe that a ZIP is a step\n        too far ;)\n\n        Note: a source purist position is that only source files and build scripts\n        should be checked in.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check generally enforces Google Fonts\u2019 vertical metrics specifications.\n        In particular:\n        * lineGap must be 0\n        * Sum of hhea ascender + abs(descender) + linegap must be\n          between 120% and 200% of UPM\n        * Warning if sum is over 150% of UPM\n\n        The threshold levels 150% (WARN) and 200% (FAIL) are somewhat arbitrarily chosen\n        and may hint at a glaring mistake in the metrics calculations or UPM settings.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/VerticalMetrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Vertical metrics have not regressed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the family already exists on Google Fonts, we need to ensure that the\n        checked family's vertical metrics are similar. This check will test the\n        following schema which was outlined in Font Bakery issue #1162 [1]:\n\n        - The family should visually have the same vertical metrics as the Regular\n          style hosted on Google Fonts.\n\n        - If the family on Google Fonts has differing hhea and typo metrics, the family\n          being checked should use the typo metrics for both the hhea and typo entries.\n\n        - If the family on Google Fonts has use typo metrics not enabled and the family\n          being checked has it enabled, the hhea and typo metrics should use the family\n          on Google Fonts winAscent and winDescent values.\n\n        - If the upms differ, the values must be scaled so the visual appearance is\n          the same.\n\n        [1] https://github.com/fonttools/fontbakery/issues/1162\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts CJK vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font, not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        CJK fonts have different vertical metrics when compared to Latin fonts.\n        We follow the schema developed by dr Ken Lunde for Source Han Sans and\n        the Noto CJK fonts.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/Spec#cjk-vertical-metrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a CJK family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check CJK family has the same vertical metrics as the same family\n        hosted on Google Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font contain less than 150 CJK characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_not_enough_glyphs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_claiming_to_be_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Kana has 150 characters and it's the smallest CJK writing system.\n\n        If a font contains less CJK glyphs than this writing system, we inform the\n        user that some glyphs may be encoded incorrectly.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances don't have duplicate names",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont_duplicate_instance_names>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check's purpose is to detect duplicate named instances names in a\n        given variable font.\n        Repeating instance names may be the result of instances for several VF axes\n        defined in `fvar`, but since currently only weight+italic tokens are allowed\n        in instance names as per GF specs, they ended up repeating.\n        Instead, only a base set of fonts for the most default representation of the\n        family can be defined through instances in the `fvar` table, all other\n        instances will have to be left to access through the `STAT` table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs do not contain the ital axis.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/unsupported_axes>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'ital' axis is not supported yet in Google Chrome.\n\n        For the time being, we need to ensure that VFs do not contain this axis.\n        Once browser support is better, we can deprecate this check.\n\n        For more info regarding browser support, see:\n        https://arrowtype.github.io/vf-slnt-test/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs with duplexed axes do not vary horizontal advance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/duplexed_axis_reflow>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Certain axes, such as grade (GRAD) or roundness (ROND), should not\n        change any advanceWidth or kerning data across the font's design space.\n        This is because altering the advance width of glyphs can cause text reflow.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes values are within gf_axisregistry bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_bounds>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Each axis range in a METADATA.pb file must be registered, and within the bounds\n        of the axis definition in the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes tags are defined in gf_axisregistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_valid_tags>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure all axes in a METADATA.pb file are registered in the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        Why does Google Fonts have its own Axis Registry?\n\n        We support a superset of the OpenType axis registry axis set, and use\n        additional metadata for each axis. Axes present in a font file but not in this\n        registry will not function via our API. No variable font is expected to\n        support all of the axes here.\n\n        Any font foundry or distributor library that offers variable fonts has a\n        implicit, latent, de-facto axis registry, which can be extracted by scanning\n        the library for axes' tags, labels, and min/def/max values. While in 2016\n        Microsoft originally offered to include more axes in the OpenType 1.8\n        specification (github.com/microsoft/OpenTypeDesignVariationAxisTags), as of\n        August 2020, this effort has stalled. We hope more foundries and distributors\n        will publish documents like this that make their axes explicit, to encourage\n        of adoption of variable fonts throughout the industry, and provide source\n        material for a future update to the OpenType specification's axis registry.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate defaults on fvar table match registered fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gf_axisregistry/fvar_axis_defaults>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that axis defaults have a corresponding fallback name registered at the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        This is necessary for the following reasons:\n\n        To get ZIP files downloads on Google Fonts to be accurate \u2014 otherwise the\n        chosen default font is not generated. The Newsreader family, for instance, has\n        a default value on the 'opsz' axis of 16pt. If 16pt was not a registered\n        fallback position, then the ZIP file would instead include another position\n        as default (such as 14pt).\n\n        For the Variable fonts to display the correct location on the specimen page.\n\n        For VF with no weight axis to be displayed at all. For instance, Ballet, which\n        has no weight axis, was not appearing in sandbox because default position on\n        'opsz' axis was 16pt, and it was not yet a registered fallback positon.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate STAT particle names and values match the fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT/gf_axisregistry>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that particle names and values on STAT table match the fallback names\n        in each axis entry at the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate VF axes match the ones declared on METADATA.pb.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_axis_enumeration>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All font variation axes present in the font files must be properly declared\n        on METADATA.pb so that they can be served by the GFonts API.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure METADATA.pb does not use escaped strings.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/escaped_strings>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In some cases we've seen designer names and other fields with escaped strings\n        in METADATA files. Nowadays the strings can be full unicode strings and\n        do not need escaping.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Designers are listed correctly on the Google Fonts catalog?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_profiles>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Designer David Perry still does not have an avatar image. Please provide one. [code: missing-avatar]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has a catalog of designers.\n\n        This check ensures that the online entries of the catalog can be found based\n        on the designer names listed on the METADATA.pb file.\n\n        It also validates the URLs and file formats are all correctly set.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Ensure variable fonts include an avar table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_avar_table>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Most variable fonts should include an avar table to correctly define\n        axes progression rates.\n\n        For example, a weight axis from 0% to 100% doesn't map directly to 100 to 1000,\n        because a 10% progression from 0% may be too much to define the 200,\n        while 90% may be too little to define the 900.\n\n        If the progression rates of axes is linear, this check can be ignored.\n        Fontmake will also skip adding an avar table if the progression rates\n        are linear. However, we still recommend designers visually proof each\n        instance is at the expected weight, width etc.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "On a family update, the DESCRIPTION.en_us.html file should ideally also be updated.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/family_update>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The DESCRIPTION.en_us.html file in this family has not changed in comparison to the latest font release on the google/fonts github repo.\nPlease consider mentioning note-worthy improvements made to the family recently. [code: description-not-updated]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want to ensure that any significant changes to the font family are\n        properly mentioned in the DESCRIPTION file.\n\n        In general, it means that the contents of the DESCRIPTION.en_us.html file\n        will typically change if when font files are updated. Please treat this check\n        as a reminder to do so whenever appropriate!\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check small caps glyphs are available.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/missing_small_caps_glyphs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure small caps glyphs are available if\n        a font declares smcp or c2sc OT features.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure Stylistic Sets have description.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/stylisticset_description>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Stylistic sets should provide description text. Programs such as InDesign,\n        TextEdit and Inkscape use that info to display to the users so that they know\n        what a given stylistic set offers.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) is set in all fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/os2/use_typo_metrics>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) wasNOT set in the following fonts: ['/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf', '/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf', '/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf']. [code: missing-os2-fsselection-bit7]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All fonts on the Google Fonts collection should have OS/2.fsSelection bit 7\n        (USE_TYPO_METRICS) set. This requirement is part of the vertical metrics scheme\n        established as a Google Fonts policy aiming at a common ground supported by\n        all major font rendering environments.\n\n        For more details, read:\n        https://github.com/googlefonts/gf-docs/blob/main/VerticalMetrics/README.md\n\n        Below is the portion of that document that is most relevant to this check:\n\n        Use_Typo_Metrics must be enabled. This will force MS Applications to use the\n        OS/2 Typo values instead of the Win values. By doing this, we can freely set\n        the Win values to avoid clipping and control the line height with the typo\n        values. It has the added benefit of future line height compatibility. When\n        a new script is added, we simply change the Win values to the new yMin\n        and yMax, without needing to worry if the line height have changed.\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Ensure fonts have ScriptLangTags declared on the 'meta' table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/meta/script_lang_tags>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file does not have a 'meta' table. [code: lacks-meta-table]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType 'meta' table originated at Apple. Microsoft added it to OT with\n        just two DataMap records:\n\n        - dlng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font is designed for.\n\n        - slng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font supports.\n\n\n        The slng structure is intended to describe which languages and scripts the\n        font overall supports. For example, a Traditional Chinese font that also\n        contains Latin characters, can indicate Hant,Latn, showing that it supports\n        Hant, the Traditional Chinese variant of the Hani script, and it also\n        supports the Latn script.\n\n        The dlng structure is far more interesting. A font may contain various glyphs,\n        but only a particular subset of the glyphs may be truly \"leading\" in the design,\n        while other glyphs may have been included for technical reasons. Such a\n        Traditional Chinese font could only list Hant there, showing that it\u2019s designed\n        for Traditional Chinese, but the font would omit Latn, because the developers\n        don\u2019t think the font is really recommended for purely Latin-script use.\n\n        The tags used in the structures can comprise just script, or also language\n        and script. For example, if a font has Bulgarian Cyrillic alternates in the\n        locl feature for the cyrl BGR OT languagesystem, it could also indicate in\n        dlng explicitly that it supports bul-Cyrl. (Note that the scripts and languages\n        in meta use the ISO language and script codes, not the OpenType ones).\n\n        This check ensures that the font has the meta table containing the\n        slng and dlng structures.\n\n        All families in the Google Fonts collection should contain the 'meta' table.\n        Windows 10 already uses it when deciding on which fonts to fall back to.\n        The Google Fonts API and also other environments could use the data for\n        smarter filtering. Most importantly, those entries should be added\n        to the Noto fonts.\n\n        In the font making process, some environments store this data in external\n        files already. But the meta table provides a convenient way to store this\n        inside the font file, so some tools may add the data, and unrelated tools\n        may read this data. This makes the solution much more portable and universal.\n    ",
                    "result": "WARN",
                    "severity": 3
                },
                {
                    "description": "Ensure fonts do not contain any pre-production tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/no_debugging_tables>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file contains the following pre-production tables: FFTM [code: has-debugging-tables]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Tables such as `Debg` are useful in the pre-production stages of font\n        development, but add unnecessary bloat to a production font and should\n        be removed before release.\n    ",
                    "result": "WARN",
                    "severity": 6
                },
                {
                    "description": "Check font family directory name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/family_directory_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Directory name is \"cardo\", as expected.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want the directory name of a font family to be predictable and directly\n        derived from the family name, all lowercased and removing spaces.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font can render its own name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/render_own_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can successfully render its own name (Cardo)",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A base expectation is that a font family's regular/default (400 roman) style\n        can render its 'menu name' (nameID 1) in itself.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check samples can be rendered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/can_render_samples>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to prevent tofu from being seen on fonts.google.com, this check\n        verifies that all samples specified by METADATA.pb can be properly\n        rendered by the font.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check if category on METADATA.pb matches what can be inferred from the family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category_hints>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes the font familyname contains words that hint at which is the most\n        likely correct category to be declared on METADATA.pb\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has the expected color font tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/colorfont_tables>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks Good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        COLR v0 fonts are widely supported in most browsers so they do not require\n        an SVG color table. However, some environments (e.g. Safari, Adobe apps)\n        do not currently support COLR v1 so we need to add an SVG table to these fonts,\n        except in the case of variable fonts, since SVG does not support\n        OpenType Variations.\n\n        To automatically generate compatible SVG/COLR tables,\n        run the maximum_color tool in nanoemoji:\n        https://github.com/googlefonts/nanoemoji\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Color layers should have a minimum brightness",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/color_cpal_brightness>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Layers of a COLRv0 font should not be too dark or too bright. When layer colors\n        are set explicitly, they can't be changed and they may turn out illegible\n        against dark or bright backgrounds.\n\n        While traditional color-less fonts can be colored in design apps or CSS, a\n        black color definition in a COLRv0 font actually means that that layer will be\n        rendered in black regardless of the background color. This leads to text\n        becoming invisible against a dark background, for instance when using a dark\n        theme in a web browser or operating system.\n\n        This check ensures that layer colors are at least 10% bright and at most 90%\n        bright, when not already set to the current color (0xFFFF).\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Put an empty glyph on GID 1 right after the .notdef glyph for COLRv0 fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/empty_glyph_on_gid1_for_colrv0>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A rendering bug in Windows 10 paints whichever glyph is on GID 1 on top of\n        some glyphs, colored or not. This only occurs for COLR version 0 fonts.\n\n        Having a glyph with no contours on GID 1 is a practical workaround for that.\n\n        See https://github.com/googlefonts/gftools/issues/609\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Noto fonts must have an ARTICLE.en_us.html file",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/noto_has_article>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_noto",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Noto fonts are displayed in a different way on the fonts.google.com\n         web site, and so must also contain an article about them.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking file is named canonically.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/canonical_filename>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font filename is correct, \"Cardo-Regular.ttf\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's filename must be composed as \"<familyname>-<stylename>.ttf\":\n\n        - Nunito-Regular.ttf\n\n        - Oswald-BoldItalic.ttf\n\n\n        Variable fonts must list the axis tags in alphabetical order in\n        square brackets and separated by commas:\n\n        - Roboto[wdth,wght].ttf\n\n        - Familyname-Italic[wght].ttf\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/broken_links>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the DESCRIPTION file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website. For that reason, all hyperlinks\n        in it must be properly working.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "URLs on DESCRIPTION file must not display http(s) prefix.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/urls>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The snippet of HTML in the DESCRIPTION.en_us.html file is added to the font\n        family webpage on the Google Fonts website.\n\n        Google Fonts has a content formatting policy for that snippet that expects the\n        text content of links not to include the http:// or https:// prefixes.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does DESCRIPTION file contain a upstream Git repo URL?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/git_url>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please host your font project on a public Git repo (such as GitHub or GitLab) and place a link in the DESCRIPTION.en_us.html file. [code: lacks-git-url]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The contents of the DESCRIPTION.en-us.html file are displayed on the\n        Google Fonts website in the about section of each font family specimen page.\n\n        Since all of the Google Fonts collection is composed of libre-licensed fonts,\n        this check enforces a policy that there must be a hypertext link in that page\n        directing users to the repository where the font project files are\n        made available.\n\n        Such hosting is typically done on sites like Github, Gitlab, GNU Savannah or\n        any other git-based version control service.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Is this a proper HTML snippet?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/valid_html>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/cardo/DESCRIPTION.en_us.html is a propper HTML file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people write malformed HTML markup. This check should ensure the\n        file is good.\n\n        Additionally, when packaging families for being pushed to the `google/fonts`\n        git repo, if there is no DESCRIPTION.en_us.html file, some older versions of\n        the `add_font.py` tool insert a placeholder description file which contains\n        invalid html. This file needs to either be replaced with an existing\n        description file or edited by hand.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html must have more than 200 bytes.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/min_length>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "DESCRIPTION.en_us.html is larger than 200 bytes.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "DESCRIPTION.en_us.html should end in a linebreak.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/eof_linebreak>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The last characther on DESCRIPTION.en_us.html is not a line-break. Please add it. [code: missing-eof-linebreak]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some older text-handling tools sometimes misbehave if the last line of data\n        in a text file is not terminated with a newline character (also known as '\\n').\n\n        We know that this is a very small detail, but for the sake of keeping all\n        DESCRIPTION.en_us.html files uniformly formatted throughout the GFonts\n        collection, we chose to adopt the practice of placing this final linebreak\n        character on them.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check METADATA.pb parse correctly.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/parses>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb parsed successfuly.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to ensure that the METADATA.pb file is not\n        malformed.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not be 'unknown'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unknown_designer>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font designer field is not 'unknown'.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font designer field in METADATA.pb must not contain 'Multiple designers'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/multiple_designers>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        For a while the string \"Multiple designers\" was used as a placeholder on\n        METADATA.pb files. We should replace all those instances with actual designer\n        names so that proper credits are displayed on the Google Fonts family\n        specimen pages.\n\n        If there's more than a single designer, the designer names must be\n        separated by commas.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Multiple values in font designer field in METADATA.pb must be separated by commas.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_values>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We must use commas instead of forward slashes because the server-side code\n        at the fonts.google.com directory will segment the string on the commas into\n        a list of names and display the first item in the list as the\n        \"principal designer\" while the remaining names are identified as \"contributors\".\n\n        See eg https://fonts.google.com/specimen/Rubik\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does METADATA.pb copyright field contain broken links?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/broken_links>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All links in the METADATA.pb file look good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb lists all font binaries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/undeclared_fonts>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The set of font binaries available, except the ones on a \"static\" subdir,\n        must match exactly those declared on the METADATA.pb file.\n\n        Also, to avoid confusion, we expect that font files (other than statics)\n        are not placed on subdirectories.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure METADATA.pb category field is valid.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are only five acceptable values for the category field in a METADATA.pb\n        file:\n\n        - MONOSPACE\n\n        - SANS_SERIF\n\n        - SERIF\n\n        - DISPLAY\n\n        - HANDWRITING\n\n        This check is meant to avoid typos in this field.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 fsType does not impose restrictions.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fstype>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsType is properly set to zero.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The fsType in the OS/2 table is a legacy DRM-related field. Fonts in the\n        Google Fonts collection must have it set to zero (also known as\n        \"Installable Embedding\"). This setting indicates that the fonts can be\n        embedded in documents and permanently installed by applications on\n        remote systems.\n\n        More detailed info is available at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/os2#fstype\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vendor_id>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 VendorID 'FSFS' looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft keeps a list of font vendors and their respective contact info. This\n        list is updated regularly and is indexed by a 4-char \"Vendor ID\" which is\n        stored in the achVendID field of the OS/2 table.\n\n        Registering your ID is not mandatory, but it is a good practice since some\n        applications may display the type designer / type foundry contact info on some\n        dialog and also because that info will be visible on Microsoft's website:\n\n        https://docs.microsoft.com/en-us/typography/vendors/\n\n        This check verifies whether or not a given font's vendor ID is registered in\n        that list or if it has some of the default values used by the most common\n        font editors.\n\n        Each new FontBakery release includes a cached copy of that list of vendor IDs.\n        If you registered recently, you're safe to ignore warnings emitted by this\n        check, since your ID will soon be included in one of our upcoming releases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check Google Fonts glyph coverage.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyph_coverage>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects that fonts in its collection support at least the minimal\n        set of characters defined in the `GF-latin-core` glyph-set.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check for METADATA subsets with zero support.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unsupported_subsets>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that the subsets specified on a METADATA.pb file are\n        actually supported (even if only partially) by the font files.\n\n        Subsets for which none of the codepoints are supported will cause the\n        check to FAIL.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check for codepoints not covered by METADATA subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unreachable_subsetting>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following codepoints supported by the font are not covered by\n    any subsets defined in the font's metadata file, and will never\n    be served. You can solve this by either manually adding additional\n    subset declarations to METADATA.pb, or by editing the glyphset\n    definitions.\n\n * U+0250 LATIN SMALL LETTER TURNED A: not included in any glyphset definition\n * U+0251 LATIN SMALL LETTER ALPHA: not included in any glyphset definition\n * U+0252 LATIN SMALL LETTER TURNED ALPHA: not included in any glyphset definition\n * U+0253 LATIN SMALL LETTER B WITH HOOK: not included in any glyphset definition\n * U+0254 LATIN SMALL LETTER OPEN O: not included in any glyphset definition\n * U+0255 LATIN SMALL LETTER C WITH CURL: not included in any glyphset definition\n * U+0256 LATIN SMALL LETTER D WITH TAIL: not included in any glyphset definition\n * U+0257 LATIN SMALL LETTER D WITH HOOK: not included in any glyphset definition\n * U+0258 LATIN SMALL LETTER REVERSED E: not included in any glyphset definition\n * U+025A LATIN SMALL LETTER SCHWA WITH HOOK: not included in any glyphset definition\n * U+025B LATIN SMALL LETTER OPEN E: not included in any glyphset definition\n * U+025C LATIN SMALL LETTER REVERSED OPEN E: not included in any glyphset definition\n * U+025D LATIN SMALL LETTER REVERSED OPEN E WITH HOOK: not included in any glyphset definition\n * U+025E LATIN SMALL LETTER CLOSED REVERSED OPEN E: not included in any glyphset definition\n * U+025F LATIN SMALL LETTER DOTLESS J WITH STROKE: not included in any glyphset definition\n * U+0260 LATIN SMALL LETTER G WITH HOOK: not included in any glyphset definition\n * U+0261 LATIN SMALL LETTER SCRIPT G: not included in any glyphset definition\n * U+0262 LATIN LETTER SMALL CAPITAL G: not included in any glyphset definition\n * U+0263 LATIN SMALL LETTER GAMMA: not included in any glyphset definition\n * U+0264 LATIN SMALL LETTER RAMS HORN: not included in any glyphset definition\n * U+0265 LATIN SMALL LETTER TURNED H: not included in any glyphset definition\n * U+0266 LATIN SMALL LETTER H WITH HOOK: not included in any glyphset definition\n * U+0267 LATIN SMALL LETTER HENG WITH HOOK: not included in any glyphset definition\n * U+0268 LATIN SMALL LETTER I WITH STROKE: not included in any glyphset definition\n * U+0269 LATIN SMALL LETTER IOTA: not included in any glyphset definition\n * U+026A LATIN LETTER SMALL CAPITAL I: not included in any glyphset definition\n * U+026B LATIN SMALL LETTER L WITH MIDDLE TILDE: not included in any glyphset definition\n * U+026C LATIN SMALL LETTER L WITH BELT: not included in any glyphset definition\n * U+026D LATIN SMALL LETTER L WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+026E LATIN SMALL LETTER LEZH: not included in any glyphset definition\n * U+026F LATIN SMALL LETTER TURNED M: not included in any glyphset definition\n * U+0270 LATIN SMALL LETTER TURNED M WITH LONG LEG: not included in any glyphset definition\n * U+0271 LATIN SMALL LETTER M WITH HOOK: not included in any glyphset definition\n * U+0272 LATIN SMALL LETTER N WITH LEFT HOOK: not included in any glyphset definition\n * U+0273 LATIN SMALL LETTER N WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0274 LATIN LETTER SMALL CAPITAL N: not included in any glyphset definition\n * U+0275 LATIN SMALL LETTER BARRED O: not included in any glyphset definition\n * U+0276 LATIN LETTER SMALL CAPITAL OE: not included in any glyphset definition\n * U+0277 LATIN SMALL LETTER CLOSED OMEGA: not included in any glyphset definition\n * U+0278 LATIN SMALL LETTER PHI: not included in any glyphset definition\n * U+0279 LATIN SMALL LETTER TURNED R: not included in any glyphset definition\n * U+027A LATIN SMALL LETTER TURNED R WITH LONG LEG: not included in any glyphset definition\n * U+027B LATIN SMALL LETTER TURNED R WITH HOOK: not included in any glyphset definition\n * U+027C LATIN SMALL LETTER R WITH LONG LEG: not included in any glyphset definition\n * U+027D LATIN SMALL LETTER R WITH TAIL: not included in any glyphset definition\n * U+027E LATIN SMALL LETTER R WITH FISHHOOK: not included in any glyphset definition\n * U+027F LATIN SMALL LETTER REVERSED R WITH FISHHOOK: not included in any glyphset definition\n * U+0280 LATIN LETTER SMALL CAPITAL R: not included in any glyphset definition\n * U+0281 LATIN LETTER SMALL CAPITAL INVERTED R: not included in any glyphset definition\n * U+0282 LATIN SMALL LETTER S WITH HOOK: not included in any glyphset definition\n * U+0283 LATIN SMALL LETTER ESH: not included in any glyphset definition\n * U+0284 LATIN SMALL LETTER DOTLESS J WITH STROKE AND HOOK: not included in any glyphset definition\n * U+0285 LATIN SMALL LETTER SQUAT REVERSED ESH: not included in any glyphset definition\n * U+0286 LATIN SMALL LETTER ESH WITH CURL: not included in any glyphset definition\n * U+0287 LATIN SMALL LETTER TURNED T: not included in any glyphset definition\n * U+0288 LATIN SMALL LETTER T WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0289 LATIN SMALL LETTER U BAR: not included in any glyphset definition\n * U+028A LATIN SMALL LETTER UPSILON: not included in any glyphset definition\n * U+028B LATIN SMALL LETTER V WITH HOOK: not included in any glyphset definition\n * U+028C LATIN SMALL LETTER TURNED V: not included in any glyphset definition\n * U+028D LATIN SMALL LETTER TURNED W: not included in any glyphset definition\n * U+028E LATIN SMALL LETTER TURNED Y: not included in any glyphset definition\n * U+028F LATIN LETTER SMALL CAPITAL Y: not included in any glyphset definition\n * U+0290 LATIN SMALL LETTER Z WITH RETROFLEX HOOK: not included in any glyphset definition\n * U+0291 LATIN SMALL LETTER Z WITH CURL: not included in any glyphset definition\n * U+0292 LATIN SMALL LETTER EZH: not included in any glyphset definition\n * U+0293 LATIN SMALL LETTER EZH WITH CURL: not included in any glyphset definition\n * U+0294 LATIN LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+0295 LATIN LETTER PHARYNGEAL VOICED FRICATIVE: not included in any glyphset definition\n * U+0296 LATIN LETTER INVERTED GLOTTAL STOP: not included in any glyphset definition\n * U+0297 LATIN LETTER STRETCHED C: not included in any glyphset definition\n * U+0298 LATIN LETTER BILABIAL CLICK: not included in any glyphset definition\n * U+0299 LATIN LETTER SMALL CAPITAL B: not included in any glyphset definition\n * U+029A LATIN SMALL LETTER CLOSED OPEN E: not included in any glyphset definition\n * U+029B LATIN LETTER SMALL CAPITAL G WITH HOOK: not included in any glyphset definition\n * U+029C LATIN LETTER SMALL CAPITAL H: not included in any glyphset definition\n * U+029D LATIN SMALL LETTER J WITH CROSSED-TAIL: not included in any glyphset definition\n * U+029E LATIN SMALL LETTER TURNED K: not included in any glyphset definition\n * U+029F LATIN LETTER SMALL CAPITAL L: not included in any glyphset definition\n * U+02A0 LATIN SMALL LETTER Q WITH HOOK: not included in any glyphset definition\n * U+02A1 LATIN LETTER GLOTTAL STOP WITH STROKE: not included in any glyphset definition\n * U+02A2 LATIN LETTER REVERSED GLOTTAL STOP WITH STROKE: not included in any glyphset definition\n * U+02A3 LATIN SMALL LETTER DZ DIGRAPH: not included in any glyphset definition\n * U+02A4 LATIN SMALL LETTER DEZH DIGRAPH: not included in any glyphset definition\n * U+02A5 LATIN SMALL LETTER DZ DIGRAPH WITH CURL: not included in any glyphset definition\n * U+02A6 LATIN SMALL LETTER TS DIGRAPH: not included in any glyphset definition\n * U+02A7 LATIN SMALL LETTER TESH DIGRAPH: not included in any glyphset definition\n * U+02A8 LATIN SMALL LETTER TC DIGRAPH WITH CURL: not included in any glyphset definition\n * U+02A9 LATIN SMALL LETTER FENG DIGRAPH: not included in any glyphset definition\n * U+02AA LATIN SMALL LETTER LS DIGRAPH: not included in any glyphset definition\n * U+02AB LATIN SMALL LETTER LZ DIGRAPH: not included in any glyphset definition\n * U+02AC LATIN LETTER BILABIAL PERCUSSIVE: not included in any glyphset definition\n * U+02AD LATIN LETTER BIDENTAL PERCUSSIVE: not included in any glyphset definition\n * U+02AE LATIN SMALL LETTER TURNED H WITH FISHHOOK: not included in any glyphset definition\n * U+02AF LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL: not included in any glyphset definition\n * U+02B0 MODIFIER LETTER SMALL H: not included in any glyphset definition\n * U+02B1 MODIFIER LETTER SMALL H WITH HOOK: not included in any glyphset definition\n * U+02B2 MODIFIER LETTER SMALL J: not included in any glyphset definition\n * U+02B3 MODIFIER LETTER SMALL R: not included in any glyphset definition\n * U+02B4 MODIFIER LETTER SMALL TURNED R: not included in any glyphset definition\n * U+02B5 MODIFIER LETTER SMALL TURNED R WITH HOOK: not included in any glyphset definition\n * U+02B6 MODIFIER LETTER SMALL CAPITAL INVERTED R: not included in any glyphset definition\n * U+02B7 MODIFIER LETTER SMALL W: not included in any glyphset definition\n * U+02B8 MODIFIER LETTER SMALL Y: not included in any glyphset definition\n * U+02B9 MODIFIER LETTER PRIME: not included in any glyphset definition\n * U+02BA MODIFIER LETTER DOUBLE PRIME: not included in any glyphset definition\n * U+02BD MODIFIER LETTER REVERSED COMMA: not included in any glyphset definition\n * U+02BE MODIFIER LETTER RIGHT HALF RING: not included in any glyphset definition\n * U+02BF MODIFIER LETTER LEFT HALF RING: not included in any glyphset definition\n * U+02C0 MODIFIER LETTER GLOTTAL STOP: not included in any glyphset definition\n * U+02C1 MODIFIER LETTER REVERSED GLOTTAL STOP: not included in any glyphset definition\n * U+02C2 MODIFIER LETTER LEFT ARROWHEAD: not included in any glyphset definition\n * U+02C3 MODIFIER LETTER RIGHT ARROWHEAD: not included in any glyphset definition\n * U+02C4 MODIFIER LETTER UP ARROWHEAD: not included in any glyphset definition\n * U+02C5 MODIFIER LETTER DOWN ARROWHEAD: not included in any glyphset definition\n * U+02C7 CARON: try adding one of: canadian-aboriginal, tifinagh\n * U+02C8 MODIFIER LETTER VERTICAL LINE: not included in any glyphset definition\n * U+02C9 MODIFIER LETTER MACRON: not included in any glyphset definition\n * U+02CA MODIFIER LETTER ACUTE ACCENT: not included in any glyphset definition\n * U+02CB MODIFIER LETTER GRAVE ACCENT: not included in any glyphset definition\n * U+02CC MODIFIER LETTER LOW VERTICAL LINE: not included in any glyphset definition\n * U+02CD MODIFIER LETTER LOW MACRON: try adding lisu\n * U+02CE MODIFIER LETTER LOW GRAVE ACCENT: not included in any glyphset definition\n * U+02CF MODIFIER LETTER LOW ACUTE ACCENT: not included in any glyphset definition\n * U+02D0 MODIFIER LETTER TRIANGULAR COLON: not included in any glyphset definition\n * U+02D1 MODIFIER LETTER HALF TRIANGULAR COLON: not included in any glyphset definition\n * U+02D2 MODIFIER LETTER CENTRED RIGHT HALF RING: not included in any glyphset definition\n * U+02D3 MODIFIER LETTER CENTRED LEFT HALF RING: not included in any glyphset definition\n * U+02D4 MODIFIER LETTER UP TACK: not included in any glyphset definition\n * U+02D5 MODIFIER LETTER DOWN TACK: not included in any glyphset definition\n * U+02D6 MODIFIER LETTER PLUS SIGN: not included in any glyphset definition\n * U+02D7 MODIFIER LETTER MINUS SIGN: not included in any glyphset definition\n * U+02D8 BREVE: try adding canadian-aboriginal\n * U+02D9 DOT ABOVE: try adding canadian-aboriginal\n * U+02DB OGONEK: try adding canadian-aboriginal\n * U+02DD DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+02DE MODIFIER LETTER RHOTIC HOOK: not included in any glyphset definition\n * U+02DF MODIFIER LETTER CROSS ACCENT: not included in any glyphset definition\n * U+02E0 MODIFIER LETTER SMALL GAMMA: not included in any glyphset definition\n * U+02E1 MODIFIER LETTER SMALL L: not included in any glyphset definition\n * U+02E2 MODIFIER LETTER SMALL S: not included in any glyphset definition\n * U+02E3 MODIFIER LETTER SMALL X: not included in any glyphset definition\n * U+02E4 MODIFIER LETTER SMALL REVERSED GLOTTAL STOP: not included in any glyphset definition\n * U+02E5 MODIFIER LETTER EXTRA-HIGH TONE BAR: not included in any glyphset definition\n * U+02E6 MODIFIER LETTER HIGH TONE BAR: not included in any glyphset definition\n * U+02E7 MODIFIER LETTER MID TONE BAR: not included in any glyphset definition\n * U+02E8 MODIFIER LETTER LOW TONE BAR: not included in any glyphset definition\n * U+02E9 MODIFIER LETTER EXTRA-LOW TONE BAR: not included in any glyphset definition\n * U+02EA MODIFIER LETTER YIN DEPARTING TONE MARK: not included in any glyphset definition\n * U+02EB MODIFIER LETTER YANG DEPARTING TONE MARK: not included in any glyphset definition\n * U+02EC MODIFIER LETTER VOICING: not included in any glyphset definition\n * U+02ED MODIFIER LETTER UNASPIRATED: not included in any glyphset definition\n * U+02EE MODIFIER LETTER DOUBLE APOSTROPHE: not included in any glyphset definition\n * U+02EF MODIFIER LETTER LOW DOWN ARROWHEAD: not included in any glyphset definition\n * U+02F0 MODIFIER LETTER LOW UP ARROWHEAD: not included in any glyphset definition\n * U+02F1 MODIFIER LETTER LOW LEFT ARROWHEAD: not included in any glyphset definition\n * U+02F2 MODIFIER LETTER LOW RIGHT ARROWHEAD: not included in any glyphset definition\n * U+02F3 MODIFIER LETTER LOW RING: not included in any glyphset definition\n * U+02F4 MODIFIER LETTER MIDDLE GRAVE ACCENT: not included in any glyphset definition\n * U+02F5 MODIFIER LETTER MIDDLE DOUBLE GRAVE ACCENT: not included in any glyphset definition\n * U+02F6 MODIFIER LETTER MIDDLE DOUBLE ACUTE ACCENT: not included in any glyphset definition\n * U+02F7 MODIFIER LETTER LOW TILDE: not included in any glyphset definition\n * U+02F8 MODIFIER LETTER RAISED COLON: not included in any glyphset definition\n * U+02F9 MODIFIER LETTER BEGIN HIGH TONE: not included in any glyphset definition\n * U+02FA MODIFIER LETTER END HIGH TONE: not included in any glyphset definition\n * U+02FB MODIFIER LETTER BEGIN LOW TONE: not included in any glyphset definition\n * U+02FC MODIFIER LETTER END LOW TONE: not included in any glyphset definition\n * U+02FD MODIFIER LETTER SHELF: not included in any glyphset definition\n * U+02FE MODIFIER LETTER OPEN SHELF: not included in any glyphset definition\n * U+02FF MODIFIER LETTER LOW LEFT ARROW: not included in any glyphset definition\n * U+0300 COMBINING GRAVE ACCENT: try adding one of: tai-le, coptic, cherokee\n * U+0301 COMBINING ACUTE ACCENT: try adding one of: tifinagh, tai-le, coptic, cherokee\n * U+0302 COMBINING CIRCUMFLEX ACCENT: try adding one of: tifinagh, coptic, cherokee\n * U+0303 COMBINING TILDE: not included in any glyphset definition\n * U+0304 COMBINING MACRON: try adding one of: gothic, tifinagh, coptic, cherokee\n * U+0305 COMBINING OVERLINE: try adding one of: gothic, coptic\n * U+0306 COMBINING BREVE: try adding tifinagh\n * U+0307 COMBINING DOT ABOVE: try adding one of: canadian-aboriginal, coptic, tai-le, tifinagh, malayalam\n * U+0308 COMBINING DIAERESIS: try adding one of: gothic, tai-le, coptic\n * U+0309 COMBINING HOOK ABOVE: try adding tifinagh\n * U+030A COMBINING RING ABOVE: not included in any glyphset definition\n * U+030B COMBINING DOUBLE ACUTE ACCENT: try adding cherokee\n * U+030C COMBINING CARON: try adding one of: tai-le, cherokee\n * U+030D COMBINING VERTICAL LINE ABOVE: not included in any glyphset definition\n * U+030E COMBINING DOUBLE VERTICAL LINE ABOVE: not included in any glyphset definition\n * U+030F COMBINING DOUBLE GRAVE ACCENT: not included in any glyphset definition\n * U+0310 COMBINING CANDRABINDU: not included in any glyphset definition\n * U+0311 COMBINING INVERTED BREVE: try adding coptic\n * U+0312 COMBINING TURNED COMMA ABOVE: not included in any glyphset definition\n * U+0313 COMBINING COMMA ABOVE: not included in any glyphset definition\n * U+0314 COMBINING REVERSED COMMA ABOVE: not included in any glyphset definition\n * U+0315 COMBINING COMMA ABOVE RIGHT: not included in any glyphset definition\n * U+0316 COMBINING GRAVE ACCENT BELOW: not included in any glyphset definition\n * U+0317 COMBINING ACUTE ACCENT BELOW: not included in any glyphset definition\n * U+0318 COMBINING LEFT TACK BELOW: not included in any glyphset definition\n * U+0319 COMBINING RIGHT TACK BELOW: not included in any glyphset definition\n * U+031A COMBINING LEFT ANGLE ABOVE: not included in any glyphset definition\n * U+031B COMBINING HORN: not included in any glyphset definition\n * U+031C COMBINING LEFT HALF RING BELOW: not included in any glyphset definition\n * U+031D COMBINING UP TACK BELOW: not included in any glyphset definition\n * U+031E COMBINING DOWN TACK BELOW: not included in any glyphset definition\n * U+031F COMBINING PLUS SIGN BELOW: not included in any glyphset definition\n * U+0320 COMBINING MINUS SIGN BELOW: not included in any glyphset definition\n * U+0321 COMBINING PALATALIZED HOOK BELOW: not included in any glyphset definition\n * U+0322 COMBINING RETROFLEX HOOK BELOW: not included in any glyphset definition\n * U+0323 COMBINING DOT BELOW: try adding one of: tifinagh, coptic, cherokee, malayalam\n * U+0324 COMBINING DIAERESIS BELOW: try adding cherokee\n * U+0325 COMBINING RING BELOW: not included in any glyphset definition\n * U+0326 COMBINING COMMA BELOW: not included in any glyphset definition\n * U+0327 COMBINING CEDILLA: not included in any glyphset definition\n * U+0328 COMBINING OGONEK: not included in any glyphset definition\n * U+0329 COMBINING VERTICAL LINE BELOW: not included in any glyphset definition\n * U+032A COMBINING BRIDGE BELOW: not included in any glyphset definition\n * U+032B COMBINING INVERTED DOUBLE ARCH BELOW: not included in any glyphset definition\n * U+032C COMBINING CARON BELOW: not included in any glyphset definition\n * U+032D COMBINING CIRCUMFLEX ACCENT BELOW: not included in any glyphset definition\n * U+032E COMBINING BREVE BELOW: not included in any glyphset definition\n * U+032F COMBINING INVERTED BREVE BELOW: not included in any glyphset definition\n * U+0330 COMBINING TILDE BELOW: try adding cherokee\n * U+0331 COMBINING MACRON BELOW: try adding one of: gothic, tifinagh, cherokee\n * U+0332 COMBINING LOW LINE: not included in any glyphset definition\n * U+0333 COMBINING DOUBLE LOW LINE: not included in any glyphset definition\n * U+0334 COMBINING TILDE OVERLAY: not included in any glyphset definition\n * U+0335 COMBINING SHORT STROKE OVERLAY: not included in any glyphset definition\n * U+0336 COMBINING LONG STROKE OVERLAY: not included in any glyphset definition\n * U+0337 COMBINING SHORT SOLIDUS OVERLAY: not included in any glyphset definition\n * U+0338 COMBINING LONG SOLIDUS OVERLAY: not included in any glyphset definition\n * U+0339 COMBINING RIGHT HALF RING BELOW: not included in any glyphset definition\n * U+033A COMBINING INVERTED BRIDGE BELOW: not included in any glyphset definition\n * U+033B COMBINING SQUARE BELOW: not included in any glyphset definition\n * U+033C COMBINING SEAGULL BELOW: not included in any glyphset definition\n * U+033D COMBINING X ABOVE: not included in any glyphset definition\n * U+033E COMBINING VERTICAL TILDE: not included in any glyphset definition\n * U+033F COMBINING DOUBLE OVERLINE: try adding coptic\n * U+0340 COMBINING GRAVE TONE MARK: not included in any glyphset definition\n * U+0341 COMBINING ACUTE TONE MARK: not included in any glyphset definition\n * U+0342 COMBINING GREEK PERISPOMENI: not included in any glyphset definition\n * U+0343 COMBINING GREEK KORONIS: not included in any glyphset definition\n * U+0344 COMBINING GREEK DIALYTIKA TONOS: not included in any glyphset definition\n * U+0345 COMBINING GREEK YPOGEGRAMMENI: not included in any glyphset definition\n * U+0346 COMBINING BRIDGE ABOVE: not included in any glyphset definition\n * U+0347 COMBINING EQUALS SIGN BELOW: not included in any glyphset definition\n * U+0348 COMBINING DOUBLE VERTICAL LINE BELOW: not included in any glyphset definition\n * U+0349 COMBINING LEFT ANGLE BELOW: not included in any glyphset definition\n * U+034A COMBINING NOT TILDE ABOVE: not included in any glyphset definition\n * U+034B COMBINING HOMOTHETIC ABOVE: not included in any glyphset definition\n * U+034C COMBINING ALMOST EQUAL TO ABOVE: not included in any glyphset definition\n * U+034D COMBINING LEFT RIGHT ARROW BELOW: not included in any glyphset definition\n * U+034E COMBINING UPWARDS ARROW BELOW: not included in any glyphset definition\n * U+034F COMBINING GRAPHEME JOINER: not included in any glyphset definition\n * U+0350 COMBINING RIGHT ARROWHEAD ABOVE: not included in any glyphset definition\n * U+0351 COMBINING LEFT HALF RING ABOVE: not included in any glyphset definition\n * U+0352 COMBINING FERMATA: not included in any glyphset definition\n * U+0353 COMBINING X BELOW: not included in any glyphset definition\n * U+0354 COMBINING LEFT ARROWHEAD BELOW: not included in any glyphset definition\n * U+0355 COMBINING RIGHT ARROWHEAD BELOW: not included in any glyphset definition\n * U+0356 COMBINING RIGHT ARROWHEAD AND UP ARROWHEAD BELOW: not included in any glyphset definition\n * U+0357 COMBINING RIGHT HALF RING ABOVE: not included in any glyphset definition\n * U+0358 COMBINING DOT ABOVE RIGHT: not included in any glyphset definition\n * U+0359 COMBINING ASTERISK BELOW: not included in any glyphset definition\n * U+035A COMBINING DOUBLE RING BELOW: not included in any glyphset definition\n * U+035B COMBINING ZIGZAG ABOVE: not included in any glyphset definition\n * U+035C COMBINING DOUBLE BREVE BELOW: not included in any glyphset definition\n * U+035D COMBINING DOUBLE BREVE: not included in any glyphset definition\n * U+035E COMBINING DOUBLE MACRON: try adding coptic\n * U+035F COMBINING DOUBLE MACRON BELOW: not included in any glyphset definition\n * U+0360 COMBINING DOUBLE TILDE: not included in any glyphset definition\n * U+0361 COMBINING DOUBLE INVERTED BREVE: try adding coptic\n * U+0362 COMBINING DOUBLE RIGHTWARDS ARROW BELOW: not included in any glyphset definition\n * U+0363 COMBINING LATIN SMALL LETTER A: not included in any glyphset definition\n * U+0364 COMBINING LATIN SMALL LETTER E: not included in any glyphset definition\n * U+0365 COMBINING LATIN SMALL LETTER I: not included in any glyphset definition\n * U+0366 COMBINING LATIN SMALL LETTER O: not included in any glyphset definition\n * U+0367 COMBINING LATIN SMALL LETTER U: not included in any glyphset definition\n * U+0368 COMBINING LATIN SMALL LETTER C: not included in any glyphset definition\n * U+0369 COMBINING LATIN SMALL LETTER D: not included in any glyphset definition\n * U+036A COMBINING LATIN SMALL LETTER H: not included in any glyphset definition\n * U+036B COMBINING LATIN SMALL LETTER M: not included in any glyphset definition\n * U+036C COMBINING LATIN SMALL LETTER R: not included in any glyphset definition\n * U+036D COMBINING LATIN SMALL LETTER T: not included in any glyphset definition\n * U+036E COMBINING LATIN SMALL LETTER V: not included in any glyphset definition\n * U+036F COMBINING LATIN SMALL LETTER X: not included in any glyphset definition\n * U+0485 COMBINING CYRILLIC DASIA PNEUMATA: try adding cyrillic-ext\n * U+0486 COMBINING CYRILLIC PSILI PNEUMATA: try adding cyrillic-ext\n * U+0591 HEBREW ACCENT ETNAHTA: not included in any glyphset definition\n * U+0592 HEBREW ACCENT SEGOL: not included in any glyphset definition\n * U+0593 HEBREW ACCENT SHALSHELET: not included in any glyphset definition\n * U+0594 HEBREW ACCENT ZAQEF QATAN: not included in any glyphset definition\n * U+0595 HEBREW ACCENT ZAQEF GADOL: not included in any glyphset definition\n * U+0596 HEBREW ACCENT TIPEHA: not included in any glyphset definition\n * U+0597 HEBREW ACCENT REVIA: not included in any glyphset definition\n * U+0598 HEBREW ACCENT ZARQA: not included in any glyphset definition\n * U+0599 HEBREW ACCENT PASHTA: not included in any glyphset definition\n * U+059A HEBREW ACCENT YETIV: not included in any glyphset definition\n * U+059B HEBREW ACCENT TEVIR: not included in any glyphset definition\n * U+059C HEBREW ACCENT GERESH: not included in any glyphset definition\n * U+059D HEBREW ACCENT GERESH MUQDAM: not included in any glyphset definition\n * U+059E HEBREW ACCENT GERSHAYIM: not included in any glyphset definition\n * U+059F HEBREW ACCENT QARNEY PARA: not included in any glyphset definition\n * U+05A0 HEBREW ACCENT TELISHA GEDOLA: not included in any glyphset definition\n * U+05A1 HEBREW ACCENT PAZER: not included in any glyphset definition\n * U+05A2 HEBREW ACCENT ATNAH HAFUKH: not included in any glyphset definition\n * U+05A3 HEBREW ACCENT MUNAH: not included in any glyphset definition\n * U+05A4 HEBREW ACCENT MAHAPAKH: not included in any glyphset definition\n * U+05A5 HEBREW ACCENT MERKHA: not included in any glyphset definition\n * U+05A6 HEBREW ACCENT MERKHA KEFULA: not included in any glyphset definition\n * U+05A7 HEBREW ACCENT DARGA: not included in any glyphset definition\n * U+05A8 HEBREW ACCENT QADMA: not included in any glyphset definition\n * U+05A9 HEBREW ACCENT TELISHA QETANA: not included in any glyphset definition\n * U+05AA HEBREW ACCENT YERAH BEN YOMO: not included in any glyphset definition\n * U+05AB HEBREW ACCENT OLE: not included in any glyphset definition\n * U+05AC HEBREW ACCENT ILUY: not included in any glyphset definition\n * U+05AD HEBREW ACCENT DEHI: not included in any glyphset definition\n * U+05AE HEBREW ACCENT ZINOR: not included in any glyphset definition\n * U+05AF HEBREW MARK MASORA CIRCLE: not included in any glyphset definition\n * U+05BD HEBREW POINT METEG: not included in any glyphset definition\n * U+05BF HEBREW POINT RAFE: not included in any glyphset definition\n * U+05C4 HEBREW MARK UPPER DOT: not included in any glyphset definition\n * U+05C5 HEBREW MARK LOWER DOT: not included in any glyphset definition\n * U+05C6 HEBREW PUNCTUATION NUN HAFUKHA: not included in any glyphset definition\n * U+05F0 HEBREW LIGATURE YIDDISH DOUBLE VAV: not included in any glyphset definition\n * U+05F1 HEBREW LIGATURE YIDDISH VAV YOD: not included in any glyphset definition\n * U+05F2 HEBREW LIGATURE YIDDISH DOUBLE YOD: not included in any glyphset definition\n * U+0660 ARABIC-INDIC DIGIT ZERO: try adding one of: thaana, arabic\n * U+0661 ARABIC-INDIC DIGIT ONE: try adding one of: thaana, arabic\n * U+0662 ARABIC-INDIC DIGIT TWO: try adding one of: thaana, arabic\n * U+0663 ARABIC-INDIC DIGIT THREE: try adding one of: thaana, arabic\n * U+0664 ARABIC-INDIC DIGIT FOUR: try adding one of: thaana, arabic\n * U+0665 ARABIC-INDIC DIGIT FIVE: try adding one of: thaana, arabic\n * U+0666 ARABIC-INDIC DIGIT SIX: try adding one of: thaana, arabic\n * U+0667 ARABIC-INDIC DIGIT SEVEN: try adding one of: thaana, arabic\n * U+0668 ARABIC-INDIC DIGIT EIGHT: try adding one of: thaana, arabic\n * U+0669 ARABIC-INDIC DIGIT NINE: try adding one of: thaana, arabic\n * U+10FB GEORGIAN PARAGRAPH SEPARATOR: not included in any glyphset definition\n * U+16A0 RUNIC LETTER FEHU FEOH FE F: try adding runic\n * U+16A1 RUNIC LETTER V: try adding runic\n * U+16A2 RUNIC LETTER URUZ UR U: try adding runic\n * U+16A3 RUNIC LETTER YR: try adding runic\n * U+16A4 RUNIC LETTER Y: try adding runic\n * U+16A5 RUNIC LETTER W: try adding runic\n * U+16A6 RUNIC LETTER THURISAZ THURS THORN: try adding runic\n * U+16A7 RUNIC LETTER ETH: try adding runic\n * U+16A8 RUNIC LETTER ANSUZ A: try adding runic\n * U+16A9 RUNIC LETTER OS O: try adding runic\n * U+16AA RUNIC LETTER AC A: try adding runic\n * U+16AB RUNIC LETTER AESC: try adding runic\n * U+16AC RUNIC LETTER LONG-BRANCH-OSS O: try adding runic\n * U+16AD RUNIC LETTER SHORT-TWIG-OSS O: try adding runic\n * U+16AE RUNIC LETTER O: try adding runic\n * U+16AF RUNIC LETTER OE: try adding runic\n * U+16B0 RUNIC LETTER ON: try adding runic\n * U+16B1 RUNIC LETTER RAIDO RAD REID R: try adding runic\n * U+16B2 RUNIC LETTER KAUNA: try adding runic\n * U+16B3 RUNIC LETTER CEN: try adding runic\n * U+16B4 RUNIC LETTER KAUN K: try adding runic\n * U+16B5 RUNIC LETTER G: try adding runic\n * U+16B6 RUNIC LETTER ENG: try adding runic\n * U+16B7 RUNIC LETTER GEBO GYFU G: try adding runic\n * U+16B8 RUNIC LETTER GAR: try adding runic\n * U+16B9 RUNIC LETTER WUNJO WYNN W: try adding runic\n * U+16BA RUNIC LETTER HAGLAZ H: try adding runic\n * U+16BB RUNIC LETTER HAEGL H: try adding runic\n * U+16BC RUNIC LETTER LONG-BRANCH-HAGALL H: try adding runic\n * U+16BD RUNIC LETTER SHORT-TWIG-HAGALL H: try adding runic\n * U+16BE RUNIC LETTER NAUDIZ NYD NAUD N: try adding runic\n * U+16BF RUNIC LETTER SHORT-TWIG-NAUD N: try adding runic\n * U+16C0 RUNIC LETTER DOTTED-N: try adding runic\n * U+16C1 RUNIC LETTER ISAZ IS ISS I: try adding runic\n * U+16C2 RUNIC LETTER E: try adding runic\n * U+16C3 RUNIC LETTER JERAN J: try adding runic\n * U+16C4 RUNIC LETTER GER: try adding runic\n * U+16C5 RUNIC LETTER LONG-BRANCH-AR AE: try adding runic\n * U+16C6 RUNIC LETTER SHORT-TWIG-AR A: try adding runic\n * U+16C7 RUNIC LETTER IWAZ EOH: try adding runic\n * U+16C8 RUNIC LETTER PERTHO PEORTH P: try adding runic\n * U+16C9 RUNIC LETTER ALGIZ EOLHX: try adding runic\n * U+16CA RUNIC LETTER SOWILO S: try adding runic\n * U+16CB RUNIC LETTER SIGEL LONG-BRANCH-SOL S: try adding runic\n * U+16CC RUNIC LETTER SHORT-TWIG-SOL S: try adding runic\n * U+16CD RUNIC LETTER C: try adding runic\n * U+16CE RUNIC LETTER Z: try adding runic\n * U+16CF RUNIC LETTER TIWAZ TIR TYR T: try adding runic\n * U+16D0 RUNIC LETTER SHORT-TWIG-TYR T: try adding runic\n * U+16D1 RUNIC LETTER D: try adding runic\n * U+16D2 RUNIC LETTER BERKANAN BEORC BJARKAN B: try adding runic\n * U+16D3 RUNIC LETTER SHORT-TWIG-BJARKAN B: try adding runic\n * U+16D4 RUNIC LETTER DOTTED-P: try adding runic\n * U+16D5 RUNIC LETTER OPEN-P: try adding runic\n * U+16D6 RUNIC LETTER EHWAZ EH E: try adding runic\n * U+16D7 RUNIC LETTER MANNAZ MAN M: try adding runic\n * U+16D8 RUNIC LETTER LONG-BRANCH-MADR M: try adding runic\n * U+16D9 RUNIC LETTER SHORT-TWIG-MADR M: try adding runic\n * U+16DA RUNIC LETTER LAUKAZ LAGU LOGR L: try adding runic\n * U+16DB RUNIC LETTER DOTTED-L: try adding runic\n * U+16DC RUNIC LETTER INGWAZ: try adding runic\n * U+16DD RUNIC LETTER ING: try adding runic\n * U+16DE RUNIC LETTER DAGAZ DAEG D: try adding runic\n * U+16DF RUNIC LETTER OTHALAN ETHEL O: try adding runic\n * U+16E0 RUNIC LETTER EAR: try adding runic\n * U+16E1 RUNIC LETTER IOR: try adding runic\n * U+16E2 RUNIC LETTER CWEORTH: try adding runic\n * U+16E3 RUNIC LETTER CALC: try adding runic\n * U+16E4 RUNIC LETTER CEALC: try adding runic\n * U+16E5 RUNIC LETTER STAN: try adding runic\n * U+16E6 RUNIC LETTER LONG-BRANCH-YR: try adding runic\n * U+16E7 RUNIC LETTER SHORT-TWIG-YR: try adding runic\n * U+16E8 RUNIC LETTER ICELANDIC-YR: try adding runic\n * U+16E9 RUNIC LETTER Q: try adding runic\n * U+16EA RUNIC LETTER X: try adding runic\n * U+16EB RUNIC SINGLE PUNCTUATION: try adding runic\n * U+16EC RUNIC MULTIPLE PUNCTUATION: try adding runic\n * U+16ED RUNIC CROSS PUNCTUATION: try adding runic\n * U+16EE RUNIC ARLAUG SYMBOL: try adding runic\n * U+16EF RUNIC TVIMADUR SYMBOL: try adding runic\n * U+16F0 RUNIC BELGTHOR SYMBOL: try adding runic\n * U+1D00 LATIN LETTER SMALL CAPITAL A: not included in any glyphset definition\n * U+1D01 LATIN LETTER SMALL CAPITAL AE: not included in any glyphset definition\n * U+1D04 LATIN LETTER SMALL CAPITAL C: not included in any glyphset definition\n * U+1D05 LATIN LETTER SMALL CAPITAL D: not included in any glyphset definition\n * U+1D06 LATIN LETTER SMALL CAPITAL ETH: not included in any glyphset definition\n * U+1D07 LATIN LETTER SMALL CAPITAL E: not included in any glyphset definition\n * U+1D0A LATIN LETTER SMALL CAPITAL J: not included in any glyphset definition\n * U+1D0B LATIN LETTER SMALL CAPITAL K: not included in any glyphset definition\n * U+1D0C LATIN LETTER SMALL CAPITAL L WITH STROKE: not included in any glyphset definition\n * U+1D0D LATIN LETTER SMALL CAPITAL M: not included in any glyphset definition\n * U+1D0F LATIN LETTER SMALL CAPITAL O: not included in any glyphset definition\n * U+1D18 LATIN LETTER SMALL CAPITAL P: not included in any glyphset definition\n * U+1D1B LATIN LETTER SMALL CAPITAL T: not included in any glyphset definition\n * U+1D1C LATIN LETTER SMALL CAPITAL U: not included in any glyphset definition\n * U+1D20 LATIN LETTER SMALL CAPITAL V: not included in any glyphset definition\n * U+1D21 LATIN LETTER SMALL CAPITAL W: not included in any glyphset definition\n * U+1D22 LATIN LETTER SMALL CAPITAL Z: not included in any glyphset definition\n * U+1D23 LATIN LETTER SMALL CAPITAL EZH: not included in any glyphset definition\n * U+1D35 MODIFIER LETTER CAPITAL I: not included in any glyphset definition\n * U+1D6B LATIN SMALL LETTER UE: not included in any glyphset definition\n * U+1D79 LATIN SMALL LETTER INSULAR G: not included in any glyphset definition\n * U+1DC0 COMBINING DOTTED GRAVE ACCENT: not included in any glyphset definition\n * U+1DC1 COMBINING DOTTED ACUTE ACCENT: not included in any glyphset definition\n * U+1DCD COMBINING DOUBLE CIRCUMFLEX ABOVE: try adding coptic\n * U+1DCE COMBINING OGONEK ABOVE: not included in any glyphset definition\n * U+1DCF COMBINING ZIGZAG BELOW: not included in any glyphset definition\n * U+1DD0 COMBINING IS BELOW: not included in any glyphset definition\n * U+1DD1 COMBINING UR ABOVE: not included in any glyphset definition\n * U+1DD2 COMBINING US ABOVE: not included in any glyphset definition\n * U+1DD3 COMBINING LATIN SMALL LETTER FLATTENED OPEN A ABOVE: not included in any glyphset definition\n * U+1DD4 COMBINING LATIN SMALL LETTER AE: not included in any glyphset definition\n * U+1DD5 COMBINING LATIN SMALL LETTER AO: not included in any glyphset definition\n * U+1DD6 COMBINING LATIN SMALL LETTER AV: not included in any glyphset definition\n * U+1DD7 COMBINING LATIN SMALL LETTER C CEDILLA: not included in any glyphset definition\n * U+1DD8 COMBINING LATIN SMALL LETTER INSULAR D: not included in any glyphset definition\n * U+1DD9 COMBINING LATIN SMALL LETTER ETH: not included in any glyphset definition\n * U+1DDA COMBINING LATIN SMALL LETTER G: not included in any glyphset definition\n * U+1DDB COMBINING LATIN LETTER SMALL CAPITAL G: not included in any glyphset definition\n * U+1DDC COMBINING LATIN SMALL LETTER K: not included in any glyphset definition\n * U+1DDD COMBINING LATIN SMALL LETTER L: not included in any glyphset definition\n * U+1DDE COMBINING LATIN LETTER SMALL CAPITAL L: not included in any glyphset definition\n * U+1DDF COMBINING LATIN LETTER SMALL CAPITAL M: not included in any glyphset definition\n * U+1DE0 COMBINING LATIN SMALL LETTER N: not included in any glyphset definition\n * U+1DE1 COMBINING LATIN LETTER SMALL CAPITAL N: not included in any glyphset definition\n * U+1DE2 COMBINING LATIN LETTER SMALL CAPITAL R: not included in any glyphset definition\n * U+1DE3 COMBINING LATIN SMALL LETTER R ROTUNDA: not included in any glyphset definition\n * U+1DE4 COMBINING LATIN SMALL LETTER S: not included in any glyphset definition\n * U+1DE5 COMBINING LATIN SMALL LETTER LONG S: not included in any glyphset definition\n * U+1DE6 COMBINING LATIN SMALL LETTER Z: not included in any glyphset definition\n * U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW: try adding vietnamese\n * U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW: try adding vietnamese\n * U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE: try adding vietnamese\n * U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE: try adding vietnamese\n * U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE: try adding vietnamese\n * U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE: try adding vietnamese\n * U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW: try adding vietnamese\n * U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW: try adding vietnamese\n * U+1EBC LATIN CAPITAL LETTER E WITH TILDE: try adding vietnamese\n * U+1EBD LATIN SMALL LETTER E WITH TILDE: try adding vietnamese\n * U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE: try adding vietnamese\n * U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE: try adding vietnamese\n * U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW: try adding vietnamese\n * U+1ECB LATIN SMALL LETTER I WITH DOT BELOW: try adding vietnamese\n * U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW: try adding vietnamese\n * U+1ECD LATIN SMALL LETTER O WITH DOT BELOW: try adding vietnamese\n * U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE: try adding vietnamese\n * U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE: try adding vietnamese\n * U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW: try adding vietnamese\n * U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW: try adding vietnamese\n * U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE: try adding vietnamese\n * U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE: try adding vietnamese\n * U+2000 EN QUAD: not included in any glyphset definition\n * U+2001 EM QUAD: not included in any glyphset definition\n * U+2003 EM SPACE: not included in any glyphset definition\n * U+2004 THREE-PER-EM SPACE: not included in any glyphset definition\n * U+2005 FOUR-PER-EM SPACE: not included in any glyphset definition\n * U+2006 SIX-PER-EM SPACE: not included in any glyphset definition\n * U+2007 FIGURE SPACE: not included in any glyphset definition\n * U+2008 PUNCTUATION SPACE: not included in any glyphset definition\n * U+200A HAIR SPACE: not included in any glyphset definition\n * U+200C ZERO WIDTH NON-JOINER: try adding one of: mongolian, phags-pa, bengali, arabic, tai-le, myanmar, saurashtra, thaana, hanunoo, tagbanwa, tagalog, tifinagh, gujarati, avestan, rejang, gurmukhi, devanagari, brahmi, thai, mandaic, oriya, tamil, tai-viet, kayah-li, tai-tham, telugu, cham, sundanese, batak, lepcha, balinese, javanese, khmer, limbu, tibetan, kaithi, new-tai-lue, buhid, chakma, sinhala, syloti-nagri, kannada, meetei-mayek, kharoshthi, buginese, malayalam\n * U+200D ZERO WIDTH JOINER: try adding one of: mongolian, phags-pa, bengali, arabic, tai-le, myanmar, saurashtra, thaana, hanunoo, tagbanwa, tagalog, tifinagh, gujarati, avestan, rejang, gurmukhi, devanagari, brahmi, thai, mandaic, oriya, tamil, tai-viet, kayah-li, tai-tham, telugu, cham, sundanese, batak, lepcha, balinese, javanese, limbu, tibetan, kaithi, new-tai-lue, buhid, chakma, sinhala, syloti-nagri, kannada, meetei-mayek, kharoshthi, buginese, malayalam\n * U+200E LEFT-TO-RIGHT MARK: try adding one of: phags-pa, thaana, arabic\n * U+200F RIGHT-TO-LEFT MARK: try adding one of: phags-pa, thaana\n * U+2010 HYPHEN: try adding one of: cham, coptic, sundanese, kaithi, lisu, arabic, syloti-nagri, kayah-li, kharoshthi\n * U+2011 NON-BREAKING HYPHEN: try adding one of: syloti-nagri, arabic\n * U+2012 FIGURE DASH: not included in any glyphset definition\n * U+2015 HORIZONTAL BAR: not included in any glyphset definition\n * U+2016 DOUBLE VERTICAL LINE: not included in any glyphset definition\n * U+201B SINGLE HIGH-REVERSED-9 QUOTATION MARK: not included in any glyphset definition\n * U+201F DOUBLE HIGH-REVERSED-9 QUOTATION MARK: not included in any glyphset definition\n * U+2021 DOUBLE DAGGER: not included in any glyphset definition\n * U+2023 TRIANGULAR BULLET: not included in any glyphset definition\n * U+2024 ONE DOT LEADER: try adding armenian\n * U+2025 TWO DOT LEADER: try adding phags-pa\n * U+2027 HYPHENATION POINT: not included in any glyphset definition\n * U+202F NARROW NO-BREAK SPACE: try adding mongolian\n * U+2030 PER MILLE SIGN: not included in any glyphset definition\n * U+2035 REVERSED PRIME: not included in any glyphset definition\n * U+2038 CARET: not included in any glyphset definition\n * U+203B REFERENCE MARK: not included in any glyphset definition\n * U+203E OVERLINE: not included in any glyphset definition\n * U+203F UNDERTIE: not included in any glyphset definition\n * U+2040 CHARACTER TIE: not included in any glyphset definition\n * U+2041 CARET INSERTION POINT: not included in any glyphset definition\n * U+2042 ASTERISM: not included in any glyphset definition\n * U+2045 LEFT SQUARE BRACKET WITH QUILL: not included in any glyphset definition\n * U+2046 RIGHT SQUARE BRACKET WITH QUILL: not included in any glyphset definition\n * U+204A TIRONIAN SIGN ET: not included in any glyphset definition\n * U+204B REVERSED PILCROW SIGN: not included in any glyphset definition\n * U+2058 FOUR DOT PUNCTUATION: try adding coptic\n * U+2059 FIVE DOT PUNCTUATION: try adding coptic\n * U+205A TWO DOT PUNCTUATION: not included in any glyphset definition\n * U+205B FOUR DOT MARK: not included in any glyphset definition\n * U+205C DOTTED CROSS: not included in any glyphset definition\n * U+205D TRICOLON: not included in any glyphset definition\n * U+205E VERTICAL FOUR DOTS: not included in any glyphset definition\n * U+2070 SUPERSCRIPT ZERO: not included in any glyphset definition\n * U+2075 SUPERSCRIPT FIVE: not included in any glyphset definition\n * U+2076 SUPERSCRIPT SIX: not included in any glyphset definition\n * U+2077 SUPERSCRIPT SEVEN: not included in any glyphset definition\n * U+2078 SUPERSCRIPT EIGHT: not included in any glyphset definition\n * U+2079 SUPERSCRIPT NINE: not included in any glyphset definition\n * U+207A SUPERSCRIPT PLUS SIGN: not included in any glyphset definition\n * U+207B SUPERSCRIPT MINUS: not included in any glyphset definition\n * U+207C SUPERSCRIPT EQUALS SIGN: not included in any glyphset definition\n * U+207D SUPERSCRIPT LEFT PARENTHESIS: not included in any glyphset definition\n * U+207E SUPERSCRIPT RIGHT PARENTHESIS: not included in any glyphset definition\n * U+207F SUPERSCRIPT LATIN SMALL LETTER N: not included in any glyphset definition\n * U+2080 SUBSCRIPT ZERO: not included in any glyphset definition\n * U+2081 SUBSCRIPT ONE: not included in any glyphset definition\n * U+2082 SUBSCRIPT TWO: not included in any glyphset definition\n * U+2083 SUBSCRIPT THREE: not included in any glyphset definition\n * U+2084 SUBSCRIPT FOUR: not included in any glyphset definition\n * U+2085 SUBSCRIPT FIVE: not included in any glyphset definition\n * U+2086 SUBSCRIPT SIX: not included in any glyphset definition\n * U+2087 SUBSCRIPT SEVEN: not included in any glyphset definition\n * U+2088 SUBSCRIPT EIGHT: not included in any glyphset definition\n * U+2089 SUBSCRIPT NINE: not included in any glyphset definition\n * U+208A SUBSCRIPT PLUS SIGN: not included in any glyphset definition\n * U+208B SUBSCRIPT MINUS: not included in any glyphset definition\n * U+208C SUBSCRIPT EQUALS SIGN: not included in any glyphset definition\n * U+208D SUBSCRIPT LEFT PARENTHESIS: not included in any glyphset definition\n * U+208E SUBSCRIPT RIGHT PARENTHESIS: not included in any glyphset definition\n * U+2108 SCRUPLE: not included in any glyphset definition\n * U+210C BLACK-LETTER CAPITAL H: not included in any glyphset definition\n * U+2112 SCRIPT CAPITAL L: not included in any glyphset definition\n * U+2114 L B BAR SYMBOL: not included in any glyphset definition\n * U+2116 NUMERO SIGN: try adding cyrillic\n * U+211E PRESCRIPTION TAKE: not included in any glyphset definition\n * U+211F RESPONSE: not included in any glyphset definition\n * U+2123 VERSICLE: not included in any glyphset definition\n * U+2125 OUNCE SIGN: not included in any glyphset definition\n * U+2126 OHM SIGN: not included in any glyphset definition\n * U+2127 INVERTED OHM SIGN: not included in any glyphset definition\n * U+212D BLACK-LETTER CAPITAL C: not included in any glyphset definition\n * U+2132 TURNED CAPITAL F: not included in any glyphset definition\n * U+2135 ALEF SYMBOL: not included in any glyphset definition\n * U+2180 ROMAN NUMERAL ONE THOUSAND C D: not included in any glyphset definition\n * U+2181 ROMAN NUMERAL FIVE THOUSAND: not included in any glyphset definition\n * U+2182 ROMAN NUMERAL TEN THOUSAND: not included in any glyphset definition\n * U+2183 ROMAN NUMERAL REVERSED ONE HUNDRED: not included in any glyphset definition\n * U+2184 LATIN SMALL LETTER REVERSED C: not included in any glyphset definition\n * U+2186 ROMAN NUMERAL FIFTY EARLY FORM: not included in any glyphset definition\n * U+2187 ROMAN NUMERAL FIFTY THOUSAND: not included in any glyphset definition\n * U+2188 ROMAN NUMERAL ONE HUNDRED THOUSAND: not included in any glyphset definition\n * U+2190 LEFTWARDS ARROW: not included in any glyphset definition\n * U+2192 RIGHTWARDS ARROW: not included in any glyphset definition\n * U+2194 LEFT RIGHT ARROW: not included in any glyphset definition\n * U+2195 UP DOWN ARROW: not included in any glyphset definition\n * U+2196 NORTH WEST ARROW: not included in any glyphset definition\n * U+2197 NORTH EAST ARROW: not included in any glyphset definition\n * U+2198 SOUTH EAST ARROW: not included in any glyphset definition\n * U+2199 SOUTH WEST ARROW: not included in any glyphset definition\n * U+21B6 ANTICLOCKWISE TOP SEMICIRCLE ARROW: not included in any glyphset definition\n * U+21B7 CLOCKWISE TOP SEMICIRCLE ARROW: not included in any glyphset definition\n * U+21BA ANTICLOCKWISE OPEN CIRCLE ARROW: not included in any glyphset definition\n * U+21BB CLOCKWISE OPEN CIRCLE ARROW: not included in any glyphset definition\n * U+2202 PARTIAL DIFFERENTIAL: not included in any glyphset definition\n * U+2206 INCREMENT: not included in any glyphset definition\n * U+220F N-ARY PRODUCT: not included in any glyphset definition\n * U+2211 N-ARY SUMMATION: not included in any glyphset definition\n * U+2219 BULLET OPERATOR: try adding tai-tham\n * U+221A SQUARE ROOT: not included in any glyphset definition\n * U+221E INFINITY: not included in any glyphset definition\n * U+2227 LOGICAL AND: not included in any glyphset definition\n * U+222B INTEGRAL: not included in any glyphset definition\n * U+2234 THEREFORE: not included in any glyphset definition\n * U+2235 BECAUSE: not included in any glyphset definition\n * U+2237 PROPORTION: not included in any glyphset definition\n * U+223B HOMOTHETIC: not included in any glyphset definition\n * U+223D REVERSED TILDE: not included in any glyphset definition\n * U+2248 ALMOST EQUAL TO: not included in any glyphset definition\n * U+224C ALL EQUAL TO: not included in any glyphset definition\n * U+2260 NOT EQUAL TO: not included in any glyphset definition\n * U+2264 LESS-THAN OR EQUAL TO: not included in any glyphset definition\n * U+2265 GREATER-THAN OR EQUAL TO: not included in any glyphset definition\n * U+2295 CIRCLED PLUS: not included in any glyphset definition\n * U+2297 CIRCLED TIMES: not included in any glyphset definition\n * U+22A5 UP TACK: not included in any glyphset definition\n * U+22C5 DOT OPERATOR: not included in any glyphset definition\n * U+22D7 GREATER-THAN WITH DOT: not included in any glyphset definition\n * U+22EE VERTICAL ELLIPSIS: not included in any glyphset definition\n * U+2300 DIAMETER SIGN: not included in any glyphset definition\n * U+2308 LEFT CEILING: not included in any glyphset definition\n * U+2309 RIGHT CEILING: not included in any glyphset definition\n * U+230A LEFT FLOOR: not included in any glyphset definition\n * U+230B RIGHT FLOOR: not included in any glyphset definition\n * U+2310 REVERSED NOT SIGN: not included in any glyphset definition\n * U+2318 PLACE OF INTEREST SIGN: not included in any glyphset definition\n * U+231C TOP LEFT CORNER: not included in any glyphset definition\n * U+231D TOP RIGHT CORNER: not included in any glyphset definition\n * U+231E BOTTOM LEFT CORNER: not included in any glyphset definition\n * U+231F BOTTOM RIGHT CORNER: not included in any glyphset definition\n * U+2325 OPTION KEY: not included in any glyphset definition\n * U+2329 LEFT-POINTING ANGLE BRACKET: not included in any glyphset definition\n * U+232A RIGHT-POINTING ANGLE BRACKET: not included in any glyphset definition\n * U+239B LEFT PARENTHESIS UPPER HOOK: not included in any glyphset definition\n * U+239C LEFT PARENTHESIS EXTENSION: not included in any glyphset definition\n * U+239D LEFT PARENTHESIS LOWER HOOK: not included in any glyphset definition\n * U+239E RIGHT PARENTHESIS UPPER HOOK: not included in any glyphset definition\n * U+239F RIGHT PARENTHESIS EXTENSION: not included in any glyphset definition\n * U+23A0 RIGHT PARENTHESIS LOWER HOOK: not included in any glyphset definition\n * U+23A7 LEFT CURLY BRACKET UPPER HOOK: not included in any glyphset definition\n * U+23A8 LEFT CURLY BRACKET MIDDLE PIECE: not included in any glyphset definition\n * U+23A9 LEFT CURLY BRACKET LOWER HOOK: not included in any glyphset definition\n * U+23AA CURLY BRACKET EXTENSION: not included in any glyphset definition\n * U+23AB RIGHT CURLY BRACKET UPPER HOOK: not included in any glyphset definition\n * U+23AC RIGHT CURLY BRACKET MIDDLE PIECE: not included in any glyphset definition\n * U+23AD RIGHT CURLY BRACKET LOWER HOOK: not included in any glyphset definition\n * U+23D1 METRICAL BREVE: not included in any glyphset definition\n * U+23D2 METRICAL LONG OVER SHORT: not included in any glyphset definition\n * U+23D3 METRICAL SHORT OVER LONG: not included in any glyphset definition\n * U+23D4 METRICAL LONG OVER TWO SHORTS: not included in any glyphset definition\n * U+23D5 METRICAL TWO SHORTS OVER LONG: not included in any glyphset definition\n * U+23D6 METRICAL TWO SHORTS JOINED: not included in any glyphset definition\n * U+23D7 METRICAL TRISEME: not included in any glyphset definition\n * U+23D8 METRICAL TETRASEME: not included in any glyphset definition\n * U+23D9 METRICAL PENTASEME: not included in any glyphset definition\n * U+2510 BOX DRAWINGS LIGHT DOWN AND LEFT: not included in any glyphset definition\n * U+25A0 BLACK SQUARE: not included in any glyphset definition\n * U+25A1 WHITE SQUARE: not included in any glyphset definition\n * U+25AA BLACK SMALL SQUARE: not included in any glyphset definition\n * U+25AB WHITE SMALL SQUARE: not included in any glyphset definition\n * U+25AD WHITE RECTANGLE: not included in any glyphset definition\n * U+25B6 BLACK RIGHT-POINTING TRIANGLE: not included in any glyphset definition\n * U+25B7 WHITE RIGHT-POINTING TRIANGLE: not included in any glyphset definition\n * U+25B9 WHITE RIGHT-POINTING SMALL TRIANGLE: not included in any glyphset definition\n * U+25C1 WHITE LEFT-POINTING TRIANGLE: not included in any glyphset definition\n * U+25C3 WHITE LEFT-POINTING SMALL TRIANGLE: not included in any glyphset definition\n * U+25CA LOZENGE: not included in any glyphset definition\n * U+25CB WHITE CIRCLE: not included in any glyphset definition\n * U+25CF BLACK CIRCLE: not included in any glyphset definition\n * U+25E1 LOWER HALF CIRCLE: not included in any glyphset definition\n * U+25EF LARGE CIRCLE: not included in any glyphset definition\n * U+2605 BLACK STAR: not included in any glyphset definition\n * U+2609 SUN: not included in any glyphset definition\n * U+260A ASCENDING NODE: not included in any glyphset definition\n * U+260B DESCENDING NODE: not included in any glyphset definition\n * U+260C CONJUNCTION: not included in any glyphset definition\n * U+260D OPPOSITION: not included in any glyphset definition\n * U+2627 CHI RHO: not included in any glyphset definition\n * U+2629 CROSS OF JERUSALEM: not included in any glyphset definition\n * U+263D FIRST QUARTER MOON: not included in any glyphset definition\n * U+263E LAST QUARTER MOON: not included in any glyphset definition\n * U+263F MERCURY: not included in any glyphset definition\n * U+2640 FEMALE SIGN: not included in any glyphset definition\n * U+2641 EARTH: not included in any glyphset definition\n * U+2642 MALE SIGN: not included in any glyphset definition\n * U+2643 JUPITER: not included in any glyphset definition\n * U+2644 SATURN: not included in any glyphset definition\n * U+2645 URANUS: not included in any glyphset definition\n * U+2646 NEPTUNE: not included in any glyphset definition\n * U+2647 PLUTO: not included in any glyphset definition\n * U+2648 ARIES: not included in any glyphset definition\n * U+2649 TAURUS: not included in any glyphset definition\n * U+264A GEMINI: not included in any glyphset definition\n * U+264B CANCER: not included in any glyphset definition\n * U+264C LEO: not included in any glyphset definition\n * U+264D VIRGO: not included in any glyphset definition\n * U+264E LIBRA: not included in any glyphset definition\n * U+264F SCORPIUS: not included in any glyphset definition\n * U+2650 SAGITTARIUS: not included in any glyphset definition\n * U+2651 CAPRICORN: not included in any glyphset definition\n * U+2652 AQUARIUS: not included in any glyphset definition\n * U+2653 PISCES: not included in any glyphset definition\n * U+271B OPEN CENTRE CROSS: not included in any glyphset definition\n * U+271D LATIN CROSS: not included in any glyphset definition\n * U+2731 HEAVY ASTERISK: not included in any glyphset definition\n * U+2733 EIGHT SPOKED ASTERISK: not included in any glyphset definition\n * U+2734 EIGHT POINTED BLACK STAR: not included in any glyphset definition\n * U+2736 SIX POINTED BLACK STAR: not included in any glyphset definition\n * U+2766 FLORAL HEART: not included in any glyphset definition\n * U+2767 ROTATED FLORAL HEART BULLET: not included in any glyphset definition\n * U+27C0 THREE DIMENSIONAL ANGLE: not included in any glyphset definition\n * U+27C1 WHITE TRIANGLE CONTAINING SMALL WHITE TRIANGLE: not included in any glyphset definition\n * U+27C2 PERPENDICULAR: not included in any glyphset definition\n * U+27E6 MATHEMATICAL LEFT WHITE SQUARE BRACKET: not included in any glyphset definition\n * U+27E7 MATHEMATICAL RIGHT WHITE SQUARE BRACKET: not included in any glyphset definition\n * U+27E8 MATHEMATICAL LEFT ANGLE BRACKET: not included in any glyphset definition\n * U+27E9 MATHEMATICAL RIGHT ANGLE BRACKET: not included in any glyphset definition\n * U+27EA MATHEMATICAL LEFT DOUBLE ANGLE BRACKET: not included in any glyphset definition\n * U+27EB MATHEMATICAL RIGHT DOUBLE ANGLE BRACKET: not included in any glyphset definition\n * U+27EC MATHEMATICAL LEFT WHITE TORTOISE SHELL BRACKET: not included in any glyphset definition\n * U+27ED MATHEMATICAL RIGHT WHITE TORTOISE SHELL BRACKET: not included in any glyphset definition\n * U+27F2 ANTICLOCKWISE GAPPED CIRCLE ARROW: not included in any glyphset definition\n * U+27F3 CLOCKWISE GAPPED CIRCLE ARROW: not included in any glyphset definition\n * U+2938 RIGHT-SIDE ARC CLOCKWISE ARROW: not included in any glyphset definition\n * U+2939 LEFT-SIDE ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293A TOP ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293B BOTTOM ARC ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+293E LOWER RIGHT SEMICIRCULAR CLOCKWISE ARROW: not included in any glyphset definition\n * U+293F LOWER LEFT SEMICIRCULAR ANTICLOCKWISE ARROW: not included in any glyphset definition\n * U+2985 LEFT WHITE PARENTHESIS: not included in any glyphset definition\n * U+2986 RIGHT WHITE PARENTHESIS: not included in any glyphset definition\n * U+2AFD DOUBLE SOLIDUS OPERATOR: not included in any glyphset definition\n * U+2E00 RIGHT ANGLE SUBSTITUTION MARKER: not included in any glyphset definition\n * U+2E01 RIGHT ANGLE DOTTED SUBSTITUTION MARKER: not included in any glyphset definition\n * U+2E02 LEFT SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E03 RIGHT SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E04 LEFT DOTTED SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E05 RIGHT DOTTED SUBSTITUTION BRACKET: not included in any glyphset definition\n * U+2E06 RAISED INTERPOLATION MARKER: not included in any glyphset definition\n * U+2E07 RAISED DOTTED INTERPOLATION MARKER: not included in any glyphset definition\n * U+2E08 DOTTED TRANSPOSITION MARKER: not included in any glyphset definition\n * U+2E09 LEFT TRANSPOSITION BRACKET: not included in any glyphset definition\n * U+2E0A RIGHT TRANSPOSITION BRACKET: not included in any glyphset definition\n * U+2E0B RAISED SQUARE: not included in any glyphset definition\n * U+2E0C LEFT RAISED OMISSION BRACKET: not included in any glyphset definition\n * U+2E0D RIGHT RAISED OMISSION BRACKET: not included in any glyphset definition\n * U+2E0E EDITORIAL CORONIS: not included in any glyphset definition\n * U+2E0F PARAGRAPHOS: not included in any glyphset definition\n * U+2E10 FORKED PARAGRAPHOS: not included in any glyphset definition\n * U+2E11 REVERSED FORKED PARAGRAPHOS: not included in any glyphset definition\n * U+2E12 HYPODIASTOLE: not included in any glyphset definition\n * U+2E13 DOTTED OBELOS: not included in any glyphset definition\n * U+2E14 DOWNWARDS ANCORA: not included in any glyphset definition\n * U+2E15 UPWARDS ANCORA: not included in any glyphset definition\n * U+2E16 DOTTED RIGHT-POINTING ANGLE: not included in any glyphset definition\n * U+2E17 DOUBLE OBLIQUE HYPHEN: try adding coptic\n * U+2E19 PALM BRANCH: not included in any glyphset definition\n * U+2E1C LEFT LOW PARAPHRASE BRACKET: not included in any glyphset definition\n * U+2E1D RIGHT LOW PARAPHRASE BRACKET: not included in any glyphset definition\n * U+2E20 LEFT VERTICAL BAR WITH QUILL: not included in any glyphset definition\n * U+2E21 RIGHT VERTICAL BAR WITH QUILL: not included in any glyphset definition\n * U+2E22 TOP LEFT HALF BRACKET: not included in any glyphset definition\n * U+2E23 TOP RIGHT HALF BRACKET: not included in any glyphset definition\n * U+2E24 BOTTOM LEFT HALF BRACKET: not included in any glyphset definition\n * U+2E25 BOTTOM RIGHT HALF BRACKET: not included in any glyphset definition\n * U+2E26 LEFT SIDEWAYS U BRACKET: not included in any glyphset definition\n * U+2E27 RIGHT SIDEWAYS U BRACKET: not included in any glyphset definition\n * U+2E28 LEFT DOUBLE PARENTHESIS: not included in any glyphset definition\n * U+2E29 RIGHT DOUBLE PARENTHESIS: not included in any glyphset definition\n * U+2E2A TWO DOTS OVER ONE DOT PUNCTUATION: not included in any glyphset definition\n * U+2E2B ONE DOT OVER TWO DOTS PUNCTUATION: not included in any glyphset definition\n * U+2E2C SQUARED FOUR DOT PUNCTUATION: not included in any glyphset definition\n * U+2E2D FIVE DOT MARK: not included in any glyphset definition\n * U+2E2E REVERSED QUESTION MARK: not included in any glyphset definition\n * U+2E31 WORD SEPARATOR MIDDLE DOT: try adding one of: samaritan, avestan\n * U+3008 LEFT ANGLE BRACKET: try adding one of: phags-pa, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+3009 RIGHT ANGLE BRACKET: try adding one of: phags-pa, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+300A LEFT DOUBLE ANGLE BRACKET: try adding one of: mongolian, phags-pa, lisu, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+300B RIGHT DOUBLE ANGLE BRACKET: try adding one of: mongolian, phags-pa, lisu, yi, tai-le, japanese, chinese-traditional, chinese-simplified\n * U+300C LEFT CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+300D RIGHT CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+300E LEFT WHITE CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+300F RIGHT WHITE CORNER BRACKET: try adding one of: mongolian, phags-pa, yi, japanese, chinese-traditional, chinese-simplified\n * U+3016 LEFT WHITE LENTICULAR BRACKET: try adding one of: chinese-simplified, phags-pa, yi\n * U+3017 RIGHT WHITE LENTICULAR BRACKET: try adding one of: chinese-simplified, phags-pa, yi\n * U+301A LEFT WHITE SQUARE BRACKET: try adding one of: phags-pa, yi\n * U+301B RIGHT WHITE SQUARE BRACKET: try adding one of: phags-pa, yi\n * U+E004 : not included in any glyphset definition\n * U+E00A : not included in any glyphset definition\n * U+E010 : not included in any glyphset definition\n * U+E025 : not included in any glyphset definition\n * U+E02C : not included in any glyphset definition\n * U+E033 : not included in any glyphset definition\n * U+E034 : not included in any glyphset definition\n * U+E036 : not included in any glyphset definition\n * U+E03A : not included in any glyphset definition\n * U+E03D : not included in any glyphset definition\n * U+E03F : not included in any glyphset definition\n * U+E040 : not included in any glyphset definition\n * U+E041 : not included in any glyphset definition\n * U+E042 : not included in any glyphset definition\n * U+E043 : not included in any glyphset definition\n * U+E044 : not included in any glyphset definition\n * U+E066 : not included in any glyphset definition\n * U+E074 : not included in any glyphset definition\n * U+E075 : not included in any glyphset definition\n * U+E076 : not included in any glyphset definition\n * U+E077 : not included in any glyphset definition\n * U+E08F : not included in any glyphset definition\n * U+E099 : not included in any glyphset definition\n * U+E0B7 : not included in any glyphset definition\n * U+E0BC : not included in any glyphset definition\n * U+E0C3 : not included in any glyphset definition\n * U+E0C8 : not included in any glyphset definition\n * U+E0D1 : not included in any glyphset definition\n * U+E0E1 : not included in any glyphset definition\n * U+E0E8 : not included in any glyphset definition\n * U+E0E9 : not included in any glyphset definition\n * U+E0EA : not included in any glyphset definition\n * U+E0EB : not included in any glyphset definition\n * U+E0EC : not included in any glyphset definition\n * U+E0EE : not included in any glyphset definition\n * U+E0F0 : not included in any glyphset definition\n * U+E101 : not included in any glyphset definition\n * U+E116 : not included in any glyphset definition\n * U+E12A : not included in any glyphset definition\n * U+E135 : not included in any glyphset definition\n * U+E137 : not included in any glyphset definition\n * U+E13F : not included in any glyphset definition\n * U+E143 : not included in any glyphset definition\n * U+E150 : not included in any glyphset definition\n * U+E151 : not included in any glyphset definition\n * U+E152 : not included in any glyphset definition\n * U+E153 : not included in any glyphset definition\n * U+E154 : not included in any glyphset definition\n * U+E15C : not included in any glyphset definition\n * U+E162 : not included in any glyphset definition\n * U+E163 : not included in any glyphset definition\n * U+E168 : not included in any glyphset definition\n * U+E191 : not included in any glyphset definition\n * U+E192 : not included in any glyphset definition\n * U+E193 : not included in any glyphset definition\n * U+E194 : not included in any glyphset definition\n * U+E195 : not included in any glyphset definition\n * U+E197 : not included in any glyphset definition\n * U+E198 : not included in any glyphset definition\n * U+E199 : not included in any glyphset definition\n * U+E19B : not included in any glyphset definition\n * U+E19C : not included in any glyphset definition\n * U+E19E : not included in any glyphset definition\n * U+E1A0 : not included in any glyphset definition\n * U+E1A1 : not included in any glyphset definition\n * U+E1A2 : not included in any glyphset definition\n * U+E1A3 : not included in any glyphset definition\n * U+E1A5 : not included in any glyphset definition\n * U+E1A6 : not included in any glyphset definition\n * U+E1A9 : not included in any glyphset definition\n * U+E1AA : not included in any glyphset definition\n * U+E1AB : not included in any glyphset definition\n * U+E1AC : not included in any glyphset definition\n * U+E1AD : not included in any glyphset definition\n * U+E1AE : not included in any glyphset definition\n * U+E1AF : not included in any glyphset definition\n * U+E1B0 : not included in any glyphset definition\n * U+E1B1 : not included in any glyphset definition\n * U+E1B2 : not included in any glyphset definition\n * U+E1B3 : not included in any glyphset definition\n * U+E1B4 : not included in any glyphset definition\n * U+E1B5 : not included in any glyphset definition\n * U+E1B6 : not included in any glyphset definition\n * U+E1B7 : not included in any glyphset definition\n * U+E1B8 : not included in any glyphset definition\n * U+E1B9 : not included in any glyphset definition\n * U+E1BA : not included in any glyphset definition\n * U+E1BB : not included in any glyphset definition\n * U+E1BC : not included in any glyphset definition\n * U+E1BD : not included in any glyphset definition\n * U+E1BE : not included in any glyphset definition\n * U+E1BF : not included in any glyphset definition\n * U+E1C0 : not included in any glyphset definition\n * U+E1C1 : not included in any glyphset definition\n * U+E1C2 : not included in any glyphset definition\n * U+E1C3 : not included in any glyphset definition\n * U+E1C4 : not included in any glyphset definition\n * U+E1C5 : not included in any glyphset definition\n * U+E1C6 : not included in any glyphset definition\n * U+E1C7 : not included in any glyphset definition\n * U+E1C8 : not included in any glyphset definition\n * U+E1C9 : not included in any glyphset definition\n * U+E1CA : not included in any glyphset definition\n * U+E1CB : not included in any glyphset definition\n * U+E1CC : not included in any glyphset definition\n * U+E1CD : not included in any glyphset definition\n * U+E1CE : not included in any glyphset definition\n * U+E1CF : not included in any glyphset definition\n * U+E1D1 : not included in any glyphset definition\n * U+E1D2 : not included in any glyphset definition\n * U+E1DC : not included in any glyphset definition\n * U+E208 : not included in any glyphset definition\n * U+E20C : not included in any glyphset definition\n * U+E21B : not included in any glyphset definition\n * U+E227 : not included in any glyphset definition\n * U+E22D : not included in any glyphset definition\n * U+E244 : not included in any glyphset definition\n * U+E246 : not included in any glyphset definition\n * U+E24F : not included in any glyphset definition\n * U+E252 : not included in any glyphset definition\n * U+E253 : not included in any glyphset definition\n * U+E255 : not included in any glyphset definition\n * U+E257 : not included in any glyphset definition\n * U+E259 : not included in any glyphset definition\n * U+E25D : not included in any glyphset definition\n * U+E260 : not included in any glyphset definition\n * U+E26D : not included in any glyphset definition\n * U+E270 : not included in any glyphset definition\n * U+E27D : not included in any glyphset definition\n * U+E282 : not included in any glyphset definition\n * U+E288 : not included in any glyphset definition\n * U+E2E2 : not included in any glyphset definition\n * U+E2EE : not included in any glyphset definition\n * U+E309 : not included in any glyphset definition\n * U+E30B : not included in any glyphset definition\n * U+E313 : not included in any glyphset definition\n * U+E315 : not included in any glyphset definition\n * U+E317 : not included in any glyphset definition\n * U+E324 : not included in any glyphset definition\n * U+E32B : not included in any glyphset definition\n * U+E32D : not included in any glyphset definition\n * U+E331 : not included in any glyphset definition\n * U+E336 : not included in any glyphset definition\n * U+E337 : not included in any glyphset definition\n * U+E338 : not included in any glyphset definition\n * U+E33A : not included in any glyphset definition\n * U+E33B : not included in any glyphset definition\n * U+E33C : not included in any glyphset definition\n * U+E33F : not included in any glyphset definition\n * U+E340 : not included in any glyphset definition\n * U+E342 : not included in any glyphset definition\n * U+E34B : not included in any glyphset definition\n * U+E34C : not included in any glyphset definition\n * U+E34D : not included in any glyphset definition\n * U+E350 : not included in any glyphset definition\n * U+E353 : not included in any glyphset definition\n * U+E357 : not included in any glyphset definition\n * U+E373 : not included in any glyphset definition\n * U+E375 : not included in any glyphset definition\n * U+E376 : not included in any glyphset definition\n * U+E378 : not included in any glyphset definition\n * U+E37C : not included in any glyphset definition\n * U+E384 : not included in any glyphset definition\n * U+E385 : not included in any glyphset definition\n * U+E39F : not included in any glyphset definition\n * U+E3A0 : not included in any glyphset definition\n * U+E3D3 : not included in any glyphset definition\n * U+E3D4 : not included in any glyphset definition\n * U+E3E4 : not included in any glyphset definition\n * U+E3E5 : not included in any glyphset definition\n * U+E3E6 : not included in any glyphset definition\n * U+E3E7 : not included in any glyphset definition\n * U+E404 : not included in any glyphset definition\n * U+E40A : not included in any glyphset definition\n * U+E410 : not included in any glyphset definition\n * U+E41A : not included in any glyphset definition\n * U+E41D : not included in any glyphset definition\n * U+E41F : not included in any glyphset definition\n * U+E425 : not included in any glyphset definition\n * U+E42C : not included in any glyphset definition\n * U+E42D : not included in any glyphset definition\n * U+E42E : not included in any glyphset definition\n * U+E433 : not included in any glyphset definition\n * U+E434 : not included in any glyphset definition\n * U+E436 : not included in any glyphset definition\n * U+E43A : not included in any glyphset definition\n * U+E43D : not included in any glyphset definition\n * U+E43F : not included in any glyphset definition\n * U+E440 : not included in any glyphset definition\n * U+E441 : not included in any glyphset definition\n * U+E442 : not included in any glyphset definition\n * U+E443 : not included in any glyphset definition\n * U+E444 : not included in any glyphset definition\n * U+E44D : not included in any glyphset definition\n * U+E466 : not included in any glyphset definition\n * U+E476 : not included in any glyphset definition\n * U+E477 : not included in any glyphset definition\n * U+E48F : not included in any glyphset definition\n * U+E491 : not included in any glyphset definition\n * U+E498 : not included in any glyphset definition\n * U+E499 : not included in any glyphset definition\n * U+E49F : not included in any glyphset definition\n * U+E4B7 : not included in any glyphset definition\n * U+E4BC : not included in any glyphset definition\n * U+E4C3 : not included in any glyphset definition\n * U+E4C8 : not included in any glyphset definition\n * U+E4CD : not included in any glyphset definition\n * U+E4CF : not included in any glyphset definition\n * U+E4D1 : not included in any glyphset definition\n * U+E4E1 : not included in any glyphset definition\n * U+E4E2 : not included in any glyphset definition\n * U+E4E3 : not included in any glyphset definition\n * U+E4E8 : not included in any glyphset definition\n * U+E4E9 : not included in any glyphset definition\n * U+E4EA : not included in any glyphset definition\n * U+E4EB : not included in any glyphset definition\n * U+E4EC : not included in any glyphset definition\n * U+E4EE : not included in any glyphset definition\n * U+E4F0 : not included in any glyphset definition\n * U+E501 : not included in any glyphset definition\n * U+E516 : not included in any glyphset definition\n * U+E517 : not included in any glyphset definition\n * U+E52A : not included in any glyphset definition\n * U+E535 : not included in any glyphset definition\n * U+E537 : not included in any glyphset definition\n * U+E53F : not included in any glyphset definition\n * U+E543 : not included in any glyphset definition\n * U+E548 : not included in any glyphset definition\n * U+E54A : not included in any glyphset definition\n * U+E54B : not included in any glyphset definition\n * U+E550 : not included in any glyphset definition\n * U+E551 : not included in any glyphset definition\n * U+E552 : not included in any glyphset definition\n * U+E553 : not included in any glyphset definition\n * U+E554 : not included in any glyphset definition\n * U+E55C : not included in any glyphset definition\n * U+E562 : not included in any glyphset definition\n * U+E563 : not included in any glyphset definition\n * U+E568 : not included in any glyphset definition\n * U+E58C : not included in any glyphset definition\n * U+E596 : not included in any glyphset definition\n * U+E59E : not included in any glyphset definition\n * U+E5A4 : not included in any glyphset definition\n * U+E5B0 : not included in any glyphset definition\n * U+E5B1 : not included in any glyphset definition\n * U+E5B8 : not included in any glyphset definition\n * U+E5C5 : not included in any glyphset definition\n * U+E5D2 : not included in any glyphset definition\n * U+E5D7 : not included in any glyphset definition\n * U+E5DC : not included in any glyphset definition\n * U+E5EE : not included in any glyphset definition\n * U+E608 : not included in any glyphset definition\n * U+E60C : not included in any glyphset definition\n * U+E60E : not included in any glyphset definition\n * U+E61B : not included in any glyphset definition\n * U+E627 : not included in any glyphset definition\n * U+E62C : not included in any glyphset definition\n * U+E62D : not included in any glyphset definition\n * U+E637 : not included in any glyphset definition\n * U+E643 : not included in any glyphset definition\n * U+E644 : not included in any glyphset definition\n * U+E645 : not included in any glyphset definition\n * U+E646 : not included in any glyphset definition\n * U+E647 : not included in any glyphset definition\n * U+E64F : not included in any glyphset definition\n * U+E652 : not included in any glyphset definition\n * U+E653 : not included in any glyphset definition\n * U+E655 : not included in any glyphset definition\n * U+E657 : not included in any glyphset definition\n * U+E659 : not included in any glyphset definition\n * U+E65D : not included in any glyphset definition\n * U+E660 : not included in any glyphset definition\n * U+E665 : not included in any glyphset definition\n * U+E66D : not included in any glyphset definition\n * U+E670 : not included in any glyphset definition\n * U+E67D : not included in any glyphset definition\n * U+E681 : not included in any glyphset definition\n * U+E682 : not included in any glyphset definition\n * U+E688 : not included in any glyphset definition\n * U+E68A : not included in any glyphset definition\n * U+E68B : not included in any glyphset definition\n * U+E6A3 : not included in any glyphset definition\n * U+E6E2 : not included in any glyphset definition\n * U+E6EE : not included in any glyphset definition\n * U+E709 : not included in any glyphset definition\n * U+E70B : not included in any glyphset definition\n * U+E713 : not included in any glyphset definition\n * U+E715 : not included in any glyphset definition\n * U+E717 : not included in any glyphset definition\n * U+E724 : not included in any glyphset definition\n * U+E727 : not included in any glyphset definition\n * U+E72B : not included in any glyphset definition\n * U+E72C : not included in any glyphset definition\n * U+E72D : not included in any glyphset definition\n * U+E731 : not included in any glyphset definition\n * U+E734 : not included in any glyphset definition\n * U+E735 : not included in any glyphset definition\n * U+E736 : not included in any glyphset definition\n * U+E737 : not included in any glyphset definition\n * U+E73A : not included in any glyphset definition\n * U+E73B : not included in any glyphset definition\n * U+E73C : not included in any glyphset definition\n * U+E73F : not included in any glyphset definition\n * U+E740 : not included in any glyphset definition\n * U+E742 : not included in any glyphset definition\n * U+E743 : not included in any glyphset definition\n * U+E74B : not included in any glyphset definition\n * U+E74C : not included in any glyphset definition\n * U+E74D : not included in any glyphset definition\n * U+E74E : not included in any glyphset definition\n * U+E750 : not included in any glyphset definition\n * U+E753 : not included in any glyphset definition\n * U+E754 : not included in any glyphset definition\n * U+E757 : not included in any glyphset definition\n * U+E773 : not included in any glyphset definition\n * U+E775 : not included in any glyphset definition\n * U+E776 : not included in any glyphset definition\n * U+E778 : not included in any glyphset definition\n * U+E77B : not included in any glyphset definition\n * U+E77C : not included in any glyphset definition\n * U+E781 : not included in any glyphset definition\n * U+E784 : not included in any glyphset definition\n * U+E785 : not included in any glyphset definition\n * U+E79E : not included in any glyphset definition\n * U+E79F : not included in any glyphset definition\n * U+E7A0 : not included in any glyphset definition\n * U+E7A2 : not included in any glyphset definition\n * U+E7B2 : not included in any glyphset definition\n * U+E7C1 : not included in any glyphset definition\n * U+E7C2 : not included in any glyphset definition\n * U+E7C3 : not included in any glyphset definition\n * U+E7C5 : not included in any glyphset definition\n * U+E7C7 : not included in any glyphset definition\n * U+E7C8 : not included in any glyphset definition\n * U+E7CC : not included in any glyphset definition\n * U+E7D3 : not included in any glyphset definition\n * U+E7D4 : not included in any glyphset definition\n * U+E7E4 : not included in any glyphset definition\n * U+E7E5 : not included in any glyphset definition\n * U+E7E6 : not included in any glyphset definition\n * U+E7E7 : not included in any glyphset definition\n * U+E7FF : not included in any glyphset definition\n * U+E801 : not included in any glyphset definition\n * U+E802 : not included in any glyphset definition\n * U+E803 : not included in any glyphset definition\n * U+E804 : not included in any glyphset definition\n * U+E805 : not included in any glyphset definition\n * U+E810 : not included in any glyphset definition\n * U+E811 : not included in any glyphset definition\n * U+E8A0 : not included in any glyphset definition\n * U+E8A1 : not included in any glyphset definition\n * U+E8A2 : not included in any glyphset definition\n * U+E8A3 : not included in any glyphset definition\n * U+E8A4 : not included in any glyphset definition\n * U+E8A5 : not included in any glyphset definition\n * U+E8A6 : not included in any glyphset definition\n * U+E8A7 : not included in any glyphset definition\n * U+E8A8 : not included in any glyphset definition\n * U+E8A9 : not included in any glyphset definition\n * U+E8AA : not included in any glyphset definition\n * U+E8AB : not included in any glyphset definition\n * U+E8AC : not included in any glyphset definition\n * U+E8AD : not included in any glyphset definition\n * U+E8AE : not included in any glyphset definition\n * U+E8B0 : not included in any glyphset definition\n * U+E8B1 : not included in any glyphset definition\n * U+E8B2 : not included in any glyphset definition\n * U+E8B3 : not included in any glyphset definition\n * U+E8B4 : not included in any glyphset definition\n * U+E8B5 : not included in any glyphset definition\n * U+E8B6 : not included in any glyphset definition\n * U+E8B7 : not included in any glyphset definition\n * U+E8B8 : not included in any glyphset definition\n * U+E8B9 : not included in any glyphset definition\n * U+E8BA : not included in any glyphset definition\n * U+E8BB : not included in any glyphset definition\n * U+E8BC : not included in any glyphset definition\n * U+E8BD : not included in any glyphset definition\n * U+E8BE : not included in any glyphset definition\n * U+E8BF : not included in any glyphset definition\n * U+E8C1 : not included in any glyphset definition\n * U+E8C2 : not included in any glyphset definition\n * U+E8C3 : not included in any glyphset definition\n * U+E8C5 : not included in any glyphset definition\n * U+E8D1 : not included in any glyphset definition\n * U+E8D3 : not included in any glyphset definition\n * U+E8D5 : not included in any glyphset definition\n * U+E8D7 : not included in any glyphset definition\n * U+E8E0 : not included in any glyphset definition\n * U+E8E1 : not included in any glyphset definition\n * U+E8E2 : not included in any glyphset definition\n * U+E8E3 : not included in any glyphset definition\n * U+E8E4 : not included in any glyphset definition\n * U+E8E5 : not included in any glyphset definition\n * U+E8E6 : not included in any glyphset definition\n * U+E8E7 : not included in any glyphset definition\n * U+E8E8 : not included in any glyphset definition\n * U+E8E9 : not included in any glyphset definition\n * U+E8EA : not included in any glyphset definition\n * U+E8EB : not included in any glyphset definition\n * U+E8EC : not included in any glyphset definition\n * U+E8ED : not included in any glyphset definition\n * U+E8F0 : not included in any glyphset definition\n * U+E8F1 : not included in any glyphset definition\n * U+E8F2 : not included in any glyphset definition\n * U+E8F3 : not included in any glyphset definition\n * U+EAD0 : not included in any glyphset definition\n * U+EAD1 : not included in any glyphset definition\n * U+EAD2 : not included in any glyphset definition\n * U+EADA : not included in any glyphset definition\n * U+EAF0 : not included in any glyphset definition\n * U+EAF1 : not included in any glyphset definition\n * U+EAF2 : not included in any glyphset definition\n * U+EAF3 : not included in any glyphset definition\n * U+EBA0 : not included in any glyphset definition\n * U+EBA1 : not included in any glyphset definition\n * U+EBA2 : not included in any glyphset definition\n * U+EBA3 : not included in any glyphset definition\n * U+EBA4 : not included in any glyphset definition\n * U+EBA5 : not included in any glyphset definition\n * U+EBA6 : not included in any glyphset definition\n * U+EBA7 : not included in any glyphset definition\n * U+EBA8 : not included in any glyphset definition\n * U+EBA9 : not included in any glyphset definition\n * U+EBAA : not included in any glyphset definition\n * U+EBAB : not included in any glyphset definition\n * U+EBAC : not included in any glyphset definition\n * U+EBAD : not included in any glyphset definition\n * U+EBAE : not included in any glyphset definition\n * U+EBAF : not included in any glyphset definition\n * U+EBB0 : not included in any glyphset definition\n * U+EBB1 : not included in any glyphset definition\n * U+EBB2 : not included in any glyphset definition\n * U+EBB3 : not included in any glyphset definition\n * U+EBB4 : not included in any glyphset definition\n * U+EBB5 : not included in any glyphset definition\n * U+EBB6 : not included in any glyphset definition\n * U+EBB7 : not included in any glyphset definition\n * U+EBB8 : not included in any glyphset definition\n * U+EBB9 : not included in any glyphset definition\n * U+EBBA : not included in any glyphset definition\n * U+EBBB : not included in any glyphset definition\n * U+EBBD : not included in any glyphset definition\n * U+EBBE : not included in any glyphset definition\n * U+EBBF : not included in any glyphset definition\n * U+EBC0 : not included in any glyphset definition\n * U+EBC1 : not included in any glyphset definition\n * U+EBC2 : not included in any glyphset definition\n * U+EBC3 : not included in any glyphset definition\n * U+EBC4 : not included in any glyphset definition\n * U+EBC5 : not included in any glyphset definition\n * U+EBC6 : not included in any glyphset definition\n * U+EBC7 : not included in any glyphset definition\n * U+EBC8 : not included in any glyphset definition\n * U+EBC9 : not included in any glyphset definition\n * U+EBCA : not included in any glyphset definition\n * U+EBCB : not included in any glyphset definition\n * U+EBCD : not included in any glyphset definition\n * U+EBCE : not included in any glyphset definition\n * U+EBCF : not included in any glyphset definition\n * U+EBD0 : not included in any glyphset definition\n * U+EBD1 : not included in any glyphset definition\n * U+EBD2 : not included in any glyphset definition\n * U+EBD3 : not included in any glyphset definition\n * U+EBD4 : not included in any glyphset definition\n * U+EBD5 : not included in any glyphset definition\n * U+EBD6 : not included in any glyphset definition\n * U+EBD7 : not included in any glyphset definition\n * U+EBDA : not included in any glyphset definition\n * U+EBDB : not included in any glyphset definition\n * U+EBDC : not included in any glyphset definition\n * U+EBDD : not included in any glyphset definition\n * U+EBDE : not included in any glyphset definition\n * U+EBDF : not included in any glyphset definition\n * U+EBE0 : not included in any glyphset definition\n * U+EBE1 : not included in any glyphset definition\n * U+EBE2 : not included in any glyphset definition\n * U+EBE3 : not included in any glyphset definition\n * U+EBE4 : not included in any glyphset definition\n * U+EBE5 : not included in any glyphset definition\n * U+EBE6 : not included in any glyphset definition\n * U+EBE7 : not included in any glyphset definition\n * U+EBE8 : not included in any glyphset definition\n * U+EBE9 : not included in any glyphset definition\n * U+EBEA : not included in any glyphset definition\n * U+EBEB : not included in any glyphset definition\n * U+EBEC : not included in any glyphset definition\n * U+EBED : not included in any glyphset definition\n * U+EBEE : not included in any glyphset definition\n * U+EBEF : not included in any glyphset definition\n * U+EBF0 : not included in any glyphset definition\n * U+EBF1 : not included in any glyphset definition\n * U+EBF2 : not included in any glyphset definition\n * U+EBF3 : not included in any glyphset definition\n * U+EBF4 : not included in any glyphset definition\n * U+EBF5 : not included in any glyphset definition\n * U+EBF6 : not included in any glyphset definition\n * U+EBF7 : not included in any glyphset definition\n * U+EBF8 : not included in any glyphset definition\n * U+EBF9 : not included in any glyphset definition\n * U+EBFA : not included in any glyphset definition\n * U+EBFB : not included in any glyphset definition\n * U+EBFC : not included in any glyphset definition\n * U+EBFD : not included in any glyphset definition\n * U+EBFE : not included in any glyphset definition\n * U+EBFF : not included in any glyphset definition\n * U+EEC0 : not included in any glyphset definition\n * U+EEC1 : not included in any glyphset definition\n * U+EEC2 : not included in any glyphset definition\n * U+EEC3 : not included in any glyphset definition\n * U+EEC4 : not included in any glyphset definition\n * U+EEC5 : not included in any glyphset definition\n * U+EEC6 : not included in any glyphset definition\n * U+EEC7 : not included in any glyphset definition\n * U+EEC8 : not included in any glyphset definition\n * U+EEC9 : not included in any glyphset definition\n * U+EECA : not included in any glyphset definition\n * U+EECB : not included in any glyphset definition\n * U+EECC : not included in any glyphset definition\n * U+EECD : not included in any glyphset definition\n * U+EECE : not included in any glyphset definition\n * U+EECF : not included in any glyphset definition\n * U+EED0 : not included in any glyphset definition\n * U+EED1 : not included in any glyphset definition\n * U+EED2 : not included in any glyphset definition\n * U+EED3 : not included in any glyphset definition\n * U+EED4 : not included in any glyphset definition\n * U+EED5 : not included in any glyphset definition\n * U+EED6 : not included in any glyphset definition\n * U+EED7 : not included in any glyphset definition\n * U+EED8 : not included in any glyphset definition\n * U+EED9 : not included in any glyphset definition\n * U+EEDA : not included in any glyphset definition\n * U+EEDB : not included in any glyphset definition\n * U+EEDC : not included in any glyphset definition\n * U+EEDD : not included in any glyphset definition\n * U+EEDE : not included in any glyphset definition\n * U+EEDF : not included in any glyphset definition\n * U+EEE0 : not included in any glyphset definition\n * U+EEE1 : not included in any glyphset definition\n * U+EEE2 : not included in any glyphset definition\n * U+EEE3 : not included in any glyphset definition\n * U+EEE4 : not included in any glyphset definition\n * U+EEE5 : not included in any glyphset definition\n * U+EEE6 : not included in any glyphset definition\n * U+EEE7 : not included in any glyphset definition\n * U+EEE8 : not included in any glyphset definition\n * U+EEE9 : not included in any glyphset definition\n * U+EEEA : not included in any glyphset definition\n * U+EEEB : not included in any glyphset definition\n * U+EEEC : not included in any glyphset definition\n * U+EEED : not included in any glyphset definition\n * U+EEEE : not included in any glyphset definition\n * U+EEEF : not included in any glyphset definition\n * U+EEF0 : not included in any glyphset definition\n * U+EEF1 : not included in any glyphset definition\n * U+EEF2 : not included in any glyphset definition\n * U+EEF3 : not included in any glyphset definition\n * U+EEF4 : not included in any glyphset definition\n * U+EEF5 : not included in any glyphset definition\n * U+EEF6 : not included in any glyphset definition\n * U+EEF7 : not included in any glyphset definition\n * U+EEF8 : not included in any glyphset definition\n * U+EEF9 : not included in any glyphset definition\n * U+EEFA : not included in any glyphset definition\n * U+EEFB : not included in any glyphset definition\n * U+EEFC : not included in any glyphset definition\n * U+EEFD : not included in any glyphset definition\n * U+EEFE : not included in any glyphset definition\n * U+EEFF : not included in any glyphset definition\n * U+EF05 : not included in any glyphset definition\n * U+EF0C : not included in any glyphset definition\n * U+EF0E : not included in any glyphset definition\n * U+EF11 : not included in any glyphset definition\n * U+EF15 : not included in any glyphset definition\n * U+EF20 : not included in any glyphset definition\n * U+EF21 : not included in any glyphset definition\n * U+EF22 : not included in any glyphset definition\n * U+EF23 : not included in any glyphset definition\n * U+EF24 : not included in any glyphset definition\n * U+EF25 : not included in any glyphset definition\n * U+EF26 : not included in any glyphset definition\n * U+EF27 : not included in any glyphset definition\n * U+EF28 : not included in any glyphset definition\n * U+EF29 : not included in any glyphset definition\n * U+EF2A : not included in any glyphset definition\n * U+EF2B : not included in any glyphset definition\n * U+EF2C : not included in any glyphset definition\n * U+EF2D : not included in any glyphset definition\n * U+EF90 : not included in any glyphset definition\n * U+EF91 : not included in any glyphset definition\n * U+EF92 : not included in any glyphset definition\n * U+EF93 : not included in any glyphset definition\n * U+EF94 : not included in any glyphset definition\n * U+EF95 : not included in any glyphset definition\n * U+EF96 : not included in any glyphset definition\n * U+EF97 : not included in any glyphset definition\n * U+EF98 : not included in any glyphset definition\n * U+EF99 : not included in any glyphset definition\n * U+EF9A : not included in any glyphset definition\n * U+EF9B : not included in any glyphset definition\n * U+EF9C : not included in any glyphset definition\n * U+EF9F : not included in any glyphset definition\n * U+EFA0 : not included in any glyphset definition\n * U+EFA1 : not included in any glyphset definition\n * U+EFA2 : not included in any glyphset definition\n * U+EFA3 : not included in any glyphset definition\n * U+EFA4 : not included in any glyphset definition\n * U+EFA5 : not included in any glyphset definition\n * U+EFA6 : not included in any glyphset definition\n * U+EFA7 : not included in any glyphset definition\n * U+EFA8 : not included in any glyphset definition\n * U+EFA9 : not included in any glyphset definition\n * U+EFAA : not included in any glyphset definition\n * U+EFAB : not included in any glyphset definition\n * U+EFAC : not included in any glyphset definition\n * U+EFAD : not included in any glyphset definition\n * U+EFAE : not included in any glyphset definition\n * U+EFDD : not included in any glyphset definition\n * U+EFDE : not included in any glyphset definition\n * U+EFDF : not included in any glyphset definition\n * U+EFE0 : not included in any glyphset definition\n * U+EFE1 : not included in any glyphset definition\n * U+EFE2 : not included in any glyphset definition\n * U+EFE3 : not included in any glyphset definition\n * U+EFE4 : not included in any glyphset definition\n * U+EFE5 : not included in any glyphset definition\n * U+EFE6 : not included in any glyphset definition\n * U+EFE7 : not included in any glyphset definition\n * U+EFE8 : not included in any glyphset definition\n * U+EFE9 : not included in any glyphset definition\n * U+EFEA : not included in any glyphset definition\n * U+EFEB : not included in any glyphset definition\n * U+EFEC : not included in any glyphset definition\n * U+EFED : not included in any glyphset definition\n * U+EFEE : not included in any glyphset definition\n * U+EFEF : not included in any glyphset definition\n * U+EFF0 : not included in any glyphset definition\n * U+EFF1 : not included in any glyphset definition\n * U+EFF2 : not included in any glyphset definition\n * U+EFF3 : not included in any glyphset definition\n * U+EFF4 : not included in any glyphset definition\n * U+EFF5 : not included in any glyphset definition\n * U+EFF6 : not included in any glyphset definition\n * U+EFF7 : not included in any glyphset definition\n * U+EFF8 : not included in any glyphset definition\n * U+EFF9 : not included in any glyphset definition\n * U+EFFA : not included in any glyphset definition\n * U+EFFB : not included in any glyphset definition\n * U+EFFC : not included in any glyphset definition\n * U+EFFD : not included in any glyphset definition\n * U+EFFE : not included in any glyphset definition\n * U+EFFF : not included in any glyphset definition\n * U+F000 : not included in any glyphset definition\n * U+F00A : not included in any glyphset definition\n * U+F00B : not included in any glyphset definition\n * U+F00C : not included in any glyphset definition\n * U+F00D : not included in any glyphset definition\n * U+F011 : not included in any glyphset definition\n * U+F012 : not included in any glyphset definition\n * U+F013 : not included in any glyphset definition\n * U+F014 : not included in any glyphset definition\n * U+F016 : not included in any glyphset definition\n * U+F017 : not included in any glyphset definition\n * U+F018 : not included in any glyphset definition\n * U+F019 : not included in any glyphset definition\n * U+F01B : not included in any glyphset definition\n * U+F01C : not included in any glyphset definition\n * U+F01D : not included in any glyphset definition\n * U+F01E : not included in any glyphset definition\n * U+F020 : not included in any glyphset definition\n * U+F021 : not included in any glyphset definition\n * U+F023 : not included in any glyphset definition\n * U+F025 : not included in any glyphset definition\n * U+F026 : not included in any glyphset definition\n * U+F027 : not included in any glyphset definition\n * U+F028 : not included in any glyphset definition\n * U+F02A : not included in any glyphset definition\n * U+F02B : not included in any glyphset definition\n * U+F02C : not included in any glyphset definition\n * U+F02D : not included in any glyphset definition\n * U+F02E : not included in any glyphset definition\n * U+F02F : not included in any glyphset definition\n * U+F030 : not included in any glyphset definition\n * U+F031 : not included in any glyphset definition\n * U+F032 : not included in any glyphset definition\n * U+F033 : not included in any glyphset definition\n * U+F035 : not included in any glyphset definition\n * U+F036 : not included in any glyphset definition\n * U+F037 : not included in any glyphset definition\n * U+F038 : not included in any glyphset definition\n * U+F039 : not included in any glyphset definition\n * U+F03A : not included in any glyphset definition\n * U+F03B : not included in any glyphset definition\n * U+F03C : not included in any glyphset definition\n * U+F03D : not included in any glyphset definition\n * U+F03E : not included in any glyphset definition\n * U+F03F : not included in any glyphset definition\n * U+F040 : not included in any glyphset definition\n * U+F100 : not included in any glyphset definition\n * U+F106 : not included in any glyphset definition\n * U+F109 : not included in any glyphset definition\n * U+F10A : not included in any glyphset definition\n * U+F10B : not included in any glyphset definition\n * U+F10C : not included in any glyphset definition\n * U+F10D : not included in any glyphset definition\n * U+F10E : not included in any glyphset definition\n * U+F10F : not included in any glyphset definition\n * U+F110 : not included in any glyphset definition\n * U+F11A : not included in any glyphset definition\n * U+F125 : not included in any glyphset definition\n * U+F126 : not included in any glyphset definition\n * U+F127 : not included in any glyphset definition\n * U+F128 : not included in any glyphset definition\n * U+F129 : not included in any glyphset definition\n * U+F130 : not included in any glyphset definition\n * U+F135 : not included in any glyphset definition\n * U+F136 : not included in any glyphset definition\n * U+F13A : not included in any glyphset definition\n * U+F13E : not included in any glyphset definition\n * U+F13F : not included in any glyphset definition\n * U+F142 : not included in any glyphset definition\n * U+F149 : not included in any glyphset definition\n * U+F14F : not included in any glyphset definition\n * U+F151 : not included in any glyphset definition\n * U+F152 : not included in any glyphset definition\n * U+F153 : not included in any glyphset definition\n * U+F154 : not included in any glyphset definition\n * U+F155 : not included in any glyphset definition\n * U+F156 : not included in any glyphset definition\n * U+F157 : not included in any glyphset definition\n * U+F158 : not included in any glyphset definition\n * U+F159 : not included in any glyphset definition\n * U+F15A : not included in any glyphset definition\n * U+F15B : not included in any glyphset definition\n * U+F15C : not included in any glyphset definition\n * U+F15D : not included in any glyphset definition\n * U+F15E : not included in any glyphset definition\n * U+F160 : not included in any glyphset definition\n * U+F161 : not included in any glyphset definition\n * U+F163 : not included in any glyphset definition\n * U+F16E : not included in any glyphset definition\n * U+F16F : not included in any glyphset definition\n * U+F192 : not included in any glyphset definition\n * U+F193 : not included in any glyphset definition\n * U+F194 : not included in any glyphset definition\n * U+F195 : not included in any glyphset definition\n * U+F196 : not included in any glyphset definition\n * U+F197 : not included in any glyphset definition\n * U+F198 : not included in any glyphset definition\n * U+F199 : not included in any glyphset definition\n * U+F19A : not included in any glyphset definition\n * U+F19B : not included in any glyphset definition\n * U+F1A0 : not included in any glyphset definition\n * U+F1A1 : not included in any glyphset definition\n * U+F1A2 : not included in any glyphset definition\n * U+F1A3 : not included in any glyphset definition\n * U+F1A4 : not included in any glyphset definition\n * U+F1A5 : not included in any glyphset definition\n * U+F1A6 : not included in any glyphset definition\n * U+F1A7 : not included in any glyphset definition\n * U+F1A8 : not included in any glyphset definition\n * U+F1A9 : not included in any glyphset definition\n * U+F1AA : not included in any glyphset definition\n * U+F1AB : not included in any glyphset definition\n * U+F1AC : not included in any glyphset definition\n * U+F1BC : not included in any glyphset definition\n * U+F1BD : not included in any glyphset definition\n * U+F1BE : not included in any glyphset definition\n * U+F1BF : not included in any glyphset definition\n * U+F1C0 : not included in any glyphset definition\n * U+F1C1 : not included in any glyphset definition\n * U+F1C2 : not included in any glyphset definition\n * U+F1C3 : not included in any glyphset definition\n * U+F1C4 : not included in any glyphset definition\n * U+F1C5 : not included in any glyphset definition\n * U+F1C6 : not included in any glyphset definition\n * U+F1C7 : not included in any glyphset definition\n * U+F1C8 : not included in any glyphset definition\n * U+F1C9 : not included in any glyphset definition\n * U+F1CA : not included in any glyphset definition\n * U+F1CB : not included in any glyphset definition\n * U+F1CC : not included in any glyphset definition\n * U+F1D2 : not included in any glyphset definition\n * U+F1D3 : not included in any glyphset definition\n * U+F1D4 : not included in any glyphset definition\n * U+F1D5 : not included in any glyphset definition\n * U+F1D6 : not included in any glyphset definition\n * U+F1D7 : not included in any glyphset definition\n * U+F1D8 : not included in any glyphset definition\n * U+F1D9 : not included in any glyphset definition\n * U+F1DA : not included in any glyphset definition\n * U+F1DB : not included in any glyphset definition\n * U+F1DC : not included in any glyphset definition\n * U+F1DD : not included in any glyphset definition\n * U+F1DE : not included in any glyphset definition\n * U+F1DF : not included in any glyphset definition\n * U+F1E0 : not included in any glyphset definition\n * U+F1E1 : not included in any glyphset definition\n * U+F1E2 : not included in any glyphset definition\n * U+F1E3 : not included in any glyphset definition\n * U+F1E4 : not included in any glyphset definition\n * U+F1E5 : not included in any glyphset definition\n * U+F1E6 : not included in any glyphset definition\n * U+F1E7 : not included in any glyphset definition\n * U+F1E8 : not included in any glyphset definition\n * U+F1E9 : not included in any glyphset definition\n * U+F1EA : not included in any glyphset definition\n * U+F1EB : not included in any glyphset definition\n * U+F1EC : not included in any glyphset definition\n * U+F1ED : not included in any glyphset definition\n * U+F1EE : not included in any glyphset definition\n * U+F1EF : not included in any glyphset definition\n * U+F1F0 : not included in any glyphset definition\n * U+F1F1 : not included in any glyphset definition\n * U+F1F2 : not included in any glyphset definition\n * U+F1F3 : not included in any glyphset definition\n * U+F1F4 : not included in any glyphset definition\n * U+F1F5 : not included in any glyphset definition\n * U+F1F6 : not included in any glyphset definition\n * U+F1F7 : not included in any glyphset definition\n * U+F1F8 : not included in any glyphset definition\n * U+F1F9 : not included in any glyphset definition\n * U+F1FA : not included in any glyphset definition\n * U+F1FB : not included in any glyphset definition\n * U+F1FC : not included in any glyphset definition\n * U+F1FD : not included in any glyphset definition\n * U+F1FE : not included in any glyphset definition\n * U+F200 : not included in any glyphset definition\n * U+F201 : not included in any glyphset definition\n * U+F202 : not included in any glyphset definition\n * U+F203 : not included in any glyphset definition\n * U+F204 : not included in any glyphset definition\n * U+F205 : not included in any glyphset definition\n * U+F206 : not included in any glyphset definition\n * U+F207 : not included in any glyphset definition\n * U+F208 : not included in any glyphset definition\n * U+F209 : not included in any glyphset definition\n * U+F20A : not included in any glyphset definition\n * U+F20B : not included in any glyphset definition\n * U+F20C : not included in any glyphset definition\n * U+F20D : not included in any glyphset definition\n * U+F20E : not included in any glyphset definition\n * U+F210 : not included in any glyphset definition\n * U+F211 : not included in any glyphset definition\n * U+F212 : not included in any glyphset definition\n * U+F213 : not included in any glyphset definition\n * U+F214 : not included in any glyphset definition\n * U+F215 : not included in any glyphset definition\n * U+F216 : not included in any glyphset definition\n * U+F217 : not included in any glyphset definition\n * U+F218 : not included in any glyphset definition\n * U+F219 : not included in any glyphset definition\n * U+F21A : not included in any glyphset definition\n * U+F21B : not included in any glyphset definition\n * U+F21C : not included in any glyphset definition\n * U+F21D : not included in any glyphset definition\n * U+F21E : not included in any glyphset definition\n * U+F21F : not included in any glyphset definition\n * U+F220 : not included in any glyphset definition\n * U+F221 : not included in any glyphset definition\n * U+F222 : not included in any glyphset definition\n * U+F223 : not included in any glyphset definition\n * U+F224 : not included in any glyphset definition\n * U+F225 : not included in any glyphset definition\n * U+F226 : not included in any glyphset definition\n * U+F227 : not included in any glyphset definition\n * U+F228 : not included in any glyphset definition\n * U+F229 : not included in any glyphset definition\n * U+F22A : not included in any glyphset definition\n * U+F22B : not included in any glyphset definition\n * U+F22C : not included in any glyphset definition\n * U+F22D : not included in any glyphset definition\n * U+F22E : not included in any glyphset definition\n * U+F22F : not included in any glyphset definition\n * U+F230 : not included in any glyphset definition\n * U+F231 : not included in any glyphset definition\n * U+F232 : not included in any glyphset definition\n * U+F233 : not included in any glyphset definition\n * U+F236 : not included in any glyphset definition\n * U+F237 : not included in any glyphset definition\n * U+F238 : not included in any glyphset definition\n * U+F239 : not included in any glyphset definition\n * U+F23A : not included in any glyphset definition\n * U+F23F : not included in any glyphset definition\n * U+F2E0 : not included in any glyphset definition\n * U+F2E1 : not included in any glyphset definition\n * U+F2E2 : not included in any glyphset definition\n * U+F2E3 : not included in any glyphset definition\n * U+F2E4 : not included in any glyphset definition\n * U+F2E5 : not included in any glyphset definition\n * U+F2E6 : not included in any glyphset definition\n * U+F2E7 : not included in any glyphset definition\n * U+F2E8 : not included in any glyphset definition\n * U+F2E9 : not included in any glyphset definition\n * U+F2EA : not included in any glyphset definition\n * U+F2EB : not included in any glyphset definition\n * U+F2EC : not included in any glyphset definition\n * U+F2ED : not included in any glyphset definition\n * U+F2EE : not included in any glyphset definition\n * U+F2EF : not included in any glyphset definition\n * U+F2F0 : not included in any glyphset definition\n * U+F2F1 : not included in any glyphset definition\n * U+F2F2 : not included in any glyphset definition\n * U+F2F3 : not included in any glyphset definition\n * U+F2F4 : not included in any glyphset definition\n * U+F2F5 : not included in any glyphset definition\n * U+F2F6 : not included in any glyphset definition\n * U+F2F7 : not included in any glyphset definition\n * U+F2F8 : not included in any glyphset definition\n * U+F2F9 : not included in any glyphset definition\n * U+F2FA : not included in any glyphset definition\n * U+F2FB : not included in any glyphset definition\n * U+F2FC : not included in any glyphset definition\n * U+F2FD : not included in any glyphset definition\n * U+F300 : not included in any glyphset definition\n * U+F310 : not included in any glyphset definition\n * U+F312 : not included in any glyphset definition\n * U+F313 : not included in any glyphset definition\n * U+F314 : not included in any glyphset definition\n * U+F315 : not included in any glyphset definition\n * U+F316 : not included in any glyphset definition\n * U+F317 : not included in any glyphset definition\n * U+F318 : not included in any glyphset definition\n * U+F319 : not included in any glyphset definition\n * U+F340 : not included in any glyphset definition\n * U+F341 : not included in any glyphset definition\n * U+F342 : not included in any glyphset definition\n * U+F400 : not included in any glyphset definition\n * U+F407 : not included in any glyphset definition\n * U+F408 : not included in any glyphset definition\n * U+F409 : not included in any glyphset definition\n * U+F411 : not included in any glyphset definition\n * U+F412 : not included in any glyphset definition\n * U+F413 : not included in any glyphset definition\n * U+F414 : not included in any glyphset definition\n * U+F415 : not included in any glyphset definition\n * U+F416 : not included in any glyphset definition\n * U+F417 : not included in any glyphset definition\n * U+F418 : not included in any glyphset definition\n * U+F419 : not included in any glyphset definition\n * U+F420 : not included in any glyphset definition\n * U+F421 : not included in any glyphset definition\n * U+F422 : not included in any glyphset definition\n * U+F423 : not included in any glyphset definition\n * U+F424 : not included in any glyphset definition\n * U+F425 : not included in any glyphset definition\n * U+F426 : not included in any glyphset definition\n * U+F427 : not included in any glyphset definition\n * U+F428 : not included in any glyphset definition\n * U+F429 : not included in any glyphset definition\n * U+F42A : not included in any glyphset definition\n * U+F42B : not included in any glyphset definition\n * U+F42C : not included in any glyphset definition\n * U+F42D : not included in any glyphset definition\n * U+F42E : not included in any glyphset definition\n * U+F42F : not included in any glyphset definition\n * U+F430 : not included in any glyphset definition\n * U+F431 : not included in any glyphset definition\n * U+F432 : not included in any glyphset definition\n * U+F433 : not included in any glyphset definition\n * U+F434 : not included in any glyphset definition\n * U+F435 : not included in any glyphset definition\n * U+F436 : not included in any glyphset definition\n * U+F437 : not included in any glyphset definition\n * U+F438 : not included in any glyphset definition\n * U+F439 : not included in any glyphset definition\n * U+F43A : not included in any glyphset definition\n * U+F43B : not included in any glyphset definition\n * U+F43C : not included in any glyphset definition\n * U+F43D : not included in any glyphset definition\n * U+F43E : not included in any glyphset definition\n * U+F440 : not included in any glyphset definition\n * U+F441 : not included in any glyphset definition\n * U+F442 : not included in any glyphset definition\n * U+F443 : not included in any glyphset definition\n * U+F444 : not included in any glyphset definition\n * U+F445 : not included in any glyphset definition\n * U+F446 : not included in any glyphset definition\n * U+F447 : not included in any glyphset definition\n * U+F448 : not included in any glyphset definition\n * U+F449 : not included in any glyphset definition\n * U+F44A : not included in any glyphset definition\n * U+F44B : not included in any glyphset definition\n * U+F44C : not included in any glyphset definition\n * U+F44D : not included in any glyphset definition\n * U+F44E : not included in any glyphset definition\n * U+F44F : not included in any glyphset definition\n * U+F452 : not included in any glyphset definition\n * U+F462 : not included in any glyphset definition\n * U+F463 : not included in any glyphset definition\n * U+F464 : not included in any glyphset definition\n * U+F465 : not included in any glyphset definition\n * U+F466 : not included in any glyphset definition\n * U+F467 : not included in any glyphset definition\n * U+F468 : not included in any glyphset definition\n * U+F469 : not included in any glyphset definition\n * U+F46A : not included in any glyphset definition\n * U+F46B : not included in any glyphset definition\n * U+F46C : not included in any glyphset definition\n * U+F46D : not included in any glyphset definition\n * U+F472 : not included in any glyphset definition\n * U+F473 : not included in any glyphset definition\n * U+F474 : not included in any glyphset definition\n * U+F475 : not included in any glyphset definition\n * U+F476 : not included in any glyphset definition\n * U+F477 : not included in any glyphset definition\n * U+F478 : not included in any glyphset definition\n * U+F479 : not included in any glyphset definition\n * U+F47A : not included in any glyphset definition\n * U+F47B : not included in any glyphset definition\n * U+F47C : not included in any glyphset definition\n * U+F47D : not included in any glyphset definition\n * U+F482 : not included in any glyphset definition\n * U+F483 : not included in any glyphset definition\n * U+F484 : not included in any glyphset definition\n * U+F485 : not included in any glyphset definition\n * U+F486 : not included in any glyphset definition\n * U+F487 : not included in any glyphset definition\n * U+F488 : not included in any glyphset definition\n * U+F489 : not included in any glyphset definition\n * U+F48A : not included in any glyphset definition\n * U+F48B : not included in any glyphset definition\n * U+F48C : not included in any glyphset definition\n * U+F48D : not included in any glyphset definition\n * U+F492 : not included in any glyphset definition\n * U+F493 : not included in any glyphset definition\n * U+F494 : not included in any glyphset definition\n * U+F495 : not included in any glyphset definition\n * U+F496 : not included in any glyphset definition\n * U+F497 : not included in any glyphset definition\n * U+F498 : not included in any glyphset definition\n * U+F499 : not included in any glyphset definition\n * U+F49A : not included in any glyphset definition\n * U+F49B : not included in any glyphset definition\n * U+F49C : not included in any glyphset definition\n * U+F49D : not included in any glyphset definition\n * U+F4A2 : not included in any glyphset definition\n * U+F4A3 : not included in any glyphset definition\n * U+F4A4 : not included in any glyphset definition\n * U+F4A5 : not included in any glyphset definition\n * U+F4A6 : not included in any glyphset definition\n * U+F4A7 : not included in any glyphset definition\n * U+F4A8 : not included in any glyphset definition\n * U+F4A9 : not included in any glyphset definition\n * U+F4AA : not included in any glyphset definition\n * U+F4AB : not included in any glyphset definition\n * U+F4AC : not included in any glyphset definition\n * U+F4AD : not included in any glyphset definition\n * U+F4B0 : not included in any glyphset definition\n * U+F4B5 : not included in any glyphset definition\n * U+F4B6 : not included in any glyphset definition\n * U+F4B7 : not included in any glyphset definition\n * U+F4B8 : not included in any glyphset definition\n * U+F4B9 : not included in any glyphset definition\n * U+F4BA : not included in any glyphset definition\n * U+F4BB : not included in any glyphset definition\n * U+F4BC : not included in any glyphset definition\n * U+F4BD : not included in any glyphset definition\n * U+F4BE : not included in any glyphset definition\n * U+F4BF : not included in any glyphset definition\n * U+F4F9 : not included in any glyphset definition\n * U+F4FA : not included in any glyphset definition\n * U+F4FB : not included in any glyphset definition\n * U+F4FC : not included in any glyphset definition\n * U+F4FD : not included in any glyphset definition\n * U+F4FE : not included in any glyphset definition\n * U+F4FF : not included in any glyphset definition\n * U+F6BE : not included in any glyphset definition\n * U+F6C3 : not included in any glyphset definition\n * U+F6C9 : not included in any glyphset definition\n * U+F6CA : not included in any glyphset definition\n * U+F6CB : not included in any glyphset definition\n * U+F6CC : not included in any glyphset definition\n * U+F6CD : not included in any glyphset definition\n * U+F6CE : not included in any glyphset definition\n * U+F6CF : not included in any glyphset definition\n * U+F6F4 : not included in any glyphset definition\n * U+F6F5 : not included in any glyphset definition\n * U+F6F6 : not included in any glyphset definition\n * U+F6F7 : not included in any glyphset definition\n * U+F6F8 : not included in any glyphset definition\n * U+F6F9 : not included in any glyphset definition\n * U+F6FA : not included in any glyphset definition\n * U+F6FB : not included in any glyphset definition\n * U+F6FC : not included in any glyphset definition\n * U+F6FD : not included in any glyphset definition\n * U+F6FE : not included in any glyphset definition\n * U+F6FF : not included in any glyphset definition\n * U+F700 : not included in any glyphset definition\n * U+F701 : not included in any glyphset definition\n * U+F702 : not included in any glyphset definition\n * U+F703 : not included in any glyphset definition\n * U+F704 : not included in any glyphset definition\n * U+F705 : not included in any glyphset definition\n * U+F706 : not included in any glyphset definition\n * U+F707 : not included in any glyphset definition\n * U+F708 : not included in any glyphset definition\n * U+F709 : not included in any glyphset definition\n * U+F70A : not included in any glyphset definition\n * U+F70B : not included in any glyphset definition\n * U+F70C : not included in any glyphset definition\n * U+F714 : not included in any glyphset definition\n * U+F715 : not included in any glyphset definition\n * U+F716 : not included in any glyphset definition\n * U+F717 : not included in any glyphset definition\n * U+F718 : not included in any glyphset definition\n * U+F719 : not included in any glyphset definition\n * U+F71A : not included in any glyphset definition\n * U+F71B : not included in any glyphset definition\n * U+F71C : not included in any glyphset definition\n * U+F721 : not included in any glyphset definition\n * U+F726 : not included in any glyphset definition\n * U+F730 : not included in any glyphset definition\n * U+F731 : not included in any glyphset definition\n * U+F732 : not included in any glyphset definition\n * U+F733 : not included in any glyphset definition\n * U+F734 : not included in any glyphset definition\n * U+F735 : not included in any glyphset definition\n * U+F736 : not included in any glyphset definition\n * U+F737 : not included in any glyphset definition\n * U+F738 : not included in any glyphset definition\n * U+F739 : not included in any glyphset definition\n * U+F73F : not included in any glyphset definition\n * U+F743 : not included in any glyphset definition\n * U+F760 : not included in any glyphset definition\n * U+F761 : not included in any glyphset definition\n * U+F762 : not included in any glyphset definition\n * U+F763 : not included in any glyphset definition\n * U+F764 : not included in any glyphset definition\n * U+F765 : not included in any glyphset definition\n * U+F766 : not included in any glyphset definition\n * U+F767 : not included in any glyphset definition\n * U+F768 : not included in any glyphset definition\n * U+F769 : not included in any glyphset definition\n * U+F76A : not included in any glyphset definition\n * U+F76B : not included in any glyphset definition\n * U+F76C : not included in any glyphset definition\n * U+F76D : not included in any glyphset definition\n * U+F76E : not included in any glyphset definition\n * U+F76F : not included in any glyphset definition\n * U+F770 : not included in any glyphset definition\n * U+F771 : not included in any glyphset definition\n * U+F772 : not included in any glyphset definition\n * U+F773 : not included in any glyphset definition\n * U+F774 : not included in any glyphset definition\n * U+F775 : not included in any glyphset definition\n * U+F776 : not included in any glyphset definition\n * U+F777 : not included in any glyphset definition\n * U+F778 : not included in any glyphset definition\n * U+F779 : not included in any glyphset definition\n * U+F77A : not included in any glyphset definition\n * U+F77D : not included in any glyphset definition\n * U+F77E : not included in any glyphset definition\n * U+F77F : not included in any glyphset definition\n * U+F7A1 : not included in any glyphset definition\n * U+F7A8 : not included in any glyphset definition\n * U+F7AF : not included in any glyphset definition\n * U+F7B1 : not included in any glyphset definition\n * U+F7B2 : not included in any glyphset definition\n * U+F7B3 : not included in any glyphset definition\n * U+F7B4 : not included in any glyphset definition\n * U+F7B5 : not included in any glyphset definition\n * U+F7B6 : not included in any glyphset definition\n * U+F7B7 : not included in any glyphset definition\n * U+F7B8 : not included in any glyphset definition\n * U+F7BF : not included in any glyphset definition\n * U+F7E0 : not included in any glyphset definition\n * U+F7E1 : not included in any glyphset definition\n * U+F7E2 : not included in any glyphset definition\n * U+F7E3 : not included in any glyphset definition\n * U+F7E4 : not included in any glyphset definition\n * U+F7E5 : not included in any glyphset definition\n * U+F7E6 : not included in any glyphset definition\n * U+F7E7 : not included in any glyphset definition\n * U+F7E8 : not included in any glyphset definition\n * U+F7E9 : not included in any glyphset definition\n * U+F7EA : not included in any glyphset definition\n * U+F7EB : not included in any glyphset definition\n * U+F7EC : not included in any glyphset definition\n * U+F7ED : not included in any glyphset definition\n * U+F7EE : not included in any glyphset definition\n * U+F7EF : not included in any glyphset definition\n * U+F7F0 : not included in any glyphset definition\n * U+F7F1 : not included in any glyphset definition\n * U+F7F2 : not included in any glyphset definition\n * U+F7F3 : not included in any glyphset definition\n * U+F7F4 : not included in any glyphset definition\n * U+F7F5 : not included in any glyphset definition\n * U+F7F6 : not included in any glyphset definition\n * U+F7F8 : not included in any glyphset definition\n * U+F7F9 : not included in any glyphset definition\n * U+F7FA : not included in any glyphset definition\n * U+F7FB : not included in any glyphset definition\n * U+F7FC : not included in any glyphset definition\n * U+F7FD : not included in any glyphset definition\n * U+F7FE : not included in any glyphset definition\n * U+F7FF : not included in any glyphset definition\n * U+F800 : not included in any glyphset definition\n * U+F801 : not included in any glyphset definition\n * U+F802 : not included in any glyphset definition\n * U+F803 : not included in any glyphset definition\n * U+F804 : not included in any glyphset definition\n * U+F805 : not included in any glyphset definition\n * U+F806 : not included in any glyphset definition\n * U+F860 : not included in any glyphset definition\n * U+F861 : not included in any glyphset definition\n * U+F862 : not included in any glyphset definition\n * U+F863 : not included in any glyphset definition\n * U+FB00 LATIN SMALL LIGATURE FF: not included in any glyphset definition\n * U+FB01 LATIN SMALL LIGATURE FI: not included in any glyphset definition\n * U+FB02 LATIN SMALL LIGATURE FL: not included in any glyphset definition\n * U+FB03 LATIN SMALL LIGATURE FFI: not included in any glyphset definition\n * U+FB04 LATIN SMALL LIGATURE FFL: not included in any glyphset definition\n * U+FB05 LATIN SMALL LIGATURE LONG S T: not included in any glyphset definition\n * U+FB06 LATIN SMALL LIGATURE ST: not included in any glyphset definition\n * U+FB10 : not included in any glyphset definition\n * U+FB11 : not included in any glyphset definition\n * U+FB12 : not included in any glyphset definition\n * U+FB13 ARMENIAN SMALL LIGATURE MEN NOW: try adding armenian\n * U+FB14 ARMENIAN SMALL LIGATURE MEN ECH: try adding armenian\n * U+FB15 ARMENIAN SMALL LIGATURE MEN INI: try adding armenian\n * U+FB16 ARMENIAN SMALL LIGATURE VEW NOW: try adding armenian\n * U+FB17 ARMENIAN SMALL LIGATURE MEN XEH: try adding armenian\n * U+FB1D HEBREW LETTER YOD WITH HIRIQ: not included in any glyphset definition\n * U+FB1E HEBREW POINT JUDEO-SPANISH VARIKA: not included in any glyphset definition\n * U+FB1F HEBREW LIGATURE YIDDISH YOD YOD PATAH: not included in any glyphset definition\n * U+FB20 HEBREW LETTER ALTERNATIVE AYIN: not included in any glyphset definition\n * U+FB21 HEBREW LETTER WIDE ALEF: not included in any glyphset definition\n * U+FB22 HEBREW LETTER WIDE DALET: not included in any glyphset definition\n * U+FB23 HEBREW LETTER WIDE HE: not included in any glyphset definition\n * U+FB24 HEBREW LETTER WIDE KAF: not included in any glyphset definition\n * U+FB25 HEBREW LETTER WIDE LAMED: not included in any glyphset definition\n * U+FB26 HEBREW LETTER WIDE FINAL MEM: not included in any glyphset definition\n * U+FB27 HEBREW LETTER WIDE RESH: not included in any glyphset definition\n * U+FB28 HEBREW LETTER WIDE TAV: not included in any glyphset definition\n * U+FB29 HEBREW LETTER ALTERNATIVE PLUS SIGN: not included in any glyphset definition\n * U+FB4C HEBREW LETTER BET WITH RAFE: not included in any glyphset definition\n * U+FB4D HEBREW LETTER KAF WITH RAFE: not included in any glyphset definition\n * U+FB4E HEBREW LETTER PE WITH RAFE: not included in any glyphset definition\n * U+FB4F HEBREW LIGATURE ALEF LAMED: not included in any glyphset definition\n * U+10110 AEGEAN NUMBER TEN: try adding linear-b\n * U+10111 AEGEAN NUMBER TWENTY: try adding linear-b\n * U+10112 AEGEAN NUMBER THIRTY: try adding linear-b\n * U+10140 GREEK ACROPHONIC ATTIC ONE QUARTER: not included in any glyphset definition\n * U+10141 GREEK ACROPHONIC ATTIC ONE HALF: not included in any glyphset definition\n * U+10142 GREEK ACROPHONIC ATTIC ONE DRACHMA: not included in any glyphset definition\n * U+10143 GREEK ACROPHONIC ATTIC FIVE: not included in any glyphset definition\n * U+10144 GREEK ACROPHONIC ATTIC FIFTY: not included in any glyphset definition\n * U+10145 GREEK ACROPHONIC ATTIC FIVE HUNDRED: not included in any glyphset definition\n * U+10146 GREEK ACROPHONIC ATTIC FIVE THOUSAND: not included in any glyphset definition\n * U+10147 GREEK ACROPHONIC ATTIC FIFTY THOUSAND: not included in any glyphset definition\n * U+10148 GREEK ACROPHONIC ATTIC FIVE TALENTS: not included in any glyphset definition\n * U+10149 GREEK ACROPHONIC ATTIC TEN TALENTS: not included in any glyphset definition\n * U+1014A GREEK ACROPHONIC ATTIC FIFTY TALENTS: not included in any glyphset definition\n * U+1014B GREEK ACROPHONIC ATTIC ONE HUNDRED TALENTS: not included in any glyphset definition\n * U+1014C GREEK ACROPHONIC ATTIC FIVE HUNDRED TALENTS: not included in any glyphset definition\n * U+1014D GREEK ACROPHONIC ATTIC ONE THOUSAND TALENTS: not included in any glyphset definition\n * U+1014E GREEK ACROPHONIC ATTIC FIVE THOUSAND TALENTS: not included in any glyphset definition\n * U+1014F GREEK ACROPHONIC ATTIC FIVE STATERS: not included in any glyphset definition\n * U+10150 GREEK ACROPHONIC ATTIC TEN STATERS: not included in any glyphset definition\n * U+10151 GREEK ACROPHONIC ATTIC FIFTY STATERS: not included in any glyphset definition\n * U+10152 GREEK ACROPHONIC ATTIC ONE HUNDRED STATERS: not included in any glyphset definition\n * U+10153 GREEK ACROPHONIC ATTIC FIVE HUNDRED STATERS: not included in any glyphset definition\n * U+10154 GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS: not included in any glyphset definition\n * U+10155 GREEK ACROPHONIC ATTIC TEN THOUSAND STATERS: not included in any glyphset definition\n * U+10156 GREEK ACROPHONIC ATTIC FIFTY THOUSAND STATERS: not included in any glyphset definition\n * U+10157 GREEK ACROPHONIC ATTIC TEN MNAS: not included in any glyphset definition\n * U+10158 GREEK ACROPHONIC HERAEUM ONE PLETHRON: not included in any glyphset definition\n * U+10159 GREEK ACROPHONIC THESPIAN ONE: not included in any glyphset definition\n * U+1015A GREEK ACROPHONIC HERMIONIAN ONE: not included in any glyphset definition\n * U+1015B GREEK ACROPHONIC EPIDAUREAN TWO: not included in any glyphset definition\n * U+1015C GREEK ACROPHONIC THESPIAN TWO: not included in any glyphset definition\n * U+1015D GREEK ACROPHONIC CYRENAIC TWO DRACHMAS: not included in any glyphset definition\n * U+1015E GREEK ACROPHONIC EPIDAUREAN TWO DRACHMAS: not included in any glyphset definition\n * U+1015F GREEK ACROPHONIC TROEZENIAN FIVE: not included in any glyphset definition\n * U+10160 GREEK ACROPHONIC TROEZENIAN TEN: not included in any glyphset definition\n * U+10161 GREEK ACROPHONIC TROEZENIAN TEN ALTERNATE FORM: not included in any glyphset definition\n * U+10162 GREEK ACROPHONIC HERMIONIAN TEN: not included in any glyphset definition\n * U+10163 GREEK ACROPHONIC MESSENIAN TEN: not included in any glyphset definition\n * U+10164 GREEK ACROPHONIC THESPIAN TEN: not included in any glyphset definition\n * U+10165 GREEK ACROPHONIC THESPIAN THIRTY: not included in any glyphset definition\n * U+10166 GREEK ACROPHONIC TROEZENIAN FIFTY: not included in any glyphset definition\n * U+10167 GREEK ACROPHONIC TROEZENIAN FIFTY ALTERNATE FORM: not included in any glyphset definition\n * U+10168 GREEK ACROPHONIC HERMIONIAN FIFTY: not included in any glyphset definition\n * U+10169 GREEK ACROPHONIC THESPIAN FIFTY: not included in any glyphset definition\n * U+1016A GREEK ACROPHONIC THESPIAN ONE HUNDRED: not included in any glyphset definition\n * U+1016B GREEK ACROPHONIC THESPIAN THREE HUNDRED: not included in any glyphset definition\n * U+1016C GREEK ACROPHONIC EPIDAUREAN FIVE HUNDRED: not included in any glyphset definition\n * U+1016D GREEK ACROPHONIC TROEZENIAN FIVE HUNDRED: not included in any glyphset definition\n * U+1016E GREEK ACROPHONIC THESPIAN FIVE HUNDRED: not included in any glyphset definition\n * U+1016F GREEK ACROPHONIC CARYSTIAN FIVE HUNDRED: not included in any glyphset definition\n * U+10170 GREEK ACROPHONIC NAXIAN FIVE HUNDRED: not included in any glyphset definition\n * U+10171 GREEK ACROPHONIC THESPIAN ONE THOUSAND: not included in any glyphset definition\n * U+10172 GREEK ACROPHONIC THESPIAN FIVE THOUSAND: not included in any glyphset definition\n * U+10173 GREEK ACROPHONIC DELPHIC FIVE MNAS: not included in any glyphset definition\n * U+10174 GREEK ACROPHONIC STRATIAN FIFTY MNAS: not included in any glyphset definition\n * U+10175 GREEK ONE HALF SIGN: not included in any glyphset definition\n * U+10176 GREEK ONE HALF SIGN ALTERNATE FORM: not included in any glyphset definition\n * U+10177 GREEK TWO THIRDS SIGN: not included in any glyphset definition\n * U+10178 GREEK THREE QUARTERS SIGN: not included in any glyphset definition\n * U+10179 GREEK YEAR SIGN: not included in any glyphset definition\n * U+1017A GREEK TALENT SIGN: not included in any glyphset definition\n * U+1017B GREEK DRACHMA SIGN: not included in any glyphset definition\n * U+1017C GREEK OBOL SIGN: not included in any glyphset definition\n * U+1017D GREEK TWO OBOLS SIGN: not included in any glyphset definition\n * U+1017E GREEK THREE OBOLS SIGN: not included in any glyphset definition\n * U+1017F GREEK FOUR OBOLS SIGN: not included in any glyphset definition\n * U+10180 GREEK FIVE OBOLS SIGN: not included in any glyphset definition\n * U+10181 GREEK METRETES SIGN: not included in any glyphset definition\n * U+10182 GREEK KYATHOS BASE SIGN: not included in any glyphset definition\n * U+10183 GREEK LITRA SIGN: not included in any glyphset definition\n * U+10184 GREEK OUNKIA SIGN: not included in any glyphset definition\n * U+10185 GREEK XESTES SIGN: not included in any glyphset definition\n * U+10186 GREEK ARTABE SIGN: not included in any glyphset definition\n * U+10187 GREEK AROURA SIGN: not included in any glyphset definition\n * U+10188 GREEK GRAMMA SIGN: not included in any glyphset definition\n * U+10189 GREEK TRYBLION BASE SIGN: not included in any glyphset definition\n * U+1018A GREEK ZERO SIGN: not included in any glyphset definition\n * U+10190 ROMAN SEXTANS SIGN: not included in any glyphset definition\n * U+10191 ROMAN UNCIA SIGN: not included in any glyphset definition\n * U+10192 ROMAN SEMUNCIA SIGN: not included in any glyphset definition\n * U+10193 ROMAN SEXTULA SIGN: not included in any glyphset definition\n * U+10194 ROMAN DIMIDIA SEXTULA SIGN: not included in any glyphset definition\n * U+10195 ROMAN SILIQUA SIGN: not included in any glyphset definition\n * U+10196 ROMAN DENARIUS SIGN: not included in any glyphset definition\n * U+10197 ROMAN QUINARIUS SIGN: not included in any glyphset definition\n * U+10198 ROMAN SESTERTIUS SIGN: not included in any glyphset definition\n * U+10199 ROMAN DUPONDIUS SIGN: not included in any glyphset definition\n * U+1019A ROMAN AS SIGN: not included in any glyphset definition\n * U+1019B ROMAN CENTURIAL SIGN: not included in any glyphset definition\n * U+10300 OLD ITALIC LETTER A: try adding old-italic\n * U+10301 OLD ITALIC LETTER BE: try adding old-italic\n * U+10302 OLD ITALIC LETTER KE: try adding old-italic\n * U+10303 OLD ITALIC LETTER DE: try adding old-italic\n * U+10304 OLD ITALIC LETTER E: try adding old-italic\n * U+10305 OLD ITALIC LETTER VE: try adding old-italic\n * U+10306 OLD ITALIC LETTER ZE: try adding old-italic\n * U+10307 OLD ITALIC LETTER HE: try adding old-italic\n * U+10308 OLD ITALIC LETTER THE: try adding old-italic\n * U+10309 OLD ITALIC LETTER I: try adding old-italic\n * U+1030A OLD ITALIC LETTER KA: try adding old-italic\n * U+1030B OLD ITALIC LETTER EL: try adding old-italic\n * U+1030C OLD ITALIC LETTER EM: try adding old-italic\n * U+1030D OLD ITALIC LETTER EN: try adding old-italic\n * U+1030E OLD ITALIC LETTER ESH: try adding old-italic\n * U+1030F OLD ITALIC LETTER O: try adding old-italic\n * U+10310 OLD ITALIC LETTER PE: try adding old-italic\n * U+10311 OLD ITALIC LETTER SHE: try adding old-italic\n * U+10312 OLD ITALIC LETTER KU: try adding old-italic\n * U+10313 OLD ITALIC LETTER ER: try adding old-italic\n * U+10314 OLD ITALIC LETTER ES: try adding old-italic\n * U+10315 OLD ITALIC LETTER TE: try adding old-italic\n * U+10316 OLD ITALIC LETTER U: try adding old-italic\n * U+10317 OLD ITALIC LETTER EKS: try adding old-italic\n * U+10318 OLD ITALIC LETTER PHE: try adding old-italic\n * U+10319 OLD ITALIC LETTER KHE: try adding old-italic\n * U+1031A OLD ITALIC LETTER EF: try adding old-italic\n * U+1031B OLD ITALIC LETTER ERS: try adding old-italic\n * U+1031C OLD ITALIC LETTER CHE: try adding old-italic\n * U+1031D OLD ITALIC LETTER II: try adding old-italic\n * U+1031E OLD ITALIC LETTER UU: try adding old-italic\n * U+10320 OLD ITALIC NUMERAL ONE: try adding old-italic\n * U+10321 OLD ITALIC NUMERAL FIVE: try adding old-italic\n * U+10322 OLD ITALIC NUMERAL TEN: try adding old-italic\n * U+10323 OLD ITALIC NUMERAL FIFTY: try adding old-italic\n * U+10330 GOTHIC LETTER AHSA: try adding gothic\n * U+10331 GOTHIC LETTER BAIRKAN: try adding gothic\n * U+10332 GOTHIC LETTER GIBA: try adding gothic\n * U+10333 GOTHIC LETTER DAGS: try adding gothic\n * U+10334 GOTHIC LETTER AIHVUS: try adding gothic\n * U+10335 GOTHIC LETTER QAIRTHRA: try adding gothic\n * U+10336 GOTHIC LETTER IUJA: try adding gothic\n * U+10337 GOTHIC LETTER HAGL: try adding gothic\n * U+10338 GOTHIC LETTER THIUTH: try adding gothic\n * U+10339 GOTHIC LETTER EIS: try adding gothic\n * U+1033A GOTHIC LETTER KUSMA: try adding gothic\n * U+1033B GOTHIC LETTER LAGUS: try adding gothic\n * U+1033C GOTHIC LETTER MANNA: try adding gothic\n * U+1033D GOTHIC LETTER NAUTHS: try adding gothic\n * U+1033E GOTHIC LETTER JER: try adding gothic\n * U+1033F GOTHIC LETTER URUS: try adding gothic\n * U+10340 GOTHIC LETTER PAIRTHRA: try adding gothic\n * U+10341 GOTHIC LETTER NINETY: try adding gothic\n * U+10342 GOTHIC LETTER RAIDA: try adding gothic\n * U+10343 GOTHIC LETTER SAUIL: try adding gothic\n * U+10344 GOTHIC LETTER TEIWS: try adding gothic\n * U+10345 GOTHIC LETTER WINJA: try adding gothic\n * U+10346 GOTHIC LETTER FAIHU: try adding gothic\n * U+10347 GOTHIC LETTER IGGWS: try adding gothic\n * U+10348 GOTHIC LETTER HWAIR: try adding gothic\n * U+10349 GOTHIC LETTER OTHAL: try adding gothic\n * U+1034A GOTHIC LETTER NINE HUNDRED: try adding gothic\n * U+1D200 GREEK VOCAL NOTATION SYMBOL-1: not included in any glyphset definition\n * U+1D201 GREEK VOCAL NOTATION SYMBOL-2: not included in any glyphset definition\n * U+1D202 GREEK VOCAL NOTATION SYMBOL-3: not included in any glyphset definition\n * U+1D203 GREEK VOCAL NOTATION SYMBOL-4: not included in any glyphset definition\n * U+1D204 GREEK VOCAL NOTATION SYMBOL-5: not included in any glyphset definition\n * U+1D205 GREEK VOCAL NOTATION SYMBOL-6: not included in any glyphset definition\n * U+1D206 GREEK VOCAL NOTATION SYMBOL-7: not included in any glyphset definition\n * U+1D207 GREEK VOCAL NOTATION SYMBOL-8: not included in any glyphset definition\n * U+1D208 GREEK VOCAL NOTATION SYMBOL-9: not included in any glyphset definition\n * U+1D209 GREEK VOCAL NOTATION SYMBOL-10: not included in any glyphset definition\n * U+1D20A GREEK VOCAL NOTATION SYMBOL-11: not included in any glyphset definition\n * U+1D20B GREEK VOCAL NOTATION SYMBOL-12: not included in any glyphset definition\n * U+1D20C GREEK VOCAL NOTATION SYMBOL-13: not included in any glyphset definition\n * U+1D20D GREEK VOCAL NOTATION SYMBOL-14: not included in any glyphset definition\n * U+1D20E GREEK VOCAL NOTATION SYMBOL-15: not included in any glyphset definition\n * U+1D20F GREEK VOCAL NOTATION SYMBOL-16: not included in any glyphset definition\n * U+1D210 GREEK VOCAL NOTATION SYMBOL-17: not included in any glyphset definition\n * U+1D211 GREEK VOCAL NOTATION SYMBOL-18: not included in any glyphset definition\n * U+1D212 GREEK VOCAL NOTATION SYMBOL-19: not included in any glyphset definition\n * U+1D213 GREEK VOCAL NOTATION SYMBOL-20: not included in any glyphset definition\n * U+1D214 GREEK VOCAL NOTATION SYMBOL-21: not included in any glyphset definition\n * U+1D215 GREEK VOCAL NOTATION SYMBOL-22: not included in any glyphset definition\n * U+1D216 GREEK VOCAL NOTATION SYMBOL-23: not included in any glyphset definition\n * U+1D217 GREEK VOCAL NOTATION SYMBOL-24: not included in any glyphset definition\n * U+1D218 GREEK VOCAL NOTATION SYMBOL-50: not included in any glyphset definition\n * U+1D219 GREEK VOCAL NOTATION SYMBOL-51: not included in any glyphset definition\n * U+1D21A GREEK VOCAL NOTATION SYMBOL-52: not included in any glyphset definition\n * U+1D21B GREEK VOCAL NOTATION SYMBOL-53: not included in any glyphset definition\n * U+1D21C GREEK VOCAL NOTATION SYMBOL-54: not included in any glyphset definition\n * U+1D21D GREEK INSTRUMENTAL NOTATION SYMBOL-1: not included in any glyphset definition\n * U+1D21E GREEK INSTRUMENTAL NOTATION SYMBOL-2: not included in any glyphset definition\n * U+1D21F GREEK INSTRUMENTAL NOTATION SYMBOL-4: not included in any glyphset definition\n * U+1D220 GREEK INSTRUMENTAL NOTATION SYMBOL-5: not included in any glyphset definition\n * U+1D221 GREEK INSTRUMENTAL NOTATION SYMBOL-7: not included in any glyphset definition\n * U+1D222 GREEK INSTRUMENTAL NOTATION SYMBOL-8: not included in any glyphset definition\n * U+1D223 GREEK INSTRUMENTAL NOTATION SYMBOL-11: not included in any glyphset definition\n * U+1D224 GREEK INSTRUMENTAL NOTATION SYMBOL-12: not included in any glyphset definition\n * U+1D225 GREEK INSTRUMENTAL NOTATION SYMBOL-13: not included in any glyphset definition\n * U+1D226 GREEK INSTRUMENTAL NOTATION SYMBOL-14: not included in any glyphset definition\n * U+1D227 GREEK INSTRUMENTAL NOTATION SYMBOL-17: not included in any glyphset definition\n * U+1D228 GREEK INSTRUMENTAL NOTATION SYMBOL-18: not included in any glyphset definition\n * U+1D229 GREEK INSTRUMENTAL NOTATION SYMBOL-19: not included in any glyphset definition\n * U+1D22A GREEK INSTRUMENTAL NOTATION SYMBOL-23: not included in any glyphset definition\n * U+1D22B GREEK INSTRUMENTAL NOTATION SYMBOL-24: not included in any glyphset definition\n * U+1D22C GREEK INSTRUMENTAL NOTATION SYMBOL-25: not included in any glyphset definition\n * U+1D22D GREEK INSTRUMENTAL NOTATION SYMBOL-26: not included in any glyphset definition\n * U+1D22E GREEK INSTRUMENTAL NOTATION SYMBOL-27: not included in any glyphset definition\n * U+1D22F GREEK INSTRUMENTAL NOTATION SYMBOL-29: not included in any glyphset definition\n * U+1D230 GREEK INSTRUMENTAL NOTATION SYMBOL-30: not included in any glyphset definition\n * U+1D231 GREEK INSTRUMENTAL NOTATION SYMBOL-32: not included in any glyphset definition\n * U+1D232 GREEK INSTRUMENTAL NOTATION SYMBOL-36: not included in any glyphset definition\n * U+1D233 GREEK INSTRUMENTAL NOTATION SYMBOL-37: not included in any glyphset definition\n * U+1D234 GREEK INSTRUMENTAL NOTATION SYMBOL-38: not included in any glyphset definition\n * U+1D235 GREEK INSTRUMENTAL NOTATION SYMBOL-39: not included in any glyphset definition\n * U+1D236 GREEK INSTRUMENTAL NOTATION SYMBOL-40: not included in any glyphset definition\n * U+1D237 GREEK INSTRUMENTAL NOTATION SYMBOL-42: not included in any glyphset definition\n * U+1D238 GREEK INSTRUMENTAL NOTATION SYMBOL-43: not included in any glyphset definition\n * U+1D239 GREEK INSTRUMENTAL NOTATION SYMBOL-45: not included in any glyphset definition\n * U+1D23A GREEK INSTRUMENTAL NOTATION SYMBOL-47: not included in any glyphset definition\n * U+1D23B GREEK INSTRUMENTAL NOTATION SYMBOL-48: not included in any glyphset definition\n * U+1D23C GREEK INSTRUMENTAL NOTATION SYMBOL-49: not included in any glyphset definition\n * U+1D23D GREEK INSTRUMENTAL NOTATION SYMBOL-50: not included in any glyphset definition\n * U+1D23E GREEK INSTRUMENTAL NOTATION SYMBOL-51: not included in any glyphset definition\n * U+1D23F GREEK INSTRUMENTAL NOTATION SYMBOL-52: not included in any glyphset definition\n * U+1D240 GREEK INSTRUMENTAL NOTATION SYMBOL-53: not included in any glyphset definition\n * U+1D241 GREEK INSTRUMENTAL NOTATION SYMBOL-54: not included in any glyphset definition\n * U+1D242 COMBINING GREEK MUSICAL TRISEME: not included in any glyphset definition\n * U+1D243 COMBINING GREEK MUSICAL TETRASEME: not included in any glyphset definition\n * U+1D244 COMBINING GREEK MUSICAL PENTASEME: not included in any glyphset definition\n * U+1D245 GREEK MUSICAL LEIMMA: not included in any glyphset definition\n * U+1D459 MATHEMATICAL ITALIC SMALL L: not included in any glyphset definition\n * U+1D504 MATHEMATICAL FRAKTUR CAPITAL A: not included in any glyphset definition\n * U+1D505 MATHEMATICAL FRAKTUR CAPITAL B: not included in any glyphset definition\n * U+1D50A MATHEMATICAL FRAKTUR CAPITAL G: not included in any glyphset definition\n * U+1D50E MATHEMATICAL FRAKTUR CAPITAL K: not included in any glyphset definition\n * U+1D50F MATHEMATICAL FRAKTUR CAPITAL L: not included in any glyphset definition\n * U+1D510 MATHEMATICAL FRAKTUR CAPITAL M: not included in any glyphset definition\n * U+1D513 MATHEMATICAL FRAKTUR CAPITAL P: not included in any glyphset definition\n * U+1D514 MATHEMATICAL FRAKTUR CAPITAL Q: not included in any glyphset definition\n * U+1D516 MATHEMATICAL FRAKTUR CAPITAL S: not included in any glyphset definition\n * U+1D517 MATHEMATICAL FRAKTUR CAPITAL T: not included in any glyphset definition\n * U+1D519 MATHEMATICAL FRAKTUR CAPITAL V: not included in any glyphset definition\n * U+1D52D MATHEMATICAL FRAKTUR SMALL P: not included in any glyphset definition\n * U+F0000 : not included in any glyphset definition\n * U+F0001 : not included in any glyphset definition\n * U+F0002 : not included in any glyphset definition\n * U+F0003 : not included in any glyphset definition\n * U+F0004 : not included in any glyphset definition\n * U+F0005 : not included in any glyphset definition\n * U+F0006 : not included in any glyphset definition\n * U+F0007 : not included in any glyphset definition\n * U+F0010 : not included in any glyphset definition\n * U+F0011 : not included in any glyphset definition\n * U+F0013 : not included in any glyphset definition\n * U+F0014 : not included in any glyphset definition\n * U+F0015 : not included in any glyphset definition\n * U+F001A : not included in any glyphset definition\n * U+F0020 : not included in any glyphset definition\n * U+F0021 : not included in any glyphset definition\n * U+F0022 : not included in any glyphset definition\n * U+F0023 : not included in any glyphset definition\n * U+F0024 : not included in any glyphset definition\n * U+F0026 : not included in any glyphset definition\n * U+F0028 : not included in any glyphset definition\n * U+F0029 : not included in any glyphset definition\n * U+F002A : not included in any glyphset definition\n * U+F0030 : not included in any glyphset definition\n * U+F0031 : not included in any glyphset definition\n * U+F0034 : not included in any glyphset definition\n * U+F0035 : not included in any glyphset definition\n * U+F0036 : not included in any glyphset definition\n * U+F0037 : not included in any glyphset definition\n * U+F0038 : not included in any glyphset definition\n * U+F0039 : not included in any glyphset definition\n * U+F003A : not included in any glyphset definition\n * U+F003C : not included in any glyphset definition\n * U+F003D : not included in any glyphset definition\n * U+F003E : not included in any glyphset definition\n * U+F003F : not included in any glyphset definition\n * U+F0040 : not included in any glyphset definition\n * U+F0041 : not included in any glyphset definition\n * U+F0042 : not included in any glyphset definition\n * U+F0044 : not included in any glyphset definition\n * U+F0045 : not included in any glyphset definition\n * U+F0046 : not included in any glyphset definition\n * U+F0048 : not included in any glyphset definition\n * U+F0049 : not included in any glyphset definition\n * U+F004A : not included in any glyphset definition\n * U+F004B : not included in any glyphset definition\n * U+F004C : not included in any glyphset definition\n * U+F004F : not included in any glyphset definition\n * U+F0050 : not included in any glyphset definition\n * U+F0052 : not included in any glyphset definition\n * U+F0053 : not included in any glyphset definition\n * U+F0054 : not included in any glyphset definition\n * U+F0056 : not included in any glyphset definition\n * U+F0057 : not included in any glyphset definition\n * U+F0058 : not included in any glyphset definition\n * U+F0059 : not included in any glyphset definition\n * U+F005A : not included in any glyphset definition\n * U+F005B : not included in any glyphset definition\n * U+F005C : not included in any glyphset definition\n * U+F0060 : not included in any glyphset definition\n * U+F0061 : not included in any glyphset definition\n * U+F0062 : not included in any glyphset definition\n * U+F0063 : not included in any glyphset definition\n * U+F0064 : not included in any glyphset definition\n * U+F0065 : not included in any glyphset definition\n * U+F0066 : not included in any glyphset definition\n * U+F0067 : not included in any glyphset definition\n * U+F0068 : not included in any glyphset definition\n * U+F0069 : not included in any glyphset definition\n * U+F006A : not included in any glyphset definition\n * U+F006B : not included in any glyphset definition\n * U+F006C : not included in any glyphset definition\n * U+F0070 : not included in any glyphset definition\n * U+F0072 : not included in any glyphset definition\n * U+F0073 : not included in any glyphset definition\n * U+F0074 : not included in any glyphset definition\n * U+F0076 : not included in any glyphset definition\n * U+F0077 : not included in any glyphset definition\n * U+F0078 : not included in any glyphset definition\n * U+F007D : not included in any glyphset definition\n * U+F007F : not included in any glyphset definition\n * U+F0080 : not included in any glyphset definition\n * U+F0081 : not included in any glyphset definition\n * U+F0086 : not included in any glyphset definition\n * U+F0087 : not included in any glyphset definition\n * U+F0088 : not included in any glyphset definition\n * U+F0089 : not included in any glyphset definition\n * U+F008A : not included in any glyphset definition\n * U+F008B : not included in any glyphset definition\n * U+F008D : not included in any glyphset definition\n * U+F008E : not included in any glyphset definition\n * U+F0090 : not included in any glyphset definition\n * U+F0091 : not included in any glyphset definition\n * U+F0092 : not included in any glyphset definition\n * U+F0093 : not included in any glyphset definition\n * U+F0096 : not included in any glyphset definition\n * U+F0098 : not included in any glyphset definition\n * U+F009A : not included in any glyphset definition\n * U+F009B : not included in any glyphset definition\n * U+F009C : not included in any glyphset definition\n * U+F009D : not included in any glyphset definition\n * U+F00A1 : not included in any glyphset definition\n * U+F00A2 : not included in any glyphset definition\n * U+F00A3 : not included in any glyphset definition\n * U+F00A4 : not included in any glyphset definition\n * U+F00A5 : not included in any glyphset definition\n * U+F00A6 : not included in any glyphset definition\n * U+F00A9 : not included in any glyphset definition\n * U+F00AA : not included in any glyphset definition\n * U+F00AB : not included in any glyphset definition\n * U+F00AD : not included in any glyphset definition\n * U+F00B2 : not included in any glyphset definition\n * U+F00B3 : not included in any glyphset definition\n * U+F00B4 : not included in any glyphset definition\n * U+F00B5 : not included in any glyphset definition\n * U+F00B6 : not included in any glyphset definition\n * U+F00B7 : not included in any glyphset definition\n * U+F00B8 : not included in any glyphset definition\n * U+F00BA : not included in any glyphset definition\n * U+F00BC : not included in any glyphset definition\n * U+F00BD : not included in any glyphset definition\n * U+F00BE : not included in any glyphset definition\n * U+F00BF : not included in any glyphset definition\n * U+F00C0 : not included in any glyphset definition\n * U+F00C1 : not included in any glyphset definition\n * U+F00C2 : not included in any glyphset definition\n * U+F00C5 : not included in any glyphset definition\n * U+F00C6 : not included in any glyphset definition\n * U+F00C7 : not included in any glyphset definition\n * U+F00C8 : not included in any glyphset definition\n * U+F00C9 : not included in any glyphset definition\n * U+F00CA : not included in any glyphset definition\n * U+F00CB : not included in any glyphset definition\n * U+F00CC : not included in any glyphset definition\n * U+F00CD : not included in any glyphset definition\n * U+F00D0 : not included in any glyphset definition\n * U+F00D1 : not included in any glyphset definition\n * U+F00D2 : not included in any glyphset definition\n * U+F00D3 : not included in any glyphset definition\n * U+F00D4 : not included in any glyphset definition\n * U+F00D5 : not included in any glyphset definition\n * U+F00D6 : not included in any glyphset definition\n * U+F00D7 : not included in any glyphset definition\n * U+F00D8 : not included in any glyphset definition\n * U+F00DC : not included in any glyphset definition\n * U+F00DE : not included in any glyphset definition\n * U+F00DF : not included in any glyphset definition\n * U+F00E0 : not included in any glyphset definition\n * U+F00E1 : not included in any glyphset definition\n * U+F00E4 : not included in any glyphset definition\n * U+F00E5 : not included in any glyphset definition\n * U+F00E8 : not included in any glyphset definition\n * U+F00E9 : not included in any glyphset definition\n * U+F00EA : not included in any glyphset definition\n * U+F00EB : not included in any glyphset definition\n * U+F00EF : not included in any glyphset definition\n * U+F00F0 : not included in any glyphset definition\n * U+F00F1 : not included in any glyphset definition\n * U+F00F2 : not included in any glyphset definition\n * U+F00F4 : not included in any glyphset definition\n * U+F00F5 : not included in any glyphset definition\n * U+F00F6 : not included in any glyphset definition\n * U+F00F7 : not included in any glyphset definition\n * U+F00F9 : not included in any glyphset definition\n * U+F0100 : not included in any glyphset definition\n * U+F0101 : not included in any glyphset definition\n * U+F0102 : not included in any glyphset definition\n * U+F0103 : not included in any glyphset definition\n * U+F0104 : not included in any glyphset definition\n * U+F0105 : not included in any glyphset definition\n * U+F0106 : not included in any glyphset definition\n * U+F0107 : not included in any glyphset definition\n * U+F0110 : not included in any glyphset definition\n * U+F0111 : not included in any glyphset definition\n * U+F0113 : not included in any glyphset definition\n * U+F0114 : not included in any glyphset definition\n * U+F0115 : not included in any glyphset definition\n * U+F011A : not included in any glyphset definition\n * U+F0120 : not included in any glyphset definition\n * U+F0121 : not included in any glyphset definition\n * U+F0122 : not included in any glyphset definition\n * U+F0123 : not included in any glyphset definition\n * U+F0124 : not included in any glyphset definition\n * U+F0126 : not included in any glyphset definition\n * U+F0128 : not included in any glyphset definition\n * U+F0129 : not included in any glyphset definition\n * U+F012A : not included in any glyphset definition\n * U+F0130 : not included in any glyphset definition\n * U+F0131 : not included in any glyphset definition\n * U+F0134 : not included in any glyphset definition\n * U+F0135 : not included in any glyphset definition\n * U+F0136 : not included in any glyphset definition\n * U+F0137 : not included in any glyphset definition\n * U+F0138 : not included in any glyphset definition\n * U+F0139 : not included in any glyphset definition\n * U+F013A : not included in any glyphset definition\n * U+F013C : not included in any glyphset definition\n * U+F013D : not included in any glyphset definition\n * U+F013E : not included in any glyphset definition\n * U+F013F : not included in any glyphset definition\n * U+F0140 : not included in any glyphset definition\n * U+F0141 : not included in any glyphset definition\n * U+F0142 : not included in any glyphset definition\n * U+F0144 : not included in any glyphset definition\n * U+F0145 : not included in any glyphset definition\n * U+F0146 : not included in any glyphset definition\n * U+F0148 : not included in any glyphset definition\n * U+F0149 : not included in any glyphset definition\n * U+F014A : not included in any glyphset definition\n * U+F014B : not included in any glyphset definition\n * U+F014C : not included in any glyphset definition\n * U+F014F : not included in any glyphset definition\n * U+F0150 : not included in any glyphset definition\n * U+F0152 : not included in any glyphset definition\n * U+F0159 : not included in any glyphset definition\n * U+F015B : not included in any glyphset definition\n * U+F015C : not included in any glyphset definition\n * U+F0172 : not included in any glyphset definition\n * U+F0173 : not included in any glyphset definition\n * U+F0174 : not included in any glyphset definition\n * U+F0177 : not included in any glyphset definition\n * U+F0178 : not included in any glyphset definition\n * U+F017D : not included in any glyphset definition\n * U+F017F : not included in any glyphset definition\n * U+F0180 : not included in any glyphset definition\n * U+F0181 : not included in any glyphset definition\n * U+F0186 : not included in any glyphset definition\n * U+F0187 : not included in any glyphset definition\n * U+F0188 : not included in any glyphset definition\n * U+F0189 : not included in any glyphset definition\n * U+F018A : not included in any glyphset definition\n * U+F018B : not included in any glyphset definition\n * U+F018E : not included in any glyphset definition\n * U+F0190 : not included in any glyphset definition\n * U+F0191 : not included in any glyphset definition\n * U+F0192 : not included in any glyphset definition\n * U+F0193 : not included in any glyphset definition\n * U+F0196 : not included in any glyphset definition\n * U+F019A : not included in any glyphset definition\n * U+F01AA : not included in any glyphset definition\n * U+F01B7 : not included in any glyphset definition\n * U+F01B8 : not included in any glyphset definition\n * U+F01BA : not included in any glyphset definition\n * U+F01BC : not included in any glyphset definition\n * U+F01BD : not included in any glyphset definition\n * U+F01BE : not included in any glyphset definition\n * U+F01BF : not included in any glyphset definition\n * U+F01C0 : not included in any glyphset definition\n * U+F01C1 : not included in any glyphset definition\n * U+F01C2 : not included in any glyphset definition\n * U+F01C5 : not included in any glyphset definition\n * U+F01C6 : not included in any glyphset definition\n * U+F01C7 : not included in any glyphset definition\n * U+F01C8 : not included in any glyphset definition\n * U+F01C9 : not included in any glyphset definition\n * U+F01CA : not included in any glyphset definition\n * U+F01CB : not included in any glyphset definition\n * U+F01CD : not included in any glyphset definition\n * U+F01D0 : not included in any glyphset definition\n * U+F01D1 : not included in any glyphset definition\n * U+F01D2 : not included in any glyphset definition\n * U+F01D3 : not included in any glyphset definition\n * U+F01D4 : not included in any glyphset definition\n * U+F01DC : not included in any glyphset definition\n * U+F01E0 : not included in any glyphset definition\n * U+F01E1 : not included in any glyphset definition\n * U+F01E5 : not included in any glyphset definition\n * U+F01E8 : not included in any glyphset definition\n * U+F01E9 : not included in any glyphset definition\n * U+F01F6 : not included in any glyphset definition\n * U+F0200 : not included in any glyphset definition\n * U+F0201 : not included in any glyphset definition\n * U+F0202 : not included in any glyphset definition\n * U+F0203 : not included in any glyphset definition\n * U+F0204 : not included in any glyphset definition\n * U+F0205 : not included in any glyphset definition\n * U+F0206 : not included in any glyphset definition\n * U+F0207 : not included in any glyphset definition\n * U+F0208 : not included in any glyphset definition\n * U+F0209 : not included in any glyphset definition\n * U+F020A : not included in any glyphset definition\n * U+F020B : not included in any glyphset definition\n * U+F020C : not included in any glyphset definition\n * U+F020D : not included in any glyphset definition\n * U+F020E : not included in any glyphset definition\n * U+F020F : not included in any glyphset definition\n * U+F0210 : not included in any glyphset definition\n * U+F0211 : not included in any glyphset definition\n * U+F0212 : not included in any glyphset definition\n * U+F0213 : not included in any glyphset definition\n * U+F021E : not included in any glyphset definition\n * U+F021F : not included in any glyphset definition\n * U+F0220 : not included in any glyphset definition\n * U+F0221 : not included in any glyphset definition\n * U+F0222 : not included in any glyphset definition\n * U+F0223 : not included in any glyphset definition\n * U+F0224 : not included in any glyphset definition\n * U+F0225 : not included in any glyphset definition\n * U+F0226 : not included in any glyphset definition\n * U+F0227 : not included in any glyphset definition\n * U+F0228 : not included in any glyphset definition\n * U+F0229 : not included in any glyphset definition\n * U+F022A : not included in any glyphset definition\n * U+F022B : not included in any glyphset definition\n * U+F022C : not included in any glyphset definition\n * U+F022D : not included in any glyphset definition\n * U+F022E : not included in any glyphset definition\n * U+F0230 : not included in any glyphset definition\n * U+F0231 : not included in any glyphset definition\n * U+F0232 : not included in any glyphset definition\n * U+F0233 : not included in any glyphset definition\n * U+F0234 : not included in any glyphset definition\n * U+F0235 : not included in any glyphset definition\n * U+F0236 : not included in any glyphset definition\n * U+F0237 : not included in any glyphset definition\n * U+F0238 : not included in any glyphset definition\n * U+F0239 : not included in any glyphset definition\n * U+F023C : not included in any glyphset definition\n * U+F023D : not included in any glyphset definition\n * U+F023E : not included in any glyphset definition\n * U+F023F : not included in any glyphset definition\n * U+F0240 : not included in any glyphset definition\n * U+F0241 : not included in any glyphset definition\n * U+F0242 : not included in any glyphset definition\n * U+F0243 : not included in any glyphset definition\n * U+F0244 : not included in any glyphset definition\n * U+F0245 : not included in any glyphset definition\n * U+F0246 : not included in any glyphset definition\n * U+F0247 : not included in any glyphset definition\n * U+F0248 : not included in any glyphset definition\n * U+F0249 : not included in any glyphset definition\n * U+F024A : not included in any glyphset definition\n * U+F024B : not included in any glyphset definition\n * U+F024C : not included in any glyphset definition\n * U+F024D : not included in any glyphset definition\n * U+F024E : not included in any glyphset definition\n * U+F024F : not included in any glyphset definition\n * U+F0250 : not included in any glyphset definition\n * U+F0251 : not included in any glyphset definition\n * U+F0252 : not included in any glyphset definition\n * U+F0253 : not included in any glyphset definition\n * U+F0254 : not included in any glyphset definition\n * U+F0255 : not included in any glyphset definition\n * U+F0256 : not included in any glyphset definition\n * U+F0257 : not included in any glyphset definition\n * U+F0258 : not included in any glyphset definition\n * U+F0259 : not included in any glyphset definition\n * U+F025A : not included in any glyphset definition\n * U+F025B : not included in any glyphset definition\n * U+F025C : not included in any glyphset definition\n * U+F025D : not included in any glyphset definition\n * U+F025E : not included in any glyphset definition\n * U+F025F : not included in any glyphset definition\n * U+F0260 : not included in any glyphset definition\n * U+F0261 : not included in any glyphset definition\n * U+F0262 : not included in any glyphset definition\n * U+F0263 : not included in any glyphset definition\n * U+F0264 : not included in any glyphset definition\n * U+F0265 : not included in any glyphset definition\n * U+F0266 : not included in any glyphset definition\n * U+F0267 : not included in any glyphset definition\n * U+F0268 : not included in any glyphset definition\n * U+F0269 : not included in any glyphset definition\n * U+F026A : not included in any glyphset definition\n * U+F026B : not included in any glyphset definition\n * U+F0270 : not included in any glyphset definition\n * U+F0271 : not included in any glyphset definition\n * U+F0272 : not included in any glyphset definition\n * U+F0273 : not included in any glyphset definition\n * U+F0274 : not included in any glyphset definition\n * U+F0275 : not included in any glyphset definition\n * U+F0276 : not included in any glyphset definition\n * U+F0277 : not included in any glyphset definition\n * U+F0278 : not included in any glyphset definition\n * U+F0279 : not included in any glyphset definition\n * U+F027A : not included in any glyphset definition\n * U+F027B : not included in any glyphset definition\n * U+F027C : not included in any glyphset definition\n * U+F027D : not included in any glyphset definition\n * U+F027E : not included in any glyphset definition\n * U+F027F : not included in any glyphset definition\n * U+F0280 : not included in any glyphset definition\n * U+F0281 : not included in any glyphset definition\n * U+F0282 : not included in any glyphset definition\n * U+F0283 : not included in any glyphset definition\n * U+F0284 : not included in any glyphset definition\n * U+F0285 : not included in any glyphset definition\n * U+F0286 : not included in any glyphset definition\n * U+F0287 : not included in any glyphset definition\n * U+F0288 : not included in any glyphset definition\n * U+F0289 : not included in any glyphset definition\n * U+F028A : not included in any glyphset definition\n * U+F028B : not included in any glyphset definition\n * U+F028C : not included in any glyphset definition\n * U+F028D : not included in any glyphset definition\n * U+F028E : not included in any glyphset definition\n * U+F028F : not included in any glyphset definition\n * U+F0290 : not included in any glyphset definition\n * U+F0291 : not included in any glyphset definition\n * U+F0292 : not included in any glyphset definition\n * U+F0293 : not included in any glyphset definition\n * U+F0294 : not included in any glyphset definition\n * U+F0295 : not included in any glyphset definition\n * U+F0296 : not included in any glyphset definition\n * U+F0297 : not included in any glyphset definition\n * U+F0298 : not included in any glyphset definition\n * U+F0299 : not included in any glyphset definition\n * U+F029A : not included in any glyphset definition\n * U+F029B : not included in any glyphset definition\n * U+F029C : not included in any glyphset definition\n * U+F029D : not included in any glyphset definition\n * U+F029E : not included in any glyphset definition\n * U+F029F : not included in any glyphset definition\n * U+F02A0 : not included in any glyphset definition\n * U+F02A1 : not included in any glyphset definition\n * U+F02A2 : not included in any glyphset definition\n * U+F02A3 : not included in any glyphset definition\n * U+F02A4 : not included in any glyphset definition\n * U+F02A5 : not included in any glyphset definition\n * U+F02A6 : not included in any glyphset definition\n * U+F02A7 : not included in any glyphset definition\n * U+F02A8 : not included in any glyphset definition\n * U+F02A9 : not included in any glyphset definition\n * U+F02AA : not included in any glyphset definition\n * U+F02AB : not included in any glyphset definition\n * U+F02AC : not included in any glyphset definition\n * U+F02AD : not included in any glyphset definition\n * U+F02AE : not included in any glyphset definition\n * U+F02AF : not included in any glyphset definition\n * U+F02B0 : not included in any glyphset definition\n * U+F02B1 : not included in any glyphset definition\n * U+F02B2 : not included in any glyphset definition\n * U+F02B3 : not included in any glyphset definition\n * U+F02B4 : not included in any glyphset definition\n * U+F02B5 : not included in any glyphset definition\n * U+F02B6 : not included in any glyphset definition\n * U+F02B7 : not included in any glyphset definition\n * U+F02B8 : not included in any glyphset definition\n * U+F02B9 : not included in any glyphset definition\n * U+F02BA : not included in any glyphset definition\n * U+F02C0 : not included in any glyphset definition\n * U+F02C1 : not included in any glyphset definition\n * U+F02C2 : not included in any glyphset definition\n * U+F02C3 : not included in any glyphset definition\n * U+F02C4 : not included in any glyphset definition\n * U+F02C5 : not included in any glyphset definition\n * U+F02C6 : not included in any glyphset definition\n * U+F02C7 : not included in any glyphset definition\n * U+F02C8 : not included in any glyphset definition\n * U+F02C9 : not included in any glyphset definition\n * U+F02CA : not included in any glyphset definition\n * U+F02CB : not included in any glyphset definition\n * U+F02CC : not included in any glyphset definition\n * U+F02CD : not included in any glyphset definition\n * U+F02CE : not included in any glyphset definition\n * U+F02CF : not included in any glyphset definition\n * U+F02D0 : not included in any glyphset definition\n * U+F02D1 : not included in any glyphset definition\n * U+F02D2 : not included in any glyphset definition\n * U+F02D3 : not included in any glyphset definition\n * U+F02D4 : not included in any glyphset definition\n * U+F02D5 : not included in any glyphset definition\n * U+F02E0 : not included in any glyphset definition\n * U+F0300 : not included in any glyphset definition\n * U+F0301 : not included in any glyphset definition\n * U+F0302 : not included in any glyphset definition\n * U+F0303 : not included in any glyphset definition\n * U+F0304 : not included in any glyphset definition\n * U+F0305 : not included in any glyphset definition\n * U+F0306 : not included in any glyphset definition\n * U+F030A : not included in any glyphset definition\n * U+F030B : not included in any glyphset definition\n * U+F030C : not included in any glyphset definition\n * U+F030D : not included in any glyphset definition\n * U+F0310 : not included in any glyphset definition\n * U+F0313 : not included in any glyphset definition\n * U+F0314 : not included in any glyphset definition\n * U+F031B : not included in any glyphset definition\n * U+F031C : not included in any glyphset definition\n * U+F031D : not included in any glyphset definition\n\nOr you can add the above codepoints to one of the subsets supported by the font: `menu`, `greek`, `greek-ext`, `hebrew`, `latin`, `latin-ext` [code: unreachable-subsetting]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that all encoded glyphs in the font are covered by a\n        subset declared in the METADATA.pb. Google Fonts splits the font into\n        a set of subset fonts based on the contents of the `subsets` field and\n        the subset definitions in the `glyphsets` repository.\n\n        Any encoded glyphs which are not by any of these subset definitions\n        will not be served in the subsetted fonts, and so will be unreachable to\n        the end user.\n    ",
                    "result": "WARN",
                    "severity": 2
                },
                {
                    "description": "Substitute copyright, registered and trademark symbols in name table entries.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/unwanted_chars>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No need to substitute copyright, registered and trademark symbols in name table entries of this font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check the OS/2 usWeightClass is appropriate for the font's best SubFamily name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/usweightclass>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass is good",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts expects variable fonts, static ttfs and static otfs to have\n        differing OS/2 usWeightClass values.\n\n        - For Variable Fonts, Thin-Black must be 100-900\n\n        - For static ttfs, Thin-Black can be 100-900 or 250-900\n\n        - For static otfs, Thin-Black must be 250-900\n\n        If static otfs are set lower than 250, text may appear blurry in\n        legacy Windows applications.\n\n        Glyphsapp users can change the usWeightClass value of an instance by adding\n        a 'weightClass' customParameter.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has a license.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/family/has_license>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Found license at '/Users/simon/others-repos/fonts/ofl/cardo/OFL.txt'",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check license file has good copyright string.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_copyright>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "First line in license file is:\n\n\"copyright (c) 2002-2011, david j. perry (hospes02@scholarsfonts.net)\"\n\nwhich does not match the expected format, similar to:\n\n\"Copyright 2022 The Familyname Project Authors (git url)\" [code: bad-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An OFL.txt file's first line should be the font copyright e.g:\n        \"Copyright 2019 The Montserrat Project Authors\n        (https://github.com/julietaula/montserrat)\"\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Check OFL body text is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/license/OFL_body_text>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OFL license body text is correct",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check OFL body text is correct.\n        Often users will accidently delete parts of the body text.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Check copyright namerecords match license file.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "License file OFL.txt exists but NameID 13 (LICENSE DESCRIPTION) value on platform 1 (MACINTOSH) is not specified for that. Value was: \"This Font Software is licensed under the SIL Open Font License, Version 1.1.  This license is available with a FAQ at: https://scripts.sil.org/OFL.\" Must be changed to \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\" [code: wrong]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "License file OFL.txt exists but NameID 13 (LICENSE DESCRIPTION) value on platform 3 (WINDOWS) is not specified for that. Value was: \"This Font Software is licensed under the SIL Open Font License, Version 1.1.  This license is available with a FAQ at: https://scripts.sil.org/OFL.\" Must be changed to \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL\" [code: wrong]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "For now we're still accepting http URLs, but you should consider using https instead.\n [code: http]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known licensing description must be provided in the NameID 14\n        (LICENSE DESCRIPTION) entries of the name table.\n\n        The source of truth for this check (to determine which license is in use) is\n        a file placed side-by-side to your font project including the licensing terms.\n\n        Depending on the chosen license, one of the following string snippets is\n        expected to be found on the NameID 13 (LICENSE DESCRIPTION) entries of the\n        name table:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set\n        of legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "License URL matches License text on name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/license_url>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=1, enc=0, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Please consider using HTTPS URLs at name table entry [plat=3, enc=1, name=13] [code: http-in-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Could not infer the font license. Please ensure NameID 13 (LICENSE DESCRIPTION) is properly set.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A known license URL must be provided in the NameID 14 (LICENSE INFO URL)\n        entry of the name table.\n\n        The source of truth for this check is the licensing text found on the NameID 13\n        entry (LICENSE DESCRIPTION).\n\n        The string snippets used for detecting licensing terms are:\n\n        - \"This Font Software is licensed under the SIL Open Font License, Version 1.1.\n          This license is available with a FAQ at: https://scripts.sil.org/OFL\"\n\n        - \"Licensed under the Apache License, Version 2.0\"\n\n        - \"Licensed under the Ubuntu Font Licence 1.0.\"\n\n\n        Currently accepted licenses are Apache or Open Font License. For a small set of\n        legacy families the Ubuntu Font License may be acceptable as well.\n\n        When in doubt, please choose OFL for new font projects.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Description strings in the name table must not exceed 200 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/description_max_length>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "A few name table entries with ID=10 (NameID.DESCRIPTION) are longer than 200 characters. Please check whether those entries are copyright notices mistakenly stored in the description string entries by a bug in an old FontLab version. If that's the case, then such copyright notices must be removed from these entries. [code: too-long]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An old FontLab version had a bug which caused it to store copyright notices\n        in nameID 10 entries.\n\n        In order to detect those and distinguish them from actual legitimate usage of\n        this name table entry, we expect that such strings do not exceed a reasonable\n        length of 200 chars.\n\n        Longer strings are likely instances of the FontLab bug.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Show hinting filesize impact.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/hinting_impact>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Hinting filesize impact:\n\n |               | /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf          |\n |:------------- | ---------------:|\n | Dehinted Size | 386.8kb |\n | Hinted Size   | 391.1kb   |\n | Increase      | 4.3kb      |\n | Change        | 1.1 %  |\n [code: size-impact]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check is merely informative, displaying and useful comparison of filesizes\n        of hinted versus unhinted font files.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Ensure files are not too large.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/file_size>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font had a reasonable file size",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Serving extremely large font files on Google Fonts causes usability issues.\n        This check ensures that file sizes are reasonable.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Version format is correct in 'name' table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/version_format>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version format in NAME table entries is correct.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has ttfautohint params?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/has_ttfautohint_params>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        },
                        {
                            "message": "Font appears to our heuristic as not hinted using ttfautohint. [code: not-hinted]",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "Font has old ttfautohint applied?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/old_ttfautohint>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Could not detect which version of ttfautohint was used in this font. It is typically specified as a comment in the font version entries of the 'name' table. Such font version strings are currently: ['Version 1.0451', 'Version 1.0451'] [code: version-not-detected]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check if font has been hinted with an outdated version of ttfautohint.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "EPAR table present in font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/epar>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "EPAR table not present in font. To learn more see https://github.com/fonttools/fontbakery/issues/818 [code: lacks-EPAR]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The EPAR table is/was a way of expressing common licensing permissions and\n        restrictions in metadata; while almost nothing supported it, Dave Crossland\n        wonders that adding it to everything in Google Fonts could help make it\n        more popular.\n\n        More info is available at:\n        https://davelab6.github.io/epar/\n    ",
                    "result": "INFO",
                    "severity": 1
                },
                {
                    "description": "Is the Grid-fitting and Scan-conversion Procedure ('gasp') table set to optimize rendering?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gasp>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "These are the ppm ranges declared on the gasp table:\n\nPPM <= 65535:\n\tflag = 0x03\n\t- Use grid-fitting\n\t- Use grayscale rendering\n [code: ranges]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "The gasp range 0xFFFF value 0x03 should be set to 0x0F. [code: unset-flags]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Traditionally version 0 'gasp' tables were set so that font sizes below 8 ppem\n        had no grid fitting but did have antialiasing. From 9-16 ppem, just grid\n        fitting.\n        And fonts above 17ppem had both antialiasing and grid fitting toggled on.\n        The use of accelerated graphics cards and higher resolution screens make this\n        approach obsolete. Microsoft's DirectWrite pushed this even further with much\n        improved rendering built into the OS and apps.\n\n        In this scenario it makes sense to simply toggle all 4 flags ON for all font\n        sizes.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Make sure family name does not begin with a digit.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/familyname_first_char>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font family name first character is not a digit.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Font family names which start with a numeral are often not discoverable\n        in Windows applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there non-ASCII characters in ASCII-only NAME table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/ascii_only_entries>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the ASCII-only NAME table entries contain non-ASCII characteres.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec requires ASCII for the POSTSCRIPT_NAME (nameID 6).\n\n        For COPYRIGHT_NOTICE (nameID 0) ASCII is required because that string should be\n        the same in CFF fonts which also have this requirement in the OpenType spec.\n\n        Note:\n        A common place where we find non-ASCII strings is on name table entries\n        with NameID > 18, which are expressly for localising the ASCII-only IDs\n        into Hindi / Arabic / etc.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only has unique \"full_name\" values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_full_name_values>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique \"full_name\" values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: check if fonts field only contains unique style:weight pairs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/unique_weight_style_pairs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb \"fonts\" field only has unique style:weight pairs.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb license is \"APACHE2\", \"UFL\" or \"OFL\"?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/license>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font license is declared in METADATA.pb as \"OFL\"",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb should contain at least \"menu\" and \"latin\" subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/menu_and_latin>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb contains \"menu\" and \"latin\" subsets.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb subsets should be alphabetically ordered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/subsets_order>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb subsets are not sorted in alphabetical order: Got ['menu', 'greek', 'greek-ext', 'hebrew', 'latin', 'latin-ext'] and expected ['greek', 'greek-ext', 'hebrew', 'latin', 'latin-ext', 'menu'] [code: not-sorted]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Check METADATA.pb includes production subsets.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/includes_production_subsets>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No missing subsets",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb file includes the same subsets as the family in production.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice is the same in all fonts?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright is consistent across family",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check that METADATA.pb family values are all the same.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/familyname>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Family name is the same in all metadata \"fonts\" items.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: According to Google Fonts standards, families should have a Regular style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/has_regular>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family has a Regular style.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Regular should be 400.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/regular_is_400>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Regular has weight = 400.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.name field matches family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checks METADATA.pb font.post_script_name matches postscript name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/post_script_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Postscript name \"Cardo-Regular\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name value matches fullname declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/full_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font fullname \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "Font fullname \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name value should be same as the family name declared on the name table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/font_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK: Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OK: Family name \"Cardo\" is identical in METADATA.pb and on the TTF file.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures consistency between the font name declared on the name table\n        and the contents of the METADATA.pb file.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name and font.post_script_name fields have equivalent values ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_fullname_postscript>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font full_name = \"Cardo\" does not match post_script_name = \"Cardo-Regular\" [code: mismatch]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "METADATA.pb font.filename and font.post_script_name fields have equivalent values?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_filename_postscript>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font fields \"filename\" and \"post_script_name\" have equivalent values.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_name_values>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.name field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.full_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_full_name_values>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Cardo\" in \"Cardo\")",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb font.full_name field contains font name in right format. (\"Cardo\" in \"Cardo\")",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.filename field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_filename_values>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb filename field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.post_script_name field contains font name in right format?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_post_script_name_values>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "METADATA.pb postScriptName field contains font name in right format.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check name ID 25 to end with \"Italic\" for Italic VFs.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_nameid25>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Not an Italic VF.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Due to a bug in (at least) Adobe Indesign, name ID 25\n        needs to be different for Italic VFs than their Upright counterparts.\n        Google Fonts chooses to append \"Italic\" here.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Copyright notices match canonical pattern in METADATA.pb",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/valid_copyright>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb: Copyright notices should match a pattern similar to:\n \"Copyright 2020 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"copyright (c) 2002-2011, david j. perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The expected pattern for the copyright string adheres to the following rules:\n\n        * It must say \"Copyright\" followed by a 4 digit year (optionally followed by\n          a hyphen and another 4 digit year)\n\n        * Then it must say \"The <familyname> Project Authors\"\n\n        * And within parentheses, a URL for a git repository must be provided\n\n        * The check is case insensitive and does not validate whether the familyname\n          is correct, even though we'd expect it is (and we may soon update the check\n          to validate that aspect as well!)\n\n\n        Here is an example of a valid copyright string:\n\n        \"Copyright 2017 The Archivo Black Project Authors\n         (https://github.com/Omnibus-Type/ArchivoBlack)\"\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notices match canonical pattern in fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_copyright>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Copyright (c) 2002-2011, David J. Perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Name Table entry: Copyright notices should match a pattern similar to: \"Copyright 2019 The Familyname Project Authors (git url)\"\nBut instead we have got:\n\"Copyright (c) 2002-2011, David J. Perry (hospes02@scholarsfonts.net)\" [code: bad-notice-format]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "result": "FAIL"
                },
                {
                    "description": "Copyright notice on METADATA.pb should not contain 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/reserved_font_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb copyright field does not contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Copyright notice shouldn't exceed 500 chars.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/copyright_max_length>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright notice string is shorter than 500 chars.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font filenames match font.filename entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/filenames>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filenames in METADATA.pb look good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Note:\n        This check only looks for files in the current directory.\n\n        Font files in subdirectories are checked by these other two checks:\n         - com.google.fonts/check/metadata/undeclared_fonts\n         - com.google.fonts/check/repo/vf_has_static_fonts\n\n        We may want to merge them all into a single check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.style \"italic\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/italic_style>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check only applies to italic fonts.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "result": "SKIP"
                },
                {
                    "description": "METADATA.pb font.style \"normal\" matches font internals?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/normal_style>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb font.style \"normal\" matches font internals.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb font.name and font.full_name fields match the values declared on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/family_and_full_names>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "METADATA.pb familyname and fullName fields match corresponding name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check font name is the same as family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_name_familyname>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name is the same as family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check that font weight has a canonical value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_weight_value>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font weight has a canonical value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check METADATA.pb font weights are correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/os2_weightclass>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 usWeightClass or wght axis value matches weight specified at METADATA.pb",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check METADATA.pb font weights are correct.\n\n        For static fonts, the metadata weight should be the same as the static font's\n        OS/2 usWeightClass.\n\n        For variable fonts, the weight value should be 400 if the font's wght axis range\n        includes 400, otherwise it should be the value closest to 400.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb weight matches postScriptName for static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/match_weight_postscript>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Weight value matches postScriptName.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Font styles are named canonically?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/canonical_style_names>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font styles are named canonically.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check URL on copyright string is the same as in repository_url field.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_repo_urls>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes, perhaps due to copy-pasting, projects may declare different URLs\n        between the font.coyright and the family.sources.repository_url fields.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Check for primary_script",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/primary_script>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Try to guess font's primary script and see if that's set in METADATA.pb.\n        This is an educated guess based on the number of glyphs per script in the font\n        and should be taken with caution.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Stricter unitsPerEm criteria for Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem_strict>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font em size is good (unitsPerEm = 2048).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though the OpenType spec allows unitsPerEm to be any value between 16\n        and 16384, the Google Fonts project aims at a narrower set of reasonable values.\n\n        The spec suggests usage of powers of two in order to get some performance\n        improvements on legacy renderers, so those values are acceptable.\n\n        But values of 500 or 1000 are also acceptable, with the added benefit that it\n        makes upm math easier for designers, while the performance hit of not using a\n        power of two is most likely negligible nowadays.\n\n        Additionally, values above 2048 would likely result in unreasonable\n        filesize increases.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Glyphs are similiar to Google Fonts version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/production_glyphs_similarity>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs are similar in comparison to the Google Fonts version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking direction of slnt axis angles",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/slant_direction>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'slnt' axis values are defined as negative values for a clockwise (right)\n        lean, and positive values for counter-clockwise lean. This is counter-intuitive\n        for many designers who are used to think of a positive slant as a lean to\n        the right.\n\n        This check ensures that the slant axis direction is consistent with the specs.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font names are correct",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/font_names>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Regular missing from full name [code: lacks-regular]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "Font names are good:\n\n| nameID | current | expected |\n| :--- | :--- | :--- |\n| Family Name | Cardo | Cardo |\n| Subfamily Name | Regular | Regular |\n| Full Name | Cardo | Cardo Regular |\n| Poscript Name | Cardo-Regular | Cardo-Regular |",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has several rules which need to be adhered to when\n        setting a font's name table. Please read:\n        https://googlefonts.github.io/gf-guide/statics.html#supported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#style-linking\n        https://googlefonts.github.io/gf-guide/statics.html#unsupported-styles\n        https://googlefonts.github.io/gf-guide/statics.html#single-weight-families\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Copyright field for this font on METADATA.pb matches all copyright notice entries on the name table ?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/nameid/copyright>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Copyright field for this font on METADATA.pb matches copyright notice entries on the name table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has all mandatory 'name' table entries?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/mandatory_entries>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains values for all mandatory name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Length of copyright notice must not exceed 500 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/copyright_length>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All copyright notice name entries on the 'name' table are shorter than 500 characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is an arbitrary max length for the copyright notice field of the name\n        table. We simply don't want such notices to be too long. Typically such notices\n        are actually much shorter than this with a length of roughly 70 or 80\n        characters.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check for font-v versioning.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fontv>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Version string is: \"Version 1.0451\"\nThe version string must ideally include a git commit hash and either a \"dev\" or a \"release\" suffix such as in the example below:\n\"Version 1.3; git-0d08353-release\" [code: bad-format]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The git sha1 tagging and dev/release features of Source Foundry `font-v` tool\n        are awesome and we would love to consider upstreaming the approach into\n        fontmake someday. For now we only emit an INFO if a given font does not yet\n        follow the experimental versioning style, but at some point we may start\n        enforcing it.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Check glyphs do not have components which are themselves components.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_nested_components>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyphs do not contain nested components.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been bugs rendering variable fonts with nested components.\n        Additionally, some static fonts with nested components have been reported\n        to have rendering and printing issues.\n\n        For more info, see:\n        * https://github.com/fonttools/fontbakery/issues/2961\n        * https://github.com/arrowtype/recursive/issues/412\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a static ttf can be generated from a variable font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/generate_static>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts may serve static fonts which have been generated from variable\n        fonts. This test will attempt to generate a static ttf using fontTool's\n        varLib mutator.\n\n        The target font will be the mean of each axis e.g:\n\n        ## VF font axes\n\n        - min weight, max weight = 400, 800\n\n        - min width, max width = 50, 100\n\n        ## Target Instance\n\n        - weight = 600\n\n        - width = 75\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that variable fonts have an HVAR table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/has_HVAR>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Not having a HVAR table can lead to costly text-layout operations on some\n        platforms, which we want to avoid.\n\n        So, all variable fonts on the Google Fonts collection should have an HVAR\n        with valid values.\n\n        More info on the HVAR table can be found at:\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otvaroverview#variation-data-tables-and-miscellaneous-requirements\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Font enables smart dropout control in \"prep\" table instructions?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/smart_dropout>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'prep' table contains instructions enabling smart dropout control.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This setup is meant to ensure consistent rendering quality for fonts across\n        all devices (with different rendering/hinting capabilities).\n\n        Below is the snippet of instructions we expect to see in the fonts:\n        B8 01 FF    PUSHW 0x01FF\n        85          SCANCTRL (unconditinally turn on\n                              dropout control mode)\n        B0 04       PUSHB 0x04\n        8D          SCANTYPE (enable smart dropout control)\n\n        \"Smart dropout control\" means activating rules 1, 2 and 5:\n        Rule 1: If a pixel's center falls within the glyph outline,\n                that pixel is turned on.\n        Rule 2: If a contour falls exactly on a pixel's center,\n                that pixel is turned on.\n        Rule 5: If a scan line between two adjacent pixel centers\n                (either vertical or horizontal) is intersected\n                by both an on-Transition contour and an off-Transition\n                contour and neither of the pixels was already turned on\n                by rules 1 and 2, turn on the pixel which is closer to\n                the midpoint between the on-Transition contour and\n                off-Transition contour. This is \"Smart\" dropout control.\n\n        For more detailed info (such as other rules not enabled in this snippet),\n        please refer to the TrueType Instruction Set documentation.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "There must not be VTT Talk sources in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vttclean>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no tables with VTT Talk sources embedded in the font.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The goal here is to reduce filesizes and improve pageloading when dealing\n        with webfonts.\n\n        The VTT Talk sources are not necessary at runtime and endup being just dead\n        weight when left embedded in the font binaries. The sources should be kept on\n        the project files but stripped out when building release binaries.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Are there unwanted Apple tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/aat>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There are no unwanted AAT tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Apple's TrueType reference manual [1] describes SFNT tables not in the\n        Microsoft OpenType specification [2] and these can sometimes sneak into final\n        release files, but Google Fonts should only have OpenType tables.\n\n        [1] https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6.html\n        [2] https://docs.microsoft.com/en-us/typography/opentype/spec/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check a font's STAT table contains compulsory Axis Values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's STAT table contains compulsory Axis Values which exist\n        in the Google Fonts Axis Registry.\n\n        We cannot determine what Axis Values the user will set for axes such as\n        opsz, GRAD since these axes are unique for each font so we'll skip them.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_instances>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check a font's fvar instance coordinates comply with our guidelines:\n        https://googlefonts.github.io/gf-guide/variable.html#fvar-instances\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All name entries referenced by fvar instances exist on the name table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/fvar_name_entries>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The purpose of this check is to make sure that all name entries referenced\n        by variable font instances do exist in the name table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "PPEM must be an integer on hinted fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/integer_ppem_if_hinted>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_hinted",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Hinted fonts must have head table flag bit 3 set.\n\n        Per https://docs.microsoft.com/en-us/typography/opentype/spec/head,\n        bit 3 of Head::flags decides whether PPEM should be rounded. This bit should\n        always be set for hinted fonts.\n\n        Note:\n        Bit 3 = Force ppem to integer values for all internal scaler math;\n                May use fractional ppem sizes if this bit is clear;\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Are there caret positions declared for every ligature?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/ligature_carets>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font lacks caret position values for ligature glyphs on its GDEF table. [code: lacks-caret-pos]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All ligatures in a font must have corresponding caret (text cursor) positions\n        defined in the GDEF table, otherwhise, users may experience issues with\n        caret rendering.\n\n        If using GlyphsApp or UFOs, ligature carets can be defined as anchors with\n        names starting with 'caret_'. These can be compiled with fontmake as of\n        version v2.4.0.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Is there kerning info for non-ligated sequences?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/kerning_for_non_ligated_sequences>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "GPOS table lacks kerning info for the following non-ligated sequences:\n\n\t- f + f\n\n\t- f + l\n\n\t- l + f\n\n\t- f + i\n\n\t- i + j\n\n\t- j + l\n\n\t- l + i\n\n\t- i + f [code: lacks-kern-info]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with ligatures should have kerning on the corresponding non-ligated\n        sequences for text where ligatures aren't used\n        (eg https://github.com/impallari/Raleway/issues/14).\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Combined length of family and style must not exceed 27 characters.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_and_style_max_length>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All name entries are good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to a GlyphsApp tutorial [1], in order to make sure all versions of\n        Windows recognize it as a valid font file, we must make sure that the\n        concatenated length of the familyname (NameID.FONT_FAMILY_NAME) and\n        style (NameID.FONT_SUBFAMILY_NAME) strings in the name table do not\n        exceed 20 characters.\n\n        After discussing the problem in more detail at FontBakery issue #2179 [2] we\n        decided that allowing up to 27 chars would still be on the safe side, though.\n\n        [1] https://glyphsapp.com/tutorials/multiple-masters-part-3-setting-up-instances\n        [2] https://github.com/fonttools/fontbakery/issues/2179\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table entries should not contain line-breaks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/line_breaks>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Name table entries are all single-line (no line-breaks found).",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are some entries on the name table that may include more than one line\n        of text. The Google Fonts team, though, prefers to keep the name table entries\n        short and simple without line breaks.\n\n        For instance, some designers like to include the full text of a font license in\n        the \"copyright notice\" entry, but for the GFonts collection this entry should\n        only mention year, author and other basic info in a manner enforced by\n        com.google.fonts/check/font_copyright\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table strings must not contain the string 'Reserved Font Name'.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/rfn>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "None of the name table strings contain \"Reserved Font Name\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some designers adopt the \"Reserved Font Name\" clause of the OFL license. This\n        means that the original author reserves the rights to the family name and other\n        people can only distribute modified versions using a different family name.\n\n        Google Fonts published updates to the fonts in the collection in order to fix\n        issues and/or implement further improvements to the fonts. It is important to\n        keep the family name so that users of the webfonts can benefit from the updates.\n        Since it would forbid such usage scenario, all families in the GFonts collection\n        are required to not adopt the RFN clause.\n\n        This check ensures \"Reserved Font Name\" is not mentioned in the name table.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check family name for GF Guide compliance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/name/family_name_compliance>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font name looks good.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks the family name for compliance with the Google Fonts Guide.\n        https://googlefonts.github.io/gf-guide/onboarding.html#new-fonts\n\n        If you want to have your family name added to the CamelCase\n        exceptions list, please submit a pull request to the\n        camelcased_familyname_exceptions.txt file.\n\n        Similarly, abbreviations can be submitted to the\n        abbreviations_familyname_exceptions.txt file.\n\n        These are located in the Lib/fontbakery/data/googlefonts/ directory\n        of the FontBakery source code currently hosted at\n        https://github.com/fonttools/fontbakery/\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Directory name in GFonts repo structure must match NameID 1 of the regular.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/dirname_matches_nameid_1>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "A static fonts directory with at least two fonts must accompany variable fonts",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/vf_has_static_fonts>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Please consider adding a subdirectory called \"static/\" and including in it static font files. [code: missing]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Variable font family directories kept in the google/fonts git repo may include\n        a static/ subdir containing static fonts.\n\n        These files are meant to be served for users that still lack support for\n        variable fonts in their web browsers.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "A font repository should not include FontBakery report files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/fb_report>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A FontBakery report is ephemeral and so should be used for posting issues on a\n        bug-tracker instead of being hosted in the font project repository.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check upstream.yaml file contains all required fields",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/upstream_yaml_has_required_fields>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: upstream_yaml",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If a family has been pushed using the gftools packager, we must check that all\n        the required fields in the upstream.yaml file have been populated.\n    ",
                    "result": "SKIP",
                    "severity": 10
                },
                {
                    "description": "A font repository should not include ZIP files",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/repo/zip_files>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes people check in ZIPs into their font project repositories. While we\n        accept the practice of checking in binaries, we believe that a ZIP is a step\n        too far ;)\n\n        Note: a source purist position is that only source files and build scripts\n        should be checked in.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check generally enforces Google Fonts\u2019 vertical metrics specifications.\n        In particular:\n        * lineGap must be 0\n        * Sum of hhea ascender + abs(descender) + linegap must be\n          between 120% and 200% of UPM\n        * Warning if sum is over 150% of UPM\n\n        The threshold levels 150% (WARN) and 200% (FAIL) are somewhat arbitrarily chosen\n        and may hint at a glaring mistake in the metrics calculations or UPM settings.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/VerticalMetrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Vertical metrics have not regressed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the family already exists on Google Fonts, we need to ensure that the\n        checked family's vertical metrics are similar. This check will test the\n        following schema which was outlined in Font Bakery issue #1162 [1]:\n\n        - The family should visually have the same vertical metrics as the Regular\n          style hosted on Google Fonts.\n\n        - If the family on Google Fonts has differing hhea and typo metrics, the family\n          being checked should use the typo metrics for both the hhea and typo entries.\n\n        - If the family on Google Fonts has use typo metrics not enabled and the family\n          being checked has it enabled, the hhea and typo metrics should use the family\n          on Google Fonts winAscent and winDescent values.\n\n        - If the upms differ, the values must be scaled so the visual appearance is\n          the same.\n\n        [1] https://github.com/fonttools/fontbakery/issues/1162\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font follows the Google Fonts CJK vertical metric schema",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font, not remote_styles",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        CJK fonts have different vertical metrics when compared to Latin fonts.\n        We follow the schema developed by dr Ken Lunde for Source Han Sans and\n        the Noto CJK fonts.\n\n        Our documentation includes further information:\n        https://github.com/googlefonts/gf-docs/tree/main/Spec#cjk-vertical-metrics\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check if the vertical metrics of a CJK family are similar to the same family hosted on Google Fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_vertical_metrics_regressions>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check CJK family has the same vertical metrics as the same family\n        hosted on Google Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font contain less than 150 CJK characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_not_enough_glyphs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_claiming_to_be_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Kana has 150 characters and it's the smallest CJK writing system.\n\n        If a font contains less CJK glyphs than this writing system, we inform the\n        user that some glyphs may be encoded incorrectly.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check variable font instances don't have duplicate names",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont_duplicate_instance_names>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check's purpose is to detect duplicate named instances names in a\n        given variable font.\n        Repeating instance names may be the result of instances for several VF axes\n        defined in `fvar`, but since currently only weight+italic tokens are allowed\n        in instance names as per GF specs, they ended up repeating.\n        Instead, only a base set of fonts for the most default representation of the\n        family can be defined through instances in the `fvar` table, all other\n        instances will have to be left to access through the `STAT` table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs do not contain the ital axis.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/unsupported_axes>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'ital' axis is not supported yet in Google Chrome.\n\n        For the time being, we need to ensure that VFs do not contain this axis.\n        Once browser support is better, we can deprecate this check.\n\n        For more info regarding browser support, see:\n        https://arrowtype.github.io/vf-slnt-test/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure VFs with duplexed axes do not vary horizontal advance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/duplexed_axis_reflow>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Certain axes, such as grade (GRAD) or roundness (ROND), should not\n        change any advanceWidth or kerning data across the font's design space.\n        This is because altering the advance width of glyphs can cause text reflow.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes values are within gf_axisregistry bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_bounds>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Each axis range in a METADATA.pb file must be registered, and within the bounds\n        of the axis definition in the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate METADATA.pb axes tags are defined in gf_axisregistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/gf_axisregistry_valid_tags>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure all axes in a METADATA.pb file are registered in the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        Why does Google Fonts have its own Axis Registry?\n\n        We support a superset of the OpenType axis registry axis set, and use\n        additional metadata for each axis. Axes present in a font file but not in this\n        registry will not function via our API. No variable font is expected to\n        support all of the axes here.\n\n        Any font foundry or distributor library that offers variable fonts has a\n        implicit, latent, de-facto axis registry, which can be extracted by scanning\n        the library for axes' tags, labels, and min/def/max values. While in 2016\n        Microsoft originally offered to include more axes in the OpenType 1.8\n        specification (github.com/microsoft/OpenTypeDesignVariationAxisTags), as of\n        August 2020, this effort has stalled. We hope more foundries and distributors\n        will publish documents like this that make their axes explicit, to encourage\n        of adoption of variable fonts throughout the industry, and provide source\n        material for a future update to the OpenType specification's axis registry.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate defaults on fvar table match registered fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/gf_axisregistry/fvar_axis_defaults>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that axis defaults have a corresponding fallback name registered at the\n        Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n\n        This is necessary for the following reasons:\n\n        To get ZIP files downloads on Google Fonts to be accurate \u2014 otherwise the\n        chosen default font is not generated. The Newsreader family, for instance, has\n        a default value on the 'opsz' axis of 16pt. If 16pt was not a registered\n        fallback position, then the ZIP file would instead include another position\n        as default (such as 14pt).\n\n        For the Variable fonts to display the correct location on the specimen page.\n\n        For VF with no weight axis to be displayed at all. For instance, Ballet, which\n        has no weight axis, was not appearing in sandbox because default position on\n        'opsz' axis was 16pt, and it was not yet a registered fallback positon.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate STAT particle names and values match the fallback names in GFAxisRegistry.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT/gf_axisregistry>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that particle names and values on STAT table match the fallback names\n        in each axis entry at the Google Fonts Axis Registry, available at\n        https://github.com/google/fonts/tree/main/axisregistry\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate VF axes match the ones declared on METADATA.pb.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/consistent_axis_enumeration>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All font variation axes present in the font files must be properly declared\n        on METADATA.pb so that they can be served by the GFonts API.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure METADATA.pb does not use escaped strings.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/escaped_strings>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In some cases we've seen designer names and other fields with escaped strings\n        in METADATA files. Nowadays the strings can be full unicode strings and\n        do not need escaping.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "METADATA.pb: Designers are listed correctly on the Google Fonts catalog?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/designer_profiles>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Designer David Perry still does not have an avatar image. Please provide one. [code: missing-avatar]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Google Fonts has a catalog of designers.\n\n        This check ensures that the online entries of the catalog can be found based\n        on the designer names listed on the METADATA.pb file.\n\n        It also validates the URLs and file formats are all correctly set.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Ensure variable fonts include an avar table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_avar_table>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Most variable fonts should include an avar table to correctly define\n        axes progression rates.\n\n        For example, a weight axis from 0% to 100% doesn't map directly to 100 to 1000,\n        because a 10% progression from 0% may be too much to define the 200,\n        while 90% may be too little to define the 900.\n\n        If the progression rates of axes is linear, this check can be ignored.\n        Fontmake will also skip adding an avar table if the progression rates\n        are linear. However, we still recommend designers visually proof each\n        instance is at the expected weight, width etc.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "On a family update, the DESCRIPTION.en_us.html file should ideally also be updated.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/family_update>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The DESCRIPTION.en_us.html file in this family has not changed in comparison to the latest font release on the google/fonts github repo.\nPlease consider mentioning note-worthy improvements made to the family recently. [code: description-not-updated]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want to ensure that any significant changes to the font family are\n        properly mentioned in the DESCRIPTION file.\n\n        In general, it means that the contents of the DESCRIPTION.en_us.html file\n        will typically change if when font files are updated. Please treat this check\n        as a reminder to do so whenever appropriate!\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check small caps glyphs are available.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/missing_small_caps_glyphs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Ensure small caps glyphs are available if\n        a font declares smcp or c2sc OT features.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Ensure Stylistic Sets have description.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/stylisticset_description>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The stylistic set ss01 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss01 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss02 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss03 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss04 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss05 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss06 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss07 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss08 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss09 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss10 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss11 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss12 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss13 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        },
                        {
                            "message": "The stylistic set ss15 lacks a description string on the 'name' table. [code: missing-description]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Stylistic sets should provide description text. Programs such as InDesign,\n        TextEdit and Inkscape use that info to display to the users so that they know\n        what a given stylistic set offers.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) is set in all fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/os2/use_typo_metrics>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.fsSelection bit 7 (USE_TYPO_METRICS) wasNOT set in the following fonts: ['/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf', '/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf', '/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf']. [code: missing-os2-fsselection-bit7]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        All fonts on the Google Fonts collection should have OS/2.fsSelection bit 7\n        (USE_TYPO_METRICS) set. This requirement is part of the vertical metrics scheme\n        established as a Google Fonts policy aiming at a common ground supported by\n        all major font rendering environments.\n\n        For more details, read:\n        https://github.com/googlefonts/gf-docs/blob/main/VerticalMetrics/README.md\n\n        Below is the portion of that document that is most relevant to this check:\n\n        Use_Typo_Metrics must be enabled. This will force MS Applications to use the\n        OS/2 Typo values instead of the Win values. By doing this, we can freely set\n        the Win values to avoid clipping and control the line height with the typo\n        values. It has the added benefit of future line height compatibility. When\n        a new script is added, we simply change the Win values to the new yMin\n        and yMax, without needing to worry if the line height have changed.\n    ",
                    "result": "FAIL",
                    "severity": 10
                },
                {
                    "description": "Ensure fonts have ScriptLangTags declared on the 'meta' table.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/meta/script_lang_tags>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file does not have a 'meta' table. [code: lacks-meta-table]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType 'meta' table originated at Apple. Microsoft added it to OT with\n        just two DataMap records:\n\n        - dlng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font is designed for.\n\n        - slng: comma-separated ScriptLangTags that indicate which scripts,\n          or languages and scripts, with possible variants, the font supports.\n\n\n        The slng structure is intended to describe which languages and scripts the\n        font overall supports. For example, a Traditional Chinese font that also\n        contains Latin characters, can indicate Hant,Latn, showing that it supports\n        Hant, the Traditional Chinese variant of the Hani script, and it also\n        supports the Latn script.\n\n        The dlng structure is far more interesting. A font may contain various glyphs,\n        but only a particular subset of the glyphs may be truly \"leading\" in the design,\n        while other glyphs may have been included for technical reasons. Such a\n        Traditional Chinese font could only list Hant there, showing that it\u2019s designed\n        for Traditional Chinese, but the font would omit Latn, because the developers\n        don\u2019t think the font is really recommended for purely Latin-script use.\n\n        The tags used in the structures can comprise just script, or also language\n        and script. For example, if a font has Bulgarian Cyrillic alternates in the\n        locl feature for the cyrl BGR OT languagesystem, it could also indicate in\n        dlng explicitly that it supports bul-Cyrl. (Note that the scripts and languages\n        in meta use the ISO language and script codes, not the OpenType ones).\n\n        This check ensures that the font has the meta table containing the\n        slng and dlng structures.\n\n        All families in the Google Fonts collection should contain the 'meta' table.\n        Windows 10 already uses it when deciding on which fonts to fall back to.\n        The Google Fonts API and also other environments could use the data for\n        smarter filtering. Most importantly, those entries should be added\n        to the Noto fonts.\n\n        In the font making process, some environments store this data in external\n        files already. But the meta table provides a convenient way to store this\n        inside the font file, so some tools may add the data, and unrelated tools\n        may read this data. This makes the solution much more portable and universal.\n    ",
                    "result": "WARN",
                    "severity": 3
                },
                {
                    "description": "Ensure fonts do not contain any pre-production tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/no_debugging_tables>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font file contains the following pre-production tables: FFTM [code: has-debugging-tables]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Tables such as `Debg` are useful in the pre-production stages of font\n        development, but add unnecessary bloat to a production font and should\n        be removed before release.\n    ",
                    "result": "WARN",
                    "severity": 6
                },
                {
                    "description": "Check font family directory name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/family_directory_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Directory name is \"cardo\", as expected.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want the directory name of a font family to be predictable and directly\n        derived from the family name, all lowercased and removing spaces.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font can render its own name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/render_own_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can successfully render its own name (Cardo)",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A base expectation is that a font family's regular/default (400 roman) style\n        can render its 'menu name' (nameID 1) in itself.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check samples can be rendered.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/can_render_samples>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        In order to prevent tofu from being seen on fonts.google.com, this check\n        verifies that all samples specified by METADATA.pb can be properly\n        rendered by the font.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check if category on METADATA.pb matches what can be inferred from the family name.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/metadata/category_hints>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Sometimes the font familyname contains words that hint at which is the most\n        likely correct category to be declared on METADATA.pb\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check font has the expected color font tables.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/colorfont_tables>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks Good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        COLR v0 fonts are widely supported in most browsers so they do not require\n        an SVG color table. However, some environments (e.g. Safari, Adobe apps)\n        do not currently support COLR v1 so we need to add an SVG table to these fonts,\n        except in the case of variable fonts, since SVG does not support\n        OpenType Variations.\n\n        To automatically generate compatible SVG/COLR tables,\n        run the maximum_color tool in nanoemoji:\n        https://github.com/googlefonts/nanoemoji\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Color layers should have a minimum brightness",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/color_cpal_brightness>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Layers of a COLRv0 font should not be too dark or too bright. When layer colors\n        are set explicitly, they can't be changed and they may turn out illegible\n        against dark or bright backgrounds.\n\n        While traditional color-less fonts can be colored in design apps or CSS, a\n        black color definition in a COLRv0 font actually means that that layer will be\n        rendered in black regardless of the background color. This leads to text\n        becoming invisible against a dark background, for instance when using a dark\n        theme in a web browser or operating system.\n\n        This check ensures that layer colors are at least 10% bright and at most 90%\n        bright, when not already set to the current color (0xFFFF).\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Put an empty glyph on GID 1 right after the .notdef glyph for COLRv0 fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/empty_glyph_on_gid1_for_colrv0>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A rendering bug in Windows 10 paints whichever glyph is on GID 1 on top of\n        some glyphs, colored or not. This only occurs for COLR version 0 fonts.\n\n        Having a glyph with no contours on GID 1 is a practical workaround for that.\n\n        See https://github.com/googlefonts/gftools/issues/609\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Noto fonts must have an ARTICLE.en_us.html file",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Google Fonts>",
                        "<FontBakeryCheck:com.google.fonts/check/description/noto_has_article>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_noto",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Noto fonts are displayed in a different way on the fonts.google.com\n         web site, and so must also contain an article about them.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: Google Fonts>",
                null,
                null
            ],
            "result": {
                "FAIL": 28,
                "INFO": 13,
                "PASS": 251,
                "SKIP": 76,
                "WARN": 31
            }
        },
        {
            "checks": [
                {
                    "description": "Checking all files are in the same directory.",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/single_directory>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "All files are in the same directory.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the set of font files passed in the command line is not all in the\n        same directory, then we warn the user since the tool will interpret the\n        set of files as belonging to a single family (and it is unlikely that\n        the user would store the files from a single family spreaded\n        in several separate directories).\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Each font in a family must have the same set of vertical metrics values.",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/vertical_metrics>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Vertical metrics are the same across the family.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We want all fonts within a family to have the same vertical metrics so\n        their line spacing is consistent across the family.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Name table records must not have trailing spaces.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/name/trailing_spaces>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No trailing spaces on name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 usWinAscent & usWinDescent.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/win_ascent_and_descent>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.usWinAscent value should be equal or greater than 2336, but got 2028 instead [code: ascent]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "OS/2.usWinDescent value should be equal or greater than 1258, but got 745 instead [code: descent]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's winAscent and winDescent values should be greater than or equal to\n        the head table's yMax, abs(yMin) values. If they are less than these values,\n        clipping can occur on Windows platforms\n        (https://github.com/RedHatBrand/Overpass/issues/33).\n\n        If the font includes tall/deep writing systems such as Arabic or Devanagari,\n        the winAscent and winDescent can be greater than the yMax and absolute yMin\n        values to accommodate vowel marks.\n\n        When the 'win' Metrics are significantly greater than the UPM, the linespacing\n        can appear too loose. To counteract this, enabling the OS/2 fsSelection\n        bit 7 (Use_Typo_Metrics), will force Windows to use the OS/2 'typo' values\n        instead. This means the font developer can control the linespacing with\n        the 'typo' values, whilst avoiding clipping by setting the 'win' values to\n        values greater than the yMax and absolute yMin.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Checking OS/2 Metrics match hhea Metrics.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/os2_metrics_match_hhea>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.sTypoAscender/Descender values match hhea.ascent/descent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OS/2 and hhea vertical metric values should match. This will produce the\n        same linespacing on Mac, GNU+Linux and Windows.\n\n        - Mac OS X uses the hhea values.\n        - Windows uses OS/2 or Win, depending on the OS or fsSelection bit value.\n\n        When OS/2 and hhea vertical metrics match, the same linespacing results on\n        macOS, GNU+Linux and Windows. Note that fixing this issue in a previously\n        released font may cause reflow in user documents and unhappy users.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking with ots-sanitize.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/ots>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "ots-sanitize passed this file",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Do we have the latest version of FontBakery installed?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/fontbakery_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "FontBakery is up-to-date.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Running old versions of FontBakery can lead to a poor report which may\n        include false WARNs and FAILs due do bugs, as well as outdated\n        quality assurance criteria.\n\n        Older versions will also not report problems that are detected by new checks\n        added to the tool in more recent updates.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains '.notdef' as its first glyph?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType specification v1.8.2 recommends that the first glyph is the\n        '.notdef' glyph without a codepoint assigned and with a drawing:\n\n        The .notdef glyph is very important for providing the user feedback\n        that a glyph is not found in the font. This glyph should not be left\n        without an outline as the user will only see what looks like a space\n        if a glyph is missing and not be aware of the active font\u2019s limitation.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#glyph-0-the-notdef-glyph\n\n        Pre-v1.8, it was recommended that fonts should also contain 'space', 'CR'\n        and '.null' glyphs. This might have been relevant for MacOS 9 applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains glyphs for whitespace characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains glyphs for whitespace characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has **proper** whitespace glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphnames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph 0x00A0 is called \"nonbreakingspace\": Change to \"uni00A0\" [code: not-recommended-00a0]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check enforces adherence to recommended whitespace\n        (codepoints 0020 and 00A0) glyph names according to the Adobe Glyph List.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Whitespace glyphs have ink?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_ink>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no whitespace glyph with ink.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font contains all required tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/required_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font contains the following optional tables:\n\n\t- loca\n\n\t- prep\n\n\t- GPOS\n\n\t- GSUB\n\n\t- gasp [code: optional-tables]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "Font contains all required tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#required-tables\n\n        Whether TrueType or CFF outlines are used in an OpenType font, the following\n        tables are required for the font to function correctly:\n\n        - cmap (Character to glyph mapping)\u23ce\n        - head (Font header)\u23ce\n        - hhea (Horizontal header)\u23ce\n        - hmtx (Horizontal metrics)\u23ce\n        - maxp (Maximum profile)\u23ce\n        - name (Naming table)\u23ce\n        - OS/2 (OS/2 and Windows specific metrics)\u23ce\n        - post (PostScript information)\n\n        The spec also documents that variable fonts require the following table:\n\n        - STAT (Style attributes)\n\n        Depending on the typeface and coverage of a font, certain tables are\n        recommended for optimum quality.\n\n        For example:\u23ce\n        - the performance of a non-linear font is improved if the VDMX, LTSH,\n          and hdmx tables are present.\u23ce\n        - Non-monospaced Latin fonts should have a kern table.\u23ce\n        - A gasp table is necessary if a designer wants to influence the sizes\n          at which grayscaling is used under Windows. Etc.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Are there unwanted tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unwanted_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following unwanted font tables were found:\n\n* FFTM - Table contains redundant FontForge timestamp info\n\nThey can be removed with the 'fix-unwanted-tables' script provided by gftools. [code: unwanted-tables]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some font editors store source data in their own SFNT tables, and these\n        can sometimes sneak into final release files, which should only have\n        OpenType spec tables.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Check correctness of STAT table strings",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_strings>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        On the STAT table, the \"Italic\" keyword must not be used on AxisValues\n        for variation axes other than 'ital'.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Glyph names are all valid?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/valid_glyphnames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyph names do not comply with naming conventions: 1E0A, Copt-ph, Fraktur-ph, Goth-ph, Hebrew-ph, MUFI-ph, OI-ph, OI-ph-var, Runic-ph, TLG-ph, arrow-ph, metr-ph and uniA78#\n\n A glyph name must be entirely comprised of characters from the following set: A-Z a-z 0-9 .(period) _(underscore). A glyph name must not start with a digit or period. There are a few exceptions such as the special glyph \".notdef\". The glyph names \"twocents\", \"a1\", and \"_\" are all valid, while \"2cents\" and \".twocents\" are not. [code: found-invalid-names]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft's recommendations for OpenType Fonts states the following:\n\n        'NOTE: The PostScript glyph name must be no longer than 31 characters,\n        include only uppercase or lowercase English letters, European digits,\n        the period or the underscore, i.e. from the set [A-Za-z0-9_.] and\n        should start with a letter, except the special glyph name \".notdef\"\n        which starts with a period.'\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#post-table\n\n\n        In practice, though, particularly in modern environments, glyph names\n        can be as long as 63 characters.\n\n        According to the \"Adobe Glyph List Specification\" available at:\n\n        https://github.com/adobe-type-tools/agl-specification\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Font contains unique glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unique_glyphnames>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph names are all unique.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Duplicate glyph names prevent font installation on Mac OS X.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "List all superfamily filepaths",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/list>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/cardo [code: family-path]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is a merely informative check that lists all sibling families\n        detected by fontbakery.\n\n        Only the fontfiles in these directories will be considered in\n        superfamily-level checks.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Each font in set of sibling families must have the same set of vertical metrics values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/vertical_metrics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Sibling families were not detected.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We may want all fonts within a super-family (all sibling families) to have\n        the same vertical metrics so their line spacing is consistent\n        across the super-family.\n\n        This is an experimental extended version of\n        com.google.fonts/check/family/vertical_metrics and for now it will only\n        result in WARNs.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure indic fonts have the Indian Rupee Sign glyph.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/rupee>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_indic_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per Bureau of Indian Standards every font supporting one of the\n        official Indian languages needs to include Unicode Character\n        \u201c\u20b9\u201d (U+20B9) Indian Rupee Sign.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font contains no unreachable glyphs",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unreachable_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs could not be reached by codepoint or substitution rules:\n\n\t- Copt-ph\n\n\t- Fraktur-ph\n\n\t- Goth-ph\n\n\t- OI-ph\n\n\t- OI-ph-var\n\n\t- balls_upper\n\n\t- bracket2\n\n\t- m.alt01\n\n\t- metr-ph\n\n\t- nonmarkingreturn\n\n\t- reserved\n\n\t- uni05B105BD\n\n\t- uni05B205BD\n\n\t- uni05B305BD\n [code: unreachable-glyphs]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs are either accessible directly through Unicode codepoints or through\n        substitution rules.\n\n        In Color Fonts, glyphs are also referenced by the COLR table.\n\n        Any glyphs not accessible by either of these means\n        are redundant and serve only to increase the font's file size.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check if each glyph has the recommended amount of contours.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/contour_count>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check inspects the glyph outlines and detects the total number of contours in each of them. The expected values are infered from the typical ammounts of contours observed in a large collection of reference font families. The divergences listed below may simply indicate a significantly different design on some of your glyphs. On the other hand, some of these may flag actual bugs in the font such as glyphs mapped to an incorrect codepoint. Please consider reviewing the design and codepoint assignment of these to make sure they are correct.\n\nThe following glyphs do not have the recommended number of contours:\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: aogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: eogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0199\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: gbar\tContours detected: 4\tExpected: 2\n\n\t- Glyph name: uni01EA\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni01EB\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni01EC\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01ED\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01F5\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni0228\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0229\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Pi\tContours detected: 3\tExpected: 1\n\n\t- Glyph name: beta\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: zeta\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni1E56\tContours detected: 2\tExpected: 3\n\n\t- Glyph name: uni1FEC\tContours detected: 2\tExpected: 3\n\n\t- Glyph name: uni204B\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: lira\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni2295\tContours detected: 5\tExpected: 3\n\n\t- Glyph name: Pi\tContours detected: 3\tExpected: 1\n\n\t- Glyph name: Uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: aogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: beta\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: eogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: fi\tContours detected: 1\tExpected: 3\n\n\t- Glyph name: lira\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: uni0199\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni01EC\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01ED\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni0228\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0229\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni1E56\tContours detected: 2\tExpected: 3\n\n\t- Glyph name: uni1FEC\tContours detected: 2\tExpected: 3\n\n\t- Glyph name: uni204B\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: zeta\tContours detected: 2\tExpected: 1\n [code: contour-count]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Visually QAing thousands of glyphs by hand is tiring. Most glyphs can only\n        be constructured in a handful of ways. This means a glyph's contour count\n        will only differ slightly amongst different fonts, e.g a 'g' could either\n        be 2 or 3 contours, depending on whether its double story or single story.\n\n        However, a quotedbl should have 2 contours, unless the font belongs\n        to a display family.\n\n        This check currently does not cover variable fonts because there's plenty\n        of alternative ways of constructing glyphs with multiple outlines for each\n        feature in a VarFont. The expected contour count data for this check is\n        currently optimized for the typical construction of glyphs in static fonts.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain a soft hyphen?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_hyphen>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a 'Soft Hyphen' character. [code: softhyphen]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'Soft Hyphen' character (codepoint 0x00AD) is used to mark\n        a hyphenation possibility within a word in the absence of or\n        overriding dictionary hyphenation.\n\n        It is sometimes designed empty with no width (such as a control character),\n        sometimes the same as the traditional hyphen, sometimes double encoded with\n        the hyphen.\n\n        That being said, it is recommended to not include it in the font at all,\n        because discretionary hyphenation should be handled at the level of the\n        shaping engine, not the font. Also, even if present, the software would\n        not display that character.\n\n        More discussion at:\n        https://typedrawers.com/discussion/2046/special-dash-things-softhyphen-horizontalbar\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain chws and vchw features?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_chws_feature>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The W3C recommends the addition of chws and vchw features to CJK fonts\n        to enhance the spacing of glyphs in environments which do not fully support\n        JLREQ layout rules.\n\n        The chws_tool utility (https://github.com/googlefonts/chws_tool) can be used\n        to add these features automatically.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure component transforms do not perform scaling or rotation.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/transformed_components>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs had components with scaling or rotation\nor inverted outline direction:\n\n* uni0258 (component e)\n* uni025C (component epsilon)\n* uni027F (component uni027E)\n* uni0281 (component R.sc)\n* uni0285 (component uni0283)\n* uni028C (component v)\n* uni028D (component w)\n* uni0295 (component uni0294)\n* uni0296 (component uni0294)\n* uni029A (component uni025E)\n* uni02B6 (component R.sc)\n* uni02BB (component comma)\n* uni02C1 (component uni02C0)\n* uni02C5 (component uni02C4)\n* uni02D2 (component uni02D3)\n* uni02D5 (component uni02D4)\n* uni02E8 (component uni02E6)\n* uni02E9 (component uni02E5)\n* uni0318 (component uni0319)\n* uni031E (component uni031D)\n* uni0339 (component uni031C)\n* uni033A (component uni032A)\n* uni0355 (component uni0354)\n* uni0357 (component uni031C)\n* uni035C (component uni0361)\n* uni035D (component uni0361)\n* uni03F6 (component uni03F5)\n* uni0486 (component uni0485)\n* uni0596 (component uni05A5)\n* uni05AD (component uni05A5)\n* uni05C6 (component afii57680)\n* uni16E3 (component uni16C9)\n* uni16E6 (component uni16D8)\n* uni2035 (component minute)\n* uni204D (component uni204C)\n* uni2127 (component Omega)\n* uni2193 (component arrowup)\n* uni2196 (component uni2197)\n* uni2199 (component uni2198)\n* uni21B7 (component uni21B6)\n* uni21BB (component uni21BA)\n* uni2235 (component uni2234)\n* uni2310 (component logicalnot)\n* uni260B (component uni260A)\n* uni263E (component uni263D)\n* uni2E0D (component uni2E0C)\n* uni2E11 (component uni2E10)\n* uni3017 (component uni3016)\n* uniE1A1 (component iota)\n* uniE1A2 (component Y)\n* uniE1A3 (component upsilon)\n* uniF16F (component uni2E0C)\n* uniF1D3 (component uni2E00)\n* uniF1D5 (component uniF1D4)\n* uniF1D6 (component uni2E0C)\n* uniF300 (component afii57680)\n* uniF743 (component uni0361)\n* exclamdown.sc (component exclam.sc)\n [code: transformed-components]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some families have glyphs which have been constructed by using\n        transformed components e.g the 'u' being constructed from a flipped 'n'.\n\n        From a designers point of view, this sounds like a win (less work).\n        However, such approaches can lead to rasterization issues, such as\n        having the 'u' not sitting on the baseline at certain sizes after\n        running the font through ttfautohint.\n\n        Other issues are outlines that end up reversed when only one dimension\n        is flipped while the other isn't.\n\n        As of July 2019, Marc Foley observed that ttfautohint assigns cvt values\n        to transformed glyphs as if they are not transformed and the result is\n        they render very badly, and that vttLib does not support flipped components.\n\n        When building the font with fontmake, the problem can be fixed by adding\n        this to the command line:\n\n        --filter DecomposeTransformedComponentsFilter\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Ensure no GPOS7 lookups are present.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos7>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has no GPOS7 lookups",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Versions of fonttools >=4.14.0 (19 August 2020) perform an optimisation on\n        chained contextual lookups, expressing GSUB6 as GSUB5 and GPOS8 and GPOS7\n        where possible (when there are no suffixes/prefixes for all rules in\n        the lookup).\n\n        However, makeotf has never generated these lookup types and they are rare\n        in practice. Perhaps before of this, Mac's CoreText shaper does not correctly\n        interpret GPOS7, meaning that these lookups will be ignored by the shaper,\n        and fonts containing these lookups will have unintended positioning errors.\n\n        To fix this warning, rebuild the font with a recent version of fonttools.\n    ",
                    "result": "PASS",
                    "severity": 9
                },
                {
                    "description": "Ensure that the font can be rasterized by FreeType.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/freetype_rasterizer>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can be rasterized by FreeType.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Malformed fonts can cause FreeType to crash.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Font has the proper sfntVersion value?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/sfnt_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has the correct sfntVersion value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OpenType fonts that contain TrueType outlines should use the value of 0x00010000\n        for the sfntVersion. OpenType fonts containing CFF data (version 1 or 2) should\n        use 0x4F54544F ('OTTO', when re-interpreted as a Tag) for sfntVersion.\n\n        Fonts with the wrong sfntVersion value are rejected by FreeType.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#table-directory\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Space and non-breaking space have the same width?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_widths>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Space and non-breaking space have the same width.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the space and nbspace glyphs have different widths, then Google Workspace\n        has problems with the font.\n\n        The nbspace is used to replace the space character in multiple situations in\n        documents; such as the space before punctuation in languages that do that. It\n        avoids the punctuation to be separated from the last word and go to next line.\n\n        This is automatic substitution by the text editors, not by fonts. It's also used\n        by designers in text composition practice to create nicely shaped paragraphs.\n        If the space and the nbspace are not the same width, it breaks the text\n        composition of documents.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Detect any interpolation issues in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/interpolation_issues>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When creating a variable font, the designer must make sure that corresponding\n        paths have the same start points across masters, as well as that corresponding\n        component shapes are placed in the same order within a glyph across masters.\n        If this is not done, the glyph will not interpolate correctly.\n\n        Here we check for the presence of potential interpolation errors using the\n        fontTools.varLib.interpolatable module.\n    ",
                    "result": "SKIP",
                    "severity": 4
                },
                {
                    "description": "Check math signs have the same width.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/math_signs_width>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The most common width is 1049 among a set of 8 math glyphs.\nThe following math glyphs have a different width, though:\n\nWidth = 1162:\nplus, plusminus\n\nWidth = 983:\nless\n\nWidth = 1160:\nequal\n\nWidth = 980:\ngreater\n\nWidth = 1154:\nlogicalnot\n\nWidth = 1151:\nuni2237\n\nWidth = 1242:\nuni223B, uni223D\n\nWidth = 995:\nperpendicular\n\nWidth = 1265:\nuni27C0\n [code: width-outliers]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        It is a common practice to have math signs sharing the same width\n        (preferably the same width as tabular figures accross the entire font family).\n\n        This probably comes from the will to avoid additional tabular math signs\n        knowing that their design can easily share the same width.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Checking Vertical Metric Linegaps.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/linegaps>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 sTypoLineGap and hhea lineGap are both 0.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The LineGap value is a space added to the line height created by the union\n        of the (typo/hhea)Ascender and (typo/hhea)Descender. It is handled differently\n        according to the environment.\n\n        This leading value will be added above the text line in most desktop apps.\n        It will be shared above and under in web browsers, and ignored in Windows\n        if Use_Typo_Metrics is disabled.\n\n        For better linespacing consistency across platforms,\n        (typo/hhea)LineGap values must be 0.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking STAT table entries in static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_in_statics>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Adobe feature syntax allows for the definition of a STAT table. Fonts built\n        with a hand-coded STAT table in feature syntax may be built either as static\n        or variable, but will end up with the same STAT table.\n\n        This is a problem, because a STAT table which works on variable fonts\n        will not be appropriate for static instances. The examples in the OpenType spec\n        of non-variable fonts with a STAT table show that the table entries must be\n        restricted to those entries which refer to the static font's position in\n        the designspace. i.e. a Regular weight static should only have the following\n        entry for the weight axis:\n\n        <AxisIndex value=\"0\"/>\n        <Flags value=\"2\"/>  <!-- ElidableAxisValueName -->\n        <ValueNameID value=\"265\"/>  <!-- Regular -->\n        <Value value=\"400.0\"/>\n\n        However, if the STAT table intended for a variable font is compiled into a\n        static, it will have many entries for this axis. In this case, Windows will\n        read the first entry only, causing all instances to report themselves\n        as \"Thin Condensed\".\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check accent of Lcaron, dcaron, lcaron, tcaron (derived from com.google.fonts/check/alt_caron)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/alt_caron:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "dcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "Lcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "lcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "tcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Lcaron, dcaron, lcaron, tcaron should NOT be composed with quoteright\n        or quotesingle or comma or caron(comb). It should be composed with a\n        distinctive glyph which doesn't look like an apostrophe.\n\n        Source:\n        https://ilovetypography.com/2009/01/24/on-diacritics/\n        http://diacritics.typo.cz/index.php?id=5\n        https://www.typotheque.com/articles/lcaron\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Name table records must not have trailing spaces.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/name/trailing_spaces>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No trailing spaces on name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 usWinAscent & usWinDescent.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/win_ascent_and_descent>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.usWinAscent value should be equal or greater than 2336, but got 2028 instead [code: ascent]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "OS/2.usWinDescent value should be equal or greater than 1258, but got 745 instead [code: descent]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's winAscent and winDescent values should be greater than or equal to\n        the head table's yMax, abs(yMin) values. If they are less than these values,\n        clipping can occur on Windows platforms\n        (https://github.com/RedHatBrand/Overpass/issues/33).\n\n        If the font includes tall/deep writing systems such as Arabic or Devanagari,\n        the winAscent and winDescent can be greater than the yMax and absolute yMin\n        values to accommodate vowel marks.\n\n        When the 'win' Metrics are significantly greater than the UPM, the linespacing\n        can appear too loose. To counteract this, enabling the OS/2 fsSelection\n        bit 7 (Use_Typo_Metrics), will force Windows to use the OS/2 'typo' values\n        instead. This means the font developer can control the linespacing with\n        the 'typo' values, whilst avoiding clipping by setting the 'win' values to\n        values greater than the yMax and absolute yMin.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Checking OS/2 Metrics match hhea Metrics.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/os2_metrics_match_hhea>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.sTypoAscender/Descender values match hhea.ascent/descent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OS/2 and hhea vertical metric values should match. This will produce the\n        same linespacing on Mac, GNU+Linux and Windows.\n\n        - Mac OS X uses the hhea values.\n        - Windows uses OS/2 or Win, depending on the OS or fsSelection bit value.\n\n        When OS/2 and hhea vertical metrics match, the same linespacing results on\n        macOS, GNU+Linux and Windows. Note that fixing this issue in a previously\n        released font may cause reflow in user documents and unhappy users.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking with ots-sanitize.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/ots>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "ots-sanitize passed this file",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Do we have the latest version of FontBakery installed?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/fontbakery_version>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "FontBakery is up-to-date.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Running old versions of FontBakery can lead to a poor report which may\n        include false WARNs and FAILs due do bugs, as well as outdated\n        quality assurance criteria.\n\n        Older versions will also not report problems that are detected by new checks\n        added to the tool in more recent updates.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains '.notdef' as its first glyph?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_glyphs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType specification v1.8.2 recommends that the first glyph is the\n        '.notdef' glyph without a codepoint assigned and with a drawing:\n\n        The .notdef glyph is very important for providing the user feedback\n        that a glyph is not found in the font. This glyph should not be left\n        without an outline as the user will only see what looks like a space\n        if a glyph is missing and not be aware of the active font\u2019s limitation.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#glyph-0-the-notdef-glyph\n\n        Pre-v1.8, it was recommended that fonts should also contain 'space', 'CR'\n        and '.null' glyphs. This might have been relevant for MacOS 9 applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains glyphs for whitespace characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains glyphs for whitespace characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has **proper** whitespace glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphnames>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph 0x00A0 is called \"nonbreakingspace\": Change to \"uni00A0\" [code: not-recommended-00a0]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check enforces adherence to recommended whitespace\n        (codepoints 0020 and 00A0) glyph names according to the Adobe Glyph List.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Whitespace glyphs have ink?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_ink>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no whitespace glyph with ink.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font contains all required tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/required_tables>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font contains the following optional tables:\n\n\t- loca\n\n\t- GPOS\n\n\t- GSUB\n\n\t- gasp [code: optional-tables]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "Font contains all required tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#required-tables\n\n        Whether TrueType or CFF outlines are used in an OpenType font, the following\n        tables are required for the font to function correctly:\n\n        - cmap (Character to glyph mapping)\u23ce\n        - head (Font header)\u23ce\n        - hhea (Horizontal header)\u23ce\n        - hmtx (Horizontal metrics)\u23ce\n        - maxp (Maximum profile)\u23ce\n        - name (Naming table)\u23ce\n        - OS/2 (OS/2 and Windows specific metrics)\u23ce\n        - post (PostScript information)\n\n        The spec also documents that variable fonts require the following table:\n\n        - STAT (Style attributes)\n\n        Depending on the typeface and coverage of a font, certain tables are\n        recommended for optimum quality.\n\n        For example:\u23ce\n        - the performance of a non-linear font is improved if the VDMX, LTSH,\n          and hdmx tables are present.\u23ce\n        - Non-monospaced Latin fonts should have a kern table.\u23ce\n        - A gasp table is necessary if a designer wants to influence the sizes\n          at which grayscaling is used under Windows. Etc.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Are there unwanted tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unwanted_tables>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following unwanted font tables were found:\n\n* FFTM - Table contains redundant FontForge timestamp info\n\nThey can be removed with the 'fix-unwanted-tables' script provided by gftools. [code: unwanted-tables]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some font editors store source data in their own SFNT tables, and these\n        can sometimes sneak into final release files, which should only have\n        OpenType spec tables.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Check correctness of STAT table strings",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_strings>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        On the STAT table, the \"Italic\" keyword must not be used on AxisValues\n        for variation axes other than 'ital'.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Glyph names are all valid?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/valid_glyphnames>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyph names do not comply with naming conventions: Copt-ph, Fraktur-ph, Goth-ph, Hebrew-ph, MUFI-ph, OI-ph, OI-ph-var, Runic-ph, TLG-ph, arrow-ph and metr-ph\n\n A glyph name must be entirely comprised of characters from the following set: A-Z a-z 0-9 .(period) _(underscore). A glyph name must not start with a digit or period. There are a few exceptions such as the special glyph \".notdef\". The glyph names \"twocents\", \"a1\", and \"_\" are all valid, while \"2cents\" and \".twocents\" are not. [code: found-invalid-names]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft's recommendations for OpenType Fonts states the following:\n\n        'NOTE: The PostScript glyph name must be no longer than 31 characters,\n        include only uppercase or lowercase English letters, European digits,\n        the period or the underscore, i.e. from the set [A-Za-z0-9_.] and\n        should start with a letter, except the special glyph name \".notdef\"\n        which starts with a period.'\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#post-table\n\n\n        In practice, though, particularly in modern environments, glyph names\n        can be as long as 63 characters.\n\n        According to the \"Adobe Glyph List Specification\" available at:\n\n        https://github.com/adobe-type-tools/agl-specification\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Font contains unique glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unique_glyphnames>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph names are all unique.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Duplicate glyph names prevent font installation on Mac OS X.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "List all superfamily filepaths",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/list>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/cardo [code: family-path]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is a merely informative check that lists all sibling families\n        detected by fontbakery.\n\n        Only the fontfiles in these directories will be considered in\n        superfamily-level checks.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Each font in set of sibling families must have the same set of vertical metrics values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/vertical_metrics>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Sibling families were not detected.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We may want all fonts within a super-family (all sibling families) to have\n        the same vertical metrics so their line spacing is consistent\n        across the super-family.\n\n        This is an experimental extended version of\n        com.google.fonts/check/family/vertical_metrics and for now it will only\n        result in WARNs.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure indic fonts have the Indian Rupee Sign glyph.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/rupee>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_indic_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per Bureau of Indian Standards every font supporting one of the\n        official Indian languages needs to include Unicode Character\n        \u201c\u20b9\u201d (U+20B9) Indian Rupee Sign.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font contains no unreachable glyphs",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unreachable_glyphs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs could not be reached by codepoint or substitution rules:\n\n\t- Copt-ph\n\n\t- MUFI-ph\n\n\t- OI-ph\n\n\t- OI-ph-var\n\n\t- T_h\n\n\t- bracket2\n\n\t- c_t\n\n\t- metr-ph\n\n\t- nonmarkingreturn\n\n\t- reserved\n\n\t- uni05B105BD\n\n\t- uni05B205BD\n\n\t- uni05B305BD\n [code: unreachable-glyphs]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs are either accessible directly through Unicode codepoints or through\n        substitution rules.\n\n        In Color Fonts, glyphs are also referenced by the COLR table.\n\n        Any glyphs not accessible by either of these means\n        are redundant and serve only to increase the font's file size.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check if each glyph has the recommended amount of contours.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/contour_count>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check inspects the glyph outlines and detects the total number of contours in each of them. The expected values are infered from the typical ammounts of contours observed in a large collection of reference font families. The divergences listed below may simply indicate a significantly different design on some of your glyphs. On the other hand, some of these may flag actual bugs in the font such as glyphs mapped to an incorrect codepoint. Please consider reviewing the design and codepoint assignment of these to make sure they are correct.\n\nThe following glyphs do not have the recommended number of contours:\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: aogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: eogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: Wcircumflex\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: gbar\tContours detected: 4\tExpected: 2\n\n\t- Glyph name: uni01EA\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni01EB\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni01EC\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01ED\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni0228\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0229\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: beta\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: zeta\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: Wgrave\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wacute\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wdieresis\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni204B\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: lira\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni2295\tContours detected: 5\tExpected: 3\n\n\t- Glyph name: s_t\tContours detected: 4\tExpected: 1\n\n\t- Glyph name: Uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: Wacute\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wcircumflex\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wdieresis\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: Wgrave\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: aogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: beta\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: eogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: fi\tContours detected: 2\tExpected: 3\n\n\t- Glyph name: lira\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: s_t\tContours detected: 4\tExpected: 1\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: uni01EC\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01ED\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni0228\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0229\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni204B\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: zeta\tContours detected: 2\tExpected: 1\n [code: contour-count]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Visually QAing thousands of glyphs by hand is tiring. Most glyphs can only\n        be constructured in a handful of ways. This means a glyph's contour count\n        will only differ slightly amongst different fonts, e.g a 'g' could either\n        be 2 or 3 contours, depending on whether its double story or single story.\n\n        However, a quotedbl should have 2 contours, unless the font belongs\n        to a display family.\n\n        This check currently does not cover variable fonts because there's plenty\n        of alternative ways of constructing glyphs with multiple outlines for each\n        feature in a VarFont. The expected contour count data for this check is\n        currently optimized for the typical construction of glyphs in static fonts.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain a soft hyphen?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_hyphen>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a 'Soft Hyphen' character. [code: softhyphen]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'Soft Hyphen' character (codepoint 0x00AD) is used to mark\n        a hyphenation possibility within a word in the absence of or\n        overriding dictionary hyphenation.\n\n        It is sometimes designed empty with no width (such as a control character),\n        sometimes the same as the traditional hyphen, sometimes double encoded with\n        the hyphen.\n\n        That being said, it is recommended to not include it in the font at all,\n        because discretionary hyphenation should be handled at the level of the\n        shaping engine, not the font. Also, even if present, the software would\n        not display that character.\n\n        More discussion at:\n        https://typedrawers.com/discussion/2046/special-dash-things-softhyphen-horizontalbar\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain chws and vchw features?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_chws_feature>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The W3C recommends the addition of chws and vchw features to CJK fonts\n        to enhance the spacing of glyphs in environments which do not fully support\n        JLREQ layout rules.\n\n        The chws_tool utility (https://github.com/googlefonts/chws_tool) can be used\n        to add these features automatically.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure component transforms do not perform scaling or rotation.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/transformed_components>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs had components with scaling or rotation\nor inverted outline direction:\n\n* backslash (component slash)\n* exclamdown (component exclam)\n* uni0186 (component C)\n* uni0254 (component c)\n* uni0258 (component e)\n* uni025C (component epsilon)\n* uni027F (component uni027E)\n* uni0281 (component R.sc)\n* uni0285 (component uni0283)\n* uni028C (component v)\n* uni028D (component w)\n* uni0295 (component uni0294)\n* uni0296 (component uni0294)\n* uni029A (component uni025E)\n* uni02B6 (component R.sc)\n* uni02BB (component comma)\n* uni02C1 (component uni02C0)\n* uni02C5 (component uni02C4)\n* uni02D2 (component uni02D3)\n* uni02D5 (component uni02D4)\n* uni02E8 (component uni02E6)\n* uni02E9 (component uni02E5)\n* uni0318 (component uni0319)\n* uni031E (component uni031D)\n* uni0339 (component uni031C)\n* uni033A (component uni032A)\n* uni0355 (component uni0354)\n* uni0357 (component uni031C)\n* uni035C (component uni0361)\n* uni035D (component uni0361)\n* uni0376 (component uF0090)\n* uni037B (component uni03F2)\n* uni03F6 (component uni03F5)\n* uni0486 (component uni0485)\n* uni0596 (component uni05A5)\n* uni05AD (component uni05A5)\n* uni05C6 (component afii57680)\n* uni16E3 (component uni16C9)\n* uni16E6 (component uni16D8)\n* uni2035 (component minute)\n* uni204B (component paragraph)\n* uni2127 (component Omega)\n* uni2193 (component arrowup)\n* uni2196 (component uni2197)\n* uni2199 (component uni2198)\n* uni21B7 (component uni21B6)\n* uni21BB (component uni21BA)\n* uni2235 (component uni2234)\n* uni2310 (component logicalnot)\n* uni25C1 (component uni25B7)\n* uni260B (component uni260A)\n* uni263E (component uni263D)\n* uni2E0D (component uni2E0C)\n* uni2E11 (component uni2E10)\n* uni2E1D (component uni2E0C)\n* uni3017 (component uni3016)\n* uniE1A1 (component iota)\n* uniE1A2 (component Y)\n* uniE1A3 (component upsilon)\n* uniF16F (component uni2E0C)\n* uniF1D3 (component uni2E00)\n* uniF1D5 (component uniF1D4)\n* uniF1D6 (component uni2E0C)\n* uniF300 (component afii57680)\n* uniF743 (component uni0361)\n* exclamdown.sc (component exclam.sc)\n* u10141 (component u10140)\n* u1031C (component u1031B)\n* uF0015 (component u1030D)\n* uF0023 (component uF0020)\n* uF0026 (component u10140)\n* uF003E (component uF0253)\n* uF0086 (component uF0024)\n* uF0087 (component uF0081)\n* uF00E1 (component u10323)\n* uF00F4 (component uF00EA)\n* uF0100 (component uF0000)\n* uF0101 (component uF0001)\n* uF0102 (component uF0002)\n* uF0103 (component uF0003)\n* uF0104 (component uF0004)\n* uF0105 (component uF0005)\n* uF0106 (component uF0006)\n* uF0107 (component uF0007)\n* uF0110 (component uF0010)\n* uF0111 (component uF0011)\n* uF0113 (component uF0013)\n* uF0114 (component uF0014)\n* uF011A (component uF001A)\n* uF0120 (component uF0020)\n* uF0121 (component uF0021)\n* uF0122 (component uF0022)\n* uF0124 (component uF0024)\n* uF0128 (component uF0028)\n* uF0129 (component uF0029)\n* uF012A (component uF002A)\n* uF0130 (component uF0030)\n* uF0131 (component uF0031)\n* uF0134 (component uF0034)\n* uF0135 (component uF0035)\n* uF0136 (component uF0036)\n* uF0137 (component uF0037)\n* uF0138 (component uF0038)\n* uF0139 (component uF0039)\n* uF013A (component uF003A)\n* uF013C (component uF003C)\n* uF013D (component uF003D)\n* uF013F (component uF003F)\n* uF0140 (component uF0040)\n* uF0141 (component uF0041)\n* uF0142 (component uF0042)\n* uF0144 (component uF0044)\n* uF0145 (component uF0045)\n* uF0146 (component uF0046)\n* uF0148 (component uF0048)\n* uF0149 (component uF0049)\n* uF014A (component uF004A)\n* uF014B (component uF004B)\n* uF014C (component uF004C)\n* uF014F (component uF004F)\n* uF0150 (component uF0050)\n* uF0152 (component uF0052)\n* uF0159 (component uF0059)\n* uF015B (component uF005B)\n* uF015C (component uF005C)\n* uF0172 (component uF0072)\n* uF0173 (component uF0073)\n* uF0174 (component uF0074)\n* uF0177 (component uF0077)\n* uF0178 (component uF0078)\n* uF017D (component uF007D)\n* uF017F (component uF007F)\n* uF0180 (component uF0080)\n* uF0181 (component uF0081)\n* uF018A (component uF008A)\n* uF018B (component uF008B)\n* uF018E (component uF008E)\n* uF0190 (component uF0090)\n* uF0191 (component uF0091)\n* uF0192 (component uF0092)\n* uF0193 (component u10168)\n* uF0196 (component uF0096)\n* uF019A (component uF009A)\n* uF01AA (component u10143)\n* uF01B7 (component uF00B7)\n* uF01B8 (component uF00B8)\n* uF01BA (component uF00BA)\n* uF01BC (component uF00BC)\n* uF01BD (component uF00BD)\n* uF01BE (component uF00BE)\n* uF01BF (component uF00BF)\n* uF01C0 (component uF00C0)\n* uF01C1 (component uF00C1)\n* uF01C2 (component uF00C2)\n* uF01C5 (component uF00C5)\n* uF01C6 (component uF00C6)\n* uF01C7 (component uF00C7)\n* uF01C8 (component uF00C8)\n* uF01C9 (component uF00C9)\n* uF01CA (component uF00CA)\n* uF01CB (component uF00CB)\n* uF01CD (component uF00CD)\n* uF01D0 (component uF00D0)\n* uF01D1 (component uF0080)\n* uF01D3 (component uF00D3)\n* uF01D4 (component uF00D4)\n* uF01DC (component uF00DC)\n* uF01E0 (component uF00E0)\n* uF01E1 (component u10323)\n* uF01E8 (component uF00E8)\n* uF01E9 (component u1D219)\n* uF01F6 (component uF00F6)\n* uF0202 (component uF0201)\n* uF0232 (component dagger)\n* uF024B (component uF024A)\n* uF0250 (component u1D226)\n* uF0251 (component u1D211)\n* uF0252 (component u1D225)\n* uF0254 (component uF0253)\n* uF0256 (component uF0255)\n* uF0258 (component uF0257)\n* uF025D (component uF025C)\n* uF0260 (component uF00EA)\n* uF0267 (component uF0266)\n* uF027E (component uF027D)\n* uF0291 (component uF00B7)\n* uF02AA (component breve)\n [code: transformed-components]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some families have glyphs which have been constructed by using\n        transformed components e.g the 'u' being constructed from a flipped 'n'.\n\n        From a designers point of view, this sounds like a win (less work).\n        However, such approaches can lead to rasterization issues, such as\n        having the 'u' not sitting on the baseline at certain sizes after\n        running the font through ttfautohint.\n\n        Other issues are outlines that end up reversed when only one dimension\n        is flipped while the other isn't.\n\n        As of July 2019, Marc Foley observed that ttfautohint assigns cvt values\n        to transformed glyphs as if they are not transformed and the result is\n        they render very badly, and that vttLib does not support flipped components.\n\n        When building the font with fontmake, the problem can be fixed by adding\n        this to the command line:\n\n        --filter DecomposeTransformedComponentsFilter\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Ensure no GPOS7 lookups are present.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos7>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has no GPOS7 lookups",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Versions of fonttools >=4.14.0 (19 August 2020) perform an optimisation on\n        chained contextual lookups, expressing GSUB6 as GSUB5 and GPOS8 and GPOS7\n        where possible (when there are no suffixes/prefixes for all rules in\n        the lookup).\n\n        However, makeotf has never generated these lookup types and they are rare\n        in practice. Perhaps before of this, Mac's CoreText shaper does not correctly\n        interpret GPOS7, meaning that these lookups will be ignored by the shaper,\n        and fonts containing these lookups will have unintended positioning errors.\n\n        To fix this warning, rebuild the font with a recent version of fonttools.\n    ",
                    "result": "PASS",
                    "severity": 9
                },
                {
                    "description": "Ensure that the font can be rasterized by FreeType.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/freetype_rasterizer>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can be rasterized by FreeType.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Malformed fonts can cause FreeType to crash.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Font has the proper sfntVersion value?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/sfnt_version>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has the correct sfntVersion value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OpenType fonts that contain TrueType outlines should use the value of 0x00010000\n        for the sfntVersion. OpenType fonts containing CFF data (version 1 or 2) should\n        use 0x4F54544F ('OTTO', when re-interpreted as a Tag) for sfntVersion.\n\n        Fonts with the wrong sfntVersion value are rejected by FreeType.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#table-directory\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Space and non-breaking space have the same width?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_widths>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Space and non-breaking space have the same width.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the space and nbspace glyphs have different widths, then Google Workspace\n        has problems with the font.\n\n        The nbspace is used to replace the space character in multiple situations in\n        documents; such as the space before punctuation in languages that do that. It\n        avoids the punctuation to be separated from the last word and go to next line.\n\n        This is automatic substitution by the text editors, not by fonts. It's also used\n        by designers in text composition practice to create nicely shaped paragraphs.\n        If the space and the nbspace are not the same width, it breaks the text\n        composition of documents.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Detect any interpolation issues in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/interpolation_issues>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When creating a variable font, the designer must make sure that corresponding\n        paths have the same start points across masters, as well as that corresponding\n        component shapes are placed in the same order within a glyph across masters.\n        If this is not done, the glyph will not interpolate correctly.\n\n        Here we check for the presence of potential interpolation errors using the\n        fontTools.varLib.interpolatable module.\n    ",
                    "result": "SKIP",
                    "severity": 4
                },
                {
                    "description": "Check math signs have the same width.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/math_signs_width>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The most common width is 1049 among a set of 15 math glyphs.\nThe following math glyphs have a different width, though:\n\nWidth = 1151:\nuni2237\n\nWidth = 1242:\nuni223B, uni223D\n\nWidth = 995:\nperpendicular\n\nWidth = 1265:\nuni27C0\n [code: width-outliers]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        It is a common practice to have math signs sharing the same width\n        (preferably the same width as tabular figures accross the entire font family).\n\n        This probably comes from the will to avoid additional tabular math signs\n        knowing that their design can easily share the same width.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Checking Vertical Metric Linegaps.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/linegaps>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 sTypoLineGap and hhea lineGap are both 0.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The LineGap value is a space added to the line height created by the union\n        of the (typo/hhea)Ascender and (typo/hhea)Descender. It is handled differently\n        according to the environment.\n\n        This leading value will be added above the text line in most desktop apps.\n        It will be shared above and under in web browsers, and ignored in Windows\n        if Use_Typo_Metrics is disabled.\n\n        For better linespacing consistency across platforms,\n        (typo/hhea)LineGap values must be 0.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking STAT table entries in static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_in_statics>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Adobe feature syntax allows for the definition of a STAT table. Fonts built\n        with a hand-coded STAT table in feature syntax may be built either as static\n        or variable, but will end up with the same STAT table.\n\n        This is a problem, because a STAT table which works on variable fonts\n        will not be appropriate for static instances. The examples in the OpenType spec\n        of non-variable fonts with a STAT table show that the table entries must be\n        restricted to those entries which refer to the static font's position in\n        the designspace. i.e. a Regular weight static should only have the following\n        entry for the weight axis:\n\n        <AxisIndex value=\"0\"/>\n        <Flags value=\"2\"/>  <!-- ElidableAxisValueName -->\n        <ValueNameID value=\"265\"/>  <!-- Regular -->\n        <Value value=\"400.0\"/>\n\n        However, if the STAT table intended for a variable font is compiled into a\n        static, it will have many entries for this axis. In this case, Windows will\n        read the first entry only, causing all instances to report themselves\n        as \"Thin Condensed\".\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check accent of Lcaron, dcaron, lcaron, tcaron (derived from com.google.fonts/check/alt_caron)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/alt_caron:googlefonts>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "dcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "Lcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "lcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "tcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Lcaron, dcaron, lcaron, tcaron should NOT be composed with quoteright\n        or quotesingle or comma or caron(comb). It should be composed with a\n        distinctive glyph which doesn't look like an apostrophe.\n\n        Source:\n        https://ilovetypography.com/2009/01/24/on-diacritics/\n        http://diacritics.typo.cz/index.php?id=5\n        https://www.typotheque.com/articles/lcaron\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Name table records must not have trailing spaces.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/name/trailing_spaces>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No trailing spaces on name table entries.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 usWinAscent & usWinDescent.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/family/win_ascent_and_descent>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.usWinAscent value should be equal or greater than 2336, but got 2028 instead [code: ascent]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "OS/2.usWinDescent value should be equal or greater than 1258, but got 745 instead [code: descent]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        A font's winAscent and winDescent values should be greater than or equal to\n        the head table's yMax, abs(yMin) values. If they are less than these values,\n        clipping can occur on Windows platforms\n        (https://github.com/RedHatBrand/Overpass/issues/33).\n\n        If the font includes tall/deep writing systems such as Arabic or Devanagari,\n        the winAscent and winDescent can be greater than the yMax and absolute yMin\n        values to accommodate vowel marks.\n\n        When the 'win' Metrics are significantly greater than the UPM, the linespacing\n        can appear too loose. To counteract this, enabling the OS/2 fsSelection\n        bit 7 (Use_Typo_Metrics), will force Windows to use the OS/2 'typo' values\n        instead. This means the font developer can control the linespacing with\n        the 'typo' values, whilst avoiding clipping by setting the 'win' values to\n        values greater than the yMax and absolute yMin.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Checking OS/2 Metrics match hhea Metrics.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/os2_metrics_match_hhea>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2.sTypoAscender/Descender values match hhea.ascent/descent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OS/2 and hhea vertical metric values should match. This will produce the\n        same linespacing on Mac, GNU+Linux and Windows.\n\n        - Mac OS X uses the hhea values.\n        - Windows uses OS/2 or Win, depending on the OS or fsSelection bit value.\n\n        When OS/2 and hhea vertical metrics match, the same linespacing results on\n        macOS, GNU+Linux and Windows. Note that fixing this issue in a previously\n        released font may cause reflow in user documents and unhappy users.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking with ots-sanitize.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/ots>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "ots-sanitize passed this file",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Do we have the latest version of FontBakery installed?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/fontbakery_version>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "FontBakery is up-to-date.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Running old versions of FontBakery can lead to a poor report which may\n        include false WARNs and FAILs due do bugs, as well as outdated\n        quality assurance criteria.\n\n        Older versions will also not report problems that are detected by new checks\n        added to the tool in more recent updates.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains '.notdef' as its first glyph?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/mandatory_glyphs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType specification v1.8.2 recommends that the first glyph is the\n        '.notdef' glyph without a codepoint assigned and with a drawing:\n\n        The .notdef glyph is very important for providing the user feedback\n        that a glyph is not found in the font. This glyph should not be left\n        without an outline as the user will only see what looks like a space\n        if a glyph is missing and not be aware of the active font\u2019s limitation.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#glyph-0-the-notdef-glyph\n\n        Pre-v1.8, it was recommended that fonts should also contain 'space', 'CR'\n        and '.null' glyphs. This might have been relevant for MacOS 9 applications.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font contains glyphs for whitespace characters?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font contains glyphs for whitespace characters.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font has **proper** whitespace glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_glyphnames>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph 0x00A0 is called \"nonbreakingspace\": Change to \"uni00A0\" [code: not-recommended-00a0]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check enforces adherence to recommended whitespace\n        (codepoints 0020 and 00A0) glyph names according to the Adobe Glyph List.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Whitespace glyphs have ink?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_ink>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no whitespace glyph with ink.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font contains all required tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/required_tables>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font contains the following optional tables:\n\n\t- loca\n\n\t- prep\n\n\t- GPOS\n\n\t- GSUB\n\n\t- gasp [code: optional-tables]",
                            "status": "INFO",
                            "traceback": null
                        },
                        {
                            "message": "Font contains all required tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#required-tables\n\n        Whether TrueType or CFF outlines are used in an OpenType font, the following\n        tables are required for the font to function correctly:\n\n        - cmap (Character to glyph mapping)\u23ce\n        - head (Font header)\u23ce\n        - hhea (Horizontal header)\u23ce\n        - hmtx (Horizontal metrics)\u23ce\n        - maxp (Maximum profile)\u23ce\n        - name (Naming table)\u23ce\n        - OS/2 (OS/2 and Windows specific metrics)\u23ce\n        - post (PostScript information)\n\n        The spec also documents that variable fonts require the following table:\n\n        - STAT (Style attributes)\n\n        Depending on the typeface and coverage of a font, certain tables are\n        recommended for optimum quality.\n\n        For example:\u23ce\n        - the performance of a non-linear font is improved if the VDMX, LTSH,\n          and hdmx tables are present.\u23ce\n        - Non-monospaced Latin fonts should have a kern table.\u23ce\n        - A gasp table is necessary if a designer wants to influence the sizes\n          at which grayscaling is used under Windows. Etc.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Are there unwanted tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unwanted_tables>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following unwanted font tables were found:\n\n* FFTM - Table contains redundant FontForge timestamp info\n\nThey can be removed with the 'fix-unwanted-tables' script provided by gftools. [code: unwanted-tables]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some font editors store source data in their own SFNT tables, and these\n        can sometimes sneak into final release files, which should only have\n        OpenType spec tables.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Check correctness of STAT table strings",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_strings>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        On the STAT table, the \"Italic\" keyword must not be used on AxisValues\n        for variation axes other than 'ital'.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Glyph names are all valid?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/valid_glyphnames>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyph names do not comply with naming conventions: 10192.04\n\n A glyph name must be entirely comprised of characters from the following set: A-Z a-z 0-9 .(period) _(underscore). A glyph name must not start with a digit or period. There are a few exceptions such as the special glyph \".notdef\". The glyph names \"twocents\", \"a1\", and \"_\" are all valid, while \"2cents\" and \".twocents\" are not. [code: found-invalid-names]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft's recommendations for OpenType Fonts states the following:\n\n        'NOTE: The PostScript glyph name must be no longer than 31 characters,\n        include only uppercase or lowercase English letters, European digits,\n        the period or the underscore, i.e. from the set [A-Za-z0-9_.] and\n        should start with a letter, except the special glyph name \".notdef\"\n        which starts with a period.'\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/recom#post-table\n\n\n        In practice, though, particularly in modern environments, glyph names\n        can be as long as 63 characters.\n\n        According to the \"Adobe Glyph List Specification\" available at:\n\n        https://github.com/adobe-type-tools/agl-specification\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Font contains unique glyph names?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unique_glyphnames>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Glyph names are all unique.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Duplicate glyph names prevent font installation on Mac OS X.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "List all superfamily filepaths",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/list>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "/Users/simon/others-repos/fonts/ofl/cardo [code: family-path]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This is a merely informative check that lists all sibling families\n        detected by fontbakery.\n\n        Only the fontfiles in these directories will be considered in\n        superfamily-level checks.\n    ",
                    "result": "INFO"
                },
                {
                    "description": "Each font in set of sibling families must have the same set of vertical metrics values.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/superfamily/vertical_metrics>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Sibling families were not detected.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        We may want all fonts within a super-family (all sibling families) to have\n        the same vertical metrics so their line spacing is consistent\n        across the super-family.\n\n        This is an experimental extended version of\n        com.google.fonts/check/family/vertical_metrics and for now it will only\n        result in WARNs.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure indic fonts have the Indian Rupee Sign glyph.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/rupee>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_indic_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per Bureau of Indian Standards every font supporting one of the\n        official Indian languages needs to include Unicode Character\n        \u201c\u20b9\u201d (U+20B9) Indian Rupee Sign.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check font contains no unreachable glyphs",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/unreachable_glyphs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs could not be reached by codepoint or substitution rules:\n\n\t- Copt_ph\n\n\t- Eogonek.alt1\n\n\t- I_long_lc\n\n\t- OI_ph\n\n\t- OI_ph_var\n\n\t- ae.alt\n\n\t- bracket2\n\n\t- centur4a\n\n\t- grave_grave\n\n\t- metr_ph\n\n\t- new09\n\n\t- nonmarkingreturn\n\n\t- reserved\n\n\t- u.03\n\n\t- uniF230.02\n [code: unreachable-glyphs]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs are either accessible directly through Unicode codepoints or through\n        substitution rules.\n\n        In Color Fonts, glyphs are also referenced by the COLR table.\n\n        Any glyphs not accessible by either of these means\n        are redundant and serve only to increase the font's file size.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check if each glyph has the recommended amount of contours.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/contour_count>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This check inspects the glyph outlines and detects the total number of contours in each of them. The expected values are infered from the typical ammounts of contours observed in a large collection of reference font families. The divergences listed below may simply indicate a significantly different design on some of your glyphs. On the other hand, some of these may flag actual bugs in the font such as glyphs mapped to an incorrect codepoint. Please consider reviewing the design and codepoint assignment of these to make sure they are correct.\n\nThe following glyphs do not have the recommended number of contours:\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: aogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: eogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: Wcircumflex\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: gbar\tContours detected: 4\tExpected: 2\n\n\t- Glyph name: uni01EA\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni01EB\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni01EC\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01ED\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01F5\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni0228\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0229\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: beta\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: zeta\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: Wgrave\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wacute\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wdieresis\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni204B\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: lira\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni2295\tContours detected: 5\tExpected: 3\n\n\t- Glyph name: Uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: Wacute\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wcircumflex\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: Wdieresis\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: Wgrave\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: aogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: beta\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: eogonek\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: fi\tContours detected: 1\tExpected: 3\n\n\t- Glyph name: lira\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni00AD\tContours detected: 1\tExpected: 0\n\n\t- Glyph name: uni01EC\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni01ED\tContours detected: 4\tExpected: 3\n\n\t- Glyph name: uni0228\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: uni0229\tContours detected: 3\tExpected: 2\n\n\t- Glyph name: uni204B\tContours detected: 1\tExpected: 2\n\n\t- Glyph name: uogonek\tContours detected: 2\tExpected: 1\n\n\t- Glyph name: zeta\tContours detected: 2\tExpected: 1\n [code: contour-count]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Visually QAing thousands of glyphs by hand is tiring. Most glyphs can only\n        be constructured in a handful of ways. This means a glyph's contour count\n        will only differ slightly amongst different fonts, e.g a 'g' could either\n        be 2 or 3 contours, depending on whether its double story or single story.\n\n        However, a quotedbl should have 2 contours, unless the font belongs\n        to a display family.\n\n        This check currently does not cover variable fonts because there's plenty\n        of alternative ways of constructing glyphs with multiple outlines for each\n        feature in a VarFont. The expected contour count data for this check is\n        currently optimized for the typical construction of glyphs in static fonts.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain a soft hyphen?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_hyphen>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a 'Soft Hyphen' character. [code: softhyphen]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'Soft Hyphen' character (codepoint 0x00AD) is used to mark\n        a hyphenation possibility within a word in the absence of or\n        overriding dictionary hyphenation.\n\n        It is sometimes designed empty with no width (such as a control character),\n        sometimes the same as the traditional hyphen, sometimes double encoded with\n        the hyphen.\n\n        That being said, it is recommended to not include it in the font at all,\n        because discretionary hyphenation should be handled at the level of the\n        shaping engine, not the font. Also, even if present, the software would\n        not display that character.\n\n        More discussion at:\n        https://typedrawers.com/discussion/2046/special-dash-things-softhyphen-horizontalbar\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font contain chws and vchw features?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/cjk_chws_feature>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cjk_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The W3C recommends the addition of chws and vchw features to CJK fonts\n        to enhance the spacing of glyphs in environments which do not fully support\n        JLREQ layout rules.\n\n        The chws_tool utility (https://github.com/googlefonts/chws_tool) can be used\n        to add these features automatically.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure component transforms do not perform scaling or rotation.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/transformed_components>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs had components with scaling or rotation\nor inverted outline direction:\n\n* backslash (component slash)\n* exclamdown (component exclam)\n* uni0186 (component C)\n* uni0254 (component c)\n* uni0258 (component e)\n* uni025C (component epsilon)\n* uni027F (component uni027E)\n* uni0281 (component R.sc)\n* uni0285 (component uni0283)\n* uni028C (component v)\n* uni028D (component w)\n* uni0295 (component uni0294)\n* uni0296 (component uni0294)\n* uni029A (component uni025E)\n* uni02B6 (component R.sc)\n* uni02BB (component comma)\n* uni02C1 (component uni02C0)\n* uni02C5 (component uni02C4)\n* uni02D2 (component uni02D3)\n* uni02D5 (component uni02D4)\n* uni02E8 (component uni02E6)\n* uni02E9 (component uni02E5)\n* uni0318 (component uni0319)\n* uni031E (component uni031D)\n* uni0339 (component uni031C)\n* uni033A (component uni032A)\n* uni0355 (component uni0354)\n* uni0357 (component uni031C)\n* uni035C (component uni0361)\n* uni035D (component uni0361)\n* uni0376 (component Nu.01)\n* uni037B (component uni03F2)\n* uni03F6 (component uni03F5)\n* uni0486 (component uni0485)\n* uni0596 (component uni05A5)\n* uni05AD (component uni05A5)\n* uni05C6 (component afii57680)\n* uni16E3 (component uni16C9)\n* uni16E6 (component uni16D8)\n* uni2035 (component minute)\n* uni204B (component paragraph)\n* uni2127 (component Omega)\n* uni2184 (component c)\n* uni2193 (component arrowup)\n* uni2196 (component uni2197)\n* uni2199 (component uni2198)\n* uni21B7 (component uni21B6)\n* uni21BB (component uni21BA)\n* uni2235 (component uni2234)\n* uni2310 (component logicalnot)\n* uni25C1 (component uni25B7)\n* uni25C3 (component uni25B7)\n* uni260B (component uni260A)\n* uni263E (component uni263D)\n* uni27ED (component uni27EC)\n* uni2E0D (component uni2E0C)\n* uni2E11 (component uni2E10)\n* uni2E1D (component uni2E0C)\n* uni3017 (component uni3016)\n* uniA73E (component C)\n* uniA73F (component c)\n* uniA7FB (component F)\n* uniA7FC (component P)\n* uniA7FD (component M)\n* uniE1A2 (component Y)\n* uni02540304 (component c)\n* uniF16F (component uni2E0C)\n* uniF1A0 (component C)\n* uniF1A1 (component c)\n* uniF1A3 (component C)\n* uniF1A4 (component c)\n* uniF1D3 (component uni2E00)\n* uniF1D5 (component uniF1D4)\n* uniF1D6 (component uni2E0C)\n* uniF1DD (component uniF1DC)\n* uniF1E9 (component question)\n* uniF1EE (component uni2234)\n* uniF300 (component afii57680)\n* L.03 (component Tau.01)\n* sextula (component S)\n* scrupulum (component Epsilon.02)\n* uni00530357 (component uni031C)\n* P.01 (component P)\n* F.01 (component F)\n* uni00560357 (component uni031C)\n* uniF440 (component uni2E00)\n* uniF441 (component uni2E00)\n* M.01 (component M)\n* uni2180.08 (component uni2180.11)\n* uni2181.08 (component uni2181.11)\n* uni2182.08 (component uni2182.11)\n* uni2187.08 (component uni2187.11)\n* uni2188.08 (component uni2188.11)\n* uniF4BC (component p)\n* uniF4BD (component f)\n* uniF4BE (component m)\n* uniF743 (component uni0361)\n* exclamdown.sc (component exclam.sc)\n* u10141 (component u10140)\n* u1031C (component u1031B)\n* Beta.06 (component u1030D)\n* Gamma.04 (component Gamma.01)\n* Gamma.07 (component u10140)\n* Epsilon.15 (component uF0253)\n* Lambda.07 (component Gamma.05)\n* Lambda.08 (component Lambda.02)\n* Chi.02 (component u10323)\n* Omega.11 (component Omega.01)\n* Alpha.01r (component Alpha.01)\n* Alpha.02r (component Alpha.02)\n* Alpha.03r (component Alpha.03)\n* Alpha.04r (component Alpha.04)\n* Alpha.05r (component Alpha.05)\n* Alpha.06r (component Alpha.06)\n* Alpha.07r (component Alpha.07)\n* Alpha.08r (component Alpha.08)\n* Beta.01r (component Beta.01)\n* Beta.02r (component Beta.02)\n* Beta.04r (component Beta.04)\n* Beta.05r (component Beta.05)\n* Beta.11r (component Beta.11)\n* Gamma.01r (component Gamma.01)\n* Gamma.02r (component Gamma.02)\n* Gamma.03r (component Gamma.03)\n* Gamma.05r (component Gamma.05)\n* Delta.01r (component Delta.01)\n* Delta.02r (component Delta.02)\n* Delta.03r (component Delta.03)\n* Epsilon.01r (component Epsilon.01)\n* Epsilon.02r (component Epsilon.02)\n* Epsilon.05r (component Epsilon.05)\n* Epsilon.06r (component Epsilon.06)\n* Epsilon.07r (component Epsilon.07)\n* Epsilon.08r (component Epsilon.08)\n* Epsilon.09r (component Epsilon.09)\n* Epsilon.10r (component Epsilon.10)\n* Epsilon.11r (component Epsilon.11)\n* Epsilon.13r (component Epsilon.13)\n* Epsilon.14r (component Epsilon.14)\n* Epsilon.16r (component Epsilon.16)\n* uni03DA.01r (component uni03DA.01)\n* uni03DA.02r (component uni03DA.02)\n* uni03DA.03r (component uni03DA.03)\n* uni03DA.05r (component uni03DA.05)\n* uni03DA.06r (component uni03DA.06)\n* uni03DA.07r (component uni03DA.07)\n* uni03DC.01r (component uni03DC.01)\n* uni03DC.02r (component uni03DC.02)\n* uni03DC.03r (component uni03DC.03)\n* uni03DC.04r (component uni03DC.04)\n* uni03DC.05r (component uni03DC.05)\n* uni03DC.08r (component uni03DC.08)\n* uni03DC.09r (component uni03DC.09)\n* Zeta.01r (component Zeta.01)\n* Eta.04r (component Eta.04)\n* Eta.06r (component Eta.06)\n* Eta.07r (component Eta.07)\n* Iota.03r (component Iota.03)\n* Iota.04r (component Iota.04)\n* Iota.05r (component Iota.05)\n* Kappa.01r (component Kappa.01)\n* Kappa.02r (component Kappa.02)\n* Kappa.07r (component Kappa.07)\n* Kappa.09r (component Kappa.09)\n* Lambda.01r (component Lambda.01)\n* Lambda.02r (component Lambda.02)\n* Mu.03r (component Mu.03)\n* Mu.04r (component Mu.04)\n* Mu.07r (component Mu.07)\n* Nu.01r (component Nu.01)\n* Nu.02r (component Nu.02)\n* Nu.03r (component Nu.03)\n* Nu.04r (component u10168)\n* Nu.07r (component Nu.07)\n* Xi.03r (component Xi.03)\n* Pi.02r (component u10143)\n* Rho.01r (component Rho.01)\n* Rho.02r (component Rho.02)\n* Rho.04r (component Rho.04)\n* Rho.06r (component Rho.06)\n* Rho.07r (component Rho.07)\n* Rho.08r (component Rho.08)\n* Rho.09r (component Rho.09)\n* Rho.10r (component Rho.10)\n* Sigma.01r (component Sigma.01)\n* uni03F9.01r (component uni03F9.01)\n* Sigma.05r (component Sigma.05)\n* Sigma.06r (component Sigma.06)\n* Sigma.07r (component Sigma.07)\n* Sigma.08r (component Sigma.08)\n* Sigma.09r (component Sigma.09)\n* Sigma.10r (component Sigma.10)\n* uni03F7.01r (component uni03F7.01)\n* Tau.02r (component Tau.02)\n* Upsilon.01r (component Upsilon.01)\n* Upsilon.02r (component Lambda.01)\n* Upsilon.04r (component Upsilon.04)\n* Upsilon.05r (component Upsilon.05)\n* Phi.07r (component Phi.07)\n* Chi.01r (component Chi.01)\n* Chi.02r (component u10323)\n* Psi.05r (component Psi.05)\n* Psi.06r (component u1D219)\n* uni03E0.01r (component uni03E0.01)\n* less.01 (component greater.01)\n* dagger.01 (component dagger)\n* uF024B (component uF024A)\n* uF0250 (component u1D226)\n* uF0251 (component u1D211)\n* uF0252 (component u1D225)\n* uF0254 (component uF0253)\n* uF0256 (component uF0255)\n* uF0258 (component uF0257)\n* uF025D (component uF025C)\n* uF0260 (component Omega.01)\n* uF0267 (component uF0266)\n* uF027E (component uF027D)\n* uF0291 (component Rho.01)\n* uF02AA (component breve)\n* uF0300 (component u10300)\n* uF0301 (component u10301)\n* uF0302 (component u10302)\n* uF0303 (component u10303)\n* uF0304 (component u10304)\n* uF0305 (component u10305)\n* uF030A (component u1030A)\n* uF030B (component u1030B)\n* uF030C (component u1030C)\n* uF030D (component u1030D)\n* uF0310 (component u10310)\n* uF0313 (component u10313)\n* uF0314 (component u10314)\n* uF031B (component u1031B)\n* uF031D (component u1031D)\n [code: transformed-components]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Some families have glyphs which have been constructed by using\n        transformed components e.g the 'u' being constructed from a flipped 'n'.\n\n        From a designers point of view, this sounds like a win (less work).\n        However, such approaches can lead to rasterization issues, such as\n        having the 'u' not sitting on the baseline at certain sizes after\n        running the font through ttfautohint.\n\n        Other issues are outlines that end up reversed when only one dimension\n        is flipped while the other isn't.\n\n        As of July 2019, Marc Foley observed that ttfautohint assigns cvt values\n        to transformed glyphs as if they are not transformed and the result is\n        they render very badly, and that vttLib does not support flipped components.\n\n        When building the font with fontmake, the problem can be fixed by adding\n        this to the command line:\n\n        --filter DecomposeTransformedComponentsFilter\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Ensure no GPOS7 lookups are present.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos7>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has no GPOS7 lookups",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Versions of fonttools >=4.14.0 (19 August 2020) perform an optimisation on\n        chained contextual lookups, expressing GSUB6 as GSUB5 and GPOS8 and GPOS7\n        where possible (when there are no suffixes/prefixes for all rules in\n        the lookup).\n\n        However, makeotf has never generated these lookup types and they are rare\n        in practice. Perhaps before of this, Mac's CoreText shaper does not correctly\n        interpret GPOS7, meaning that these lookups will be ignored by the shaper,\n        and fonts containing these lookups will have unintended positioning errors.\n\n        To fix this warning, rebuild the font with a recent version of fonttools.\n    ",
                    "result": "PASS",
                    "severity": 9
                },
                {
                    "description": "Ensure that the font can be rasterized by FreeType.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/freetype_rasterizer>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font can be rasterized by FreeType.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Malformed fonts can cause FreeType to crash.\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Font has the proper sfntVersion value?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.adobe.fonts/check/sfnt_version>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has the correct sfntVersion value.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        OpenType fonts that contain TrueType outlines should use the value of 0x00010000\n        for the sfntVersion. OpenType fonts containing CFF data (version 1 or 2) should\n        use 0x4F54544F ('OTTO', when re-interpreted as a Tag) for sfntVersion.\n\n        Fonts with the wrong sfntVersion value are rejected by FreeType.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/otff#table-directory\n    ",
                    "result": "PASS",
                    "severity": 10
                },
                {
                    "description": "Space and non-breaking space have the same width?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/whitespace_widths>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Space and non-breaking space have the same width.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        If the space and nbspace glyphs have different widths, then Google Workspace\n        has problems with the font.\n\n        The nbspace is used to replace the space character in multiple situations in\n        documents; such as the space before punctuation in languages that do that. It\n        avoids the punctuation to be separated from the last word and go to next line.\n\n        This is automatic substitution by the text editors, not by fonts. It's also used\n        by designers in text composition practice to create nicely shaped paragraphs.\n        If the space and the nbspace are not the same width, it breaks the text\n        composition of documents.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Detect any interpolation issues in the font.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/interpolation_issues>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When creating a variable font, the designer must make sure that corresponding\n        paths have the same start points across masters, as well as that corresponding\n        component shapes are placed in the same order within a glyph across masters.\n        If this is not done, the glyph will not interpolate correctly.\n\n        Here we check for the presence of potential interpolation errors using the\n        fontTools.varLib.interpolatable module.\n    ",
                    "result": "SKIP",
                    "severity": 4
                },
                {
                    "description": "Check math signs have the same width.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/math_signs_width>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The most common width is 1049 among a set of 15 math glyphs.\nThe following math glyphs have a different width, though:\n\nWidth = 1151:\nuni2237\n\nWidth = 1242:\nuni223B, uni223D\n\nWidth = 995:\nperpendicular\n\nWidth = 1265:\nuni27C0\n [code: width-outliers]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        It is a common practice to have math signs sharing the same width\n        (preferably the same width as tabular figures accross the entire font family).\n\n        This probably comes from the will to avoid additional tabular math signs\n        knowing that their design can easily share the same width.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Checking Vertical Metric Linegaps.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/linegaps>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 sTypoLineGap and hhea lineGap are both 0.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The LineGap value is a space added to the line height created by the union\n        of the (typo/hhea)Ascender and (typo/hhea)Descender. It is handled differently\n        according to the environment.\n\n        This leading value will be added above the text line in most desktop apps.\n        It will be shared above and under in web browsers, and ignored in Windows\n        if Use_Typo_Metrics is disabled.\n\n        For better linespacing consistency across platforms,\n        (typo/hhea)LineGap values must be 0.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking STAT table entries in static fonts.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/STAT_in_statics>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Adobe feature syntax allows for the definition of a STAT table. Fonts built\n        with a hand-coded STAT table in feature syntax may be built either as static\n        or variable, but will end up with the same STAT table.\n\n        This is a problem, because a STAT table which works on variable fonts\n        will not be appropriate for static instances. The examples in the OpenType spec\n        of non-variable fonts with a STAT table show that the table entries must be\n        restricted to those entries which refer to the static font's position in\n        the designspace. i.e. a Regular weight static should only have the following\n        entry for the weight axis:\n\n        <AxisIndex value=\"0\"/>\n        <Flags value=\"2\"/>  <!-- ElidableAxisValueName -->\n        <ValueNameID value=\"265\"/>  <!-- Regular -->\n        <Value value=\"400.0\"/>\n\n        However, if the STAT table intended for a variable font is compiled into a\n        static, it will have many entries for this axis. In this case, Windows will\n        read the first entry only, causing all instances to report themselves\n        as \"Thin Condensed\".\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check accent of Lcaron, dcaron, lcaron, tcaron (derived from com.google.fonts/check/alt_caron)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Universal>",
                        "<FontBakeryCheck:com.google.fonts/check/alt_caron:googlefonts>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "dcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "Lcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "lcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Overridden check status, original: <Status WARN>",
                            "status": "DEBUG",
                            "traceback": null
                        },
                        {
                            "message": "tcaron uses component quoteright. [code: bad-mark]",
                            "status": "FAIL",
                            "traceback": null
                        },
                        {
                            "message": "Looks good!",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Lcaron, dcaron, lcaron, tcaron should NOT be composed with quoteright\n        or quotesingle or comma or caron(comb). It should be composed with a\n        distinctive glyph which doesn't look like an apostrophe.\n\n        Source:\n        https://ilovetypography.com/2009/01/24/on-diacritics/\n        http://diacritics.typo.cz/index.php?id=5\n        https://www.typotheque.com/articles/lcaron\n    ",
                    "result": "FAIL"
                }
            ],
            "key": [
                "<Section: Universal>",
                null,
                null
            ],
            "result": {
                "FAIL": 15,
                "INFO": 6,
                "PASS": 41,
                "SKIP": 18,
                "WARN": 15
            }
        },
        {
            "checks": [
                {
                    "description": "Is the CFF subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_call_depth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The Type 2 Charstring Format, Technical Note #5177\",\n        the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is the CFF2 subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff2_call_depth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff2",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The CFF2 CharString Format\", the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font use deprecated CFF operators or operations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_deprecated_operators>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'dotsection' operator and the use of 'endchar' to build accented characters\n        from the Adobe Standard Encoding Character Set (\"seac\") are deprecated in CFF.\n        Adobe recommends repairing any fonts that use these, especially endchar-as-seac,\n        because a rendering issue was discovered in Microsoft Word with a font that\n        makes use of this operation. The check treats that usage as a FAIL.\n        There are no known ill effects of using dotsection, so that check is a WARN.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is the CFF subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_call_depth>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The Type 2 Charstring Format, Technical Note #5177\",\n        the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is the CFF2 subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff2_call_depth>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff2",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The CFF2 CharString Format\", the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font use deprecated CFF operators or operations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_deprecated_operators>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'dotsection' operator and the use of 'endchar' to build accented characters\n        from the Adobe Standard Encoding Character Set (\"seac\") are deprecated in CFF.\n        Adobe recommends repairing any fonts that use these, especially endchar-as-seac,\n        because a rendering issue was discovered in Microsoft Word with a font that\n        makes use of this operation. The check treats that usage as a FAIL.\n        There are no known ill effects of using dotsection, so that check is a WARN.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is the CFF subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_call_depth>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The Type 2 Charstring Format, Technical Note #5177\",\n        the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Is the CFF2 subr/gsubr call depth > 10?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff2_call_depth>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff2",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per \"The CFF2 CharString Format\", the \"Subr nesting, stack limit\" is 10.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Does the font use deprecated CFF operators or operations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.cff>",
                        "<FontBakeryCheck:com.adobe.fonts/check/cff_deprecated_operators>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'dotsection' operator and the use of 'endchar' to build accented characters\n        from the Adobe Standard Encoding Character Set (\"seac\") are deprecated in CFF.\n        Adobe recommends repairing any fonts that use these, especially endchar-as-seac,\n        because a rendering issue was discovered in Microsoft Word with a font that\n        makes use of this operation. The check treats that usage as a FAIL.\n        There are no known ill effects of using dotsection, so that check is a WARN.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.cff>",
                null,
                null
            ],
            "result": {
                "SKIP": 9
            }
        },
        {
            "checks": [
                {
                    "description": "Fonts have equal unicode encodings?",
                    "key": [
                        "<Section: fontbakery.profiles.cmap>",
                        "<FontBakeryCheck:com.google.fonts/check/family/equal_unicode_encodings>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Fonts have equal unicode encodings.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.cmap>",
                null,
                null
            ],
            "result": {
                "PASS": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Make sure all font files have the same version value.",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/family/equal_font_versions>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Version info differs among font files of the same font project.\nThese were the version values found:\n* /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf: 0.990997314453125\n* /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf: 1.0010986328125\n* /Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf: 1.04510498046875\n [code: mismatch]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "result": "WARN"
                },
                {
                    "description": "Checking unitsPerEm value is reasonable.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filtered: Google Fonts has a stricter policy which is enforced by com.google.fonts/check/unitsperem_strict",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec:\n\n        The value of unitsPerEm at the head table must be a value\n        between 16 and 16384. Any value in this range is valid.\n\n        In fonts that have TrueType outlines, a power of 2 is recommended\n        as this allows performance optimizations in some rasterizers.\n\n        But 1000 is a commonly used value. And 2000 may become\n        increasingly more common on Variable Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking font version fields (head and name table).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/font_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All font version fields match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking head.macStyle value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/mac_style>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "head macStyle ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "head macStyle BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The values of the flags on the macStyle entry on the 'head' OpenType table\n        that describe whether a font is bold and/or italic must be coherent with the\n        actual style of the font as inferred by its filename.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking unitsPerEm value is reasonable.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filtered: Google Fonts has a stricter policy which is enforced by com.google.fonts/check/unitsperem_strict",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec:\n\n        The value of unitsPerEm at the head table must be a value\n        between 16 and 16384. Any value in this range is valid.\n\n        In fonts that have TrueType outlines, a power of 2 is recommended\n        as this allows performance optimizations in some rasterizers.\n\n        But 1000 is a commonly used value. And 2000 may become\n        increasingly more common on Variable Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking font version fields (head and name table).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/font_version>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All font version fields match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking head.macStyle value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/mac_style>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "head macStyle ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "head macStyle BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The values of the flags on the macStyle entry on the 'head' OpenType table\n        that describe whether a font is bold and/or italic must be coherent with the\n        actual style of the font as inferred by its filename.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking unitsPerEm value is reasonable.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/unitsperem>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Filtered: Google Fonts has a stricter policy which is enforced by com.google.fonts/check/unitsperem_strict",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec:\n\n        The value of unitsPerEm at the head table must be a value\n        between 16 and 16384. Any value in this range is valid.\n\n        In fonts that have TrueType outlines, a power of 2 is recommended\n        as this allows performance optimizations in some rasterizers.\n\n        But 1000 is a commonly used value. And 2000 may become\n        increasingly more common on Variable Fonts.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking font version fields (head and name table).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/font_version>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All font version fields match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking head.macStyle value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.head>",
                        "<FontBakeryCheck:com.google.fonts/check/mac_style>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "head macStyle ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "head macStyle BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The values of the flags on the macStyle entry on the 'head' OpenType table\n        that describe whether a font is bold and/or italic must be coherent with the\n        actual style of the font as inferred by its filename.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.head>",
                null,
                null
            ],
            "result": {
                "PASS": 6,
                "SKIP": 3,
                "WARN": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Fonts have consistent PANOSE proportion?",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/family/panose_proportion>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "PANOSE proportion is not the same across this family. In order to fix this, please make sure that the panose.bProportion value is the same in the OS/2 table of all of this family font files. [code: inconsistency]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "result": "WARN"
                },
                {
                    "description": "Fonts have consistent PANOSE family type?",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/family/panose_familytype>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Fonts have consistent PANOSE family type.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check that OS/2.fsSelection bold & italic settings are unique for each NameID1",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.adobe.fonts/check/family/bold_italic_unique_for_nameid1>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "The OS/2.fsSelection bold & italic settings were unique within each compatible family group.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per the OpenType spec: name ID 1 'is used in combination with Font Subfamily\n        name (name ID 2), and should be shared among at most four fonts that differ\n        only in weight or style.\n\n        This four-way distinction should also be reflected in the OS/2.fsSelection\n        field, using bits 0 and 5.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check if OS/2 xAvgCharWidth is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/xavgcharwidth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 xAvgCharWidth is 1222 but it should be 1226 which corresponds to the average of the widths of all glyphs in the font. These are similar values, which may be a symptom of the slightly different calculation of the xAvgCharWidth value in font editors. There's further discussion on this at https://github.com/fonttools/fontbakery/issues/1622 [code: xAvgCharWidth-close]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "result": "INFO"
                },
                {
                    "description": "Check if OS/2 fsSelection matches head macStyle bold and italic bits.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.adobe.fonts/check/fsselection_matches_macstyle>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The OS/2.fsSelection and head.macStyle bold and italic settings match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The bold and italic bits in OS/2.fsSelection must match the bold and italic\n        bits in head.macStyle per the OpenType spec.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check code page character ranges",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/code_pages>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "At least one code page is defined.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        At least some programs (such as Word and Sublime Text) under Windows 7\n        do not recognize fonts unless code page bits are properly set on the\n        ulCodePageRange1 (and/or ulCodePageRange2) fields of the OS/2 table.\n\n        More specifically, the fonts are selectable in the font menu, but whichever\n        Windows API these applications use considers them unsuitable for any\n        character set, so anything set in these fonts is rendered with Arial as a\n        fallback font.\n\n        This check currently does not identify which code pages should be set.\n        Auto-detecting coverage is not trivial since the OpenType specification\n        leaves the interpretation of whether a given code page is \"functional\"\n        or not open to the font developer to decide.\n\n        So here we simply detect as a FAIL when a given font has no code page\n        declared at all.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID against configuration.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.thetypefounders/check/vendor_id>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Add the `vendor_id` key to a `fontbakery.yaml` file on your font project directory to enable this check.\nYou'll also need to use the `--configuration` flag when invoking fontbakery.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When a font project's Vendor ID is specified explicitly on FontBakery's\n        configuration file, all binaries must have a matching vendor identifier\n        value in the OS/2 table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking OS/2 fsSelection value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/fsselection>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsSelection REGULAR bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check if OS/2 xAvgCharWidth is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/xavgcharwidth>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 xAvgCharWidth is 1306 but it should be 1309 which corresponds to the average of the widths of all glyphs in the font. These are similar values, which may be a symptom of the slightly different calculation of the xAvgCharWidth value in font editors. There's further discussion on this at https://github.com/fonttools/fontbakery/issues/1622 [code: xAvgCharWidth-close]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "result": "INFO"
                },
                {
                    "description": "Check if OS/2 fsSelection matches head macStyle bold and italic bits.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.adobe.fonts/check/fsselection_matches_macstyle>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The OS/2.fsSelection and head.macStyle bold and italic settings match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The bold and italic bits in OS/2.fsSelection must match the bold and italic\n        bits in head.macStyle per the OpenType spec.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check code page character ranges",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/code_pages>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "At least one code page is defined.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        At least some programs (such as Word and Sublime Text) under Windows 7\n        do not recognize fonts unless code page bits are properly set on the\n        ulCodePageRange1 (and/or ulCodePageRange2) fields of the OS/2 table.\n\n        More specifically, the fonts are selectable in the font menu, but whichever\n        Windows API these applications use considers them unsuitable for any\n        character set, so anything set in these fonts is rendered with Arial as a\n        fallback font.\n\n        This check currently does not identify which code pages should be set.\n        Auto-detecting coverage is not trivial since the OpenType specification\n        leaves the interpretation of whether a given code page is \"functional\"\n        or not open to the font developer to decide.\n\n        So here we simply detect as a FAIL when a given font has no code page\n        declared at all.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID against configuration.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.thetypefounders/check/vendor_id>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Add the `vendor_id` key to a `fontbakery.yaml` file on your font project directory to enable this check.\nYou'll also need to use the `--configuration` flag when invoking fontbakery.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When a font project's Vendor ID is specified explicitly on FontBakery's\n        configuration file, all binaries must have a matching vendor identifier\n        value in the OS/2 table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking OS/2 fsSelection value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/fsselection>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsSelection REGULAR bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check if OS/2 xAvgCharWidth is correct.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/xavgcharwidth>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 xAvgCharWidth is 1305 but it should be 1307 which corresponds to the average of the widths of all glyphs in the font. These are similar values, which may be a symptom of the slightly different calculation of the xAvgCharWidth value in font editors. There's further discussion on this at https://github.com/fonttools/fontbakery/issues/1622 [code: xAvgCharWidth-close]",
                            "status": "INFO",
                            "traceback": null
                        }
                    ],
                    "result": "INFO"
                },
                {
                    "description": "Check if OS/2 fsSelection matches head macStyle bold and italic bits.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.adobe.fonts/check/fsselection_matches_macstyle>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The OS/2.fsSelection and head.macStyle bold and italic settings match.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The bold and italic bits in OS/2.fsSelection must match the bold and italic\n        bits in head.macStyle per the OpenType spec.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check code page character ranges",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/code_pages>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "At least one code page is defined.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        At least some programs (such as Word and Sublime Text) under Windows 7\n        do not recognize fonts unless code page bits are properly set on the\n        ulCodePageRange1 (and/or ulCodePageRange2) fields of the OS/2 table.\n\n        More specifically, the fonts are selectable in the font menu, but whichever\n        Windows API these applications use considers them unsuitable for any\n        character set, so anything set in these fonts is rendered with Arial as a\n        fallback font.\n\n        This check currently does not identify which code pages should be set.\n        Auto-detecting coverage is not trivial since the OpenType specification\n        leaves the interpretation of whether a given code page is \"functional\"\n        or not open to the font developer to decide.\n\n        So here we simply detect as a FAIL when a given font has no code page\n        declared at all.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking OS/2 achVendID against configuration.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.thetypefounders/check/vendor_id>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Add the `vendor_id` key to a `fontbakery.yaml` file on your font project directory to enable this check.\nYou'll also need to use the `--configuration` flag when invoking fontbakery.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        When a font project's Vendor ID is specified explicitly on FontBakery's\n        configuration file, all binaries must have a matching vendor identifier\n        value in the OS/2 table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Checking OS/2 fsSelection value.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.os2>",
                        "<FontBakeryCheck:com.google.fonts/check/fsselection>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "OS/2 fsSelection REGULAR bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection ITALIC bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        },
                        {
                            "message": "OS/2 fsSelection BOLD bit is properly set.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.os2>",
                null,
                null
            ],
            "result": {
                "INFO": 3,
                "PASS": 11,
                "SKIP": 3,
                "WARN": 1
            }
        },
        {
            "checks": [
                {
                    "description": "Fonts have consistent underline thickness?",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/family/underline_thickness>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Thickness of the underline is not the same across this family. In order to fix this, please make sure that the underlineThickness value is the same in the 'post' table of all of this family font files.\nDetected underlineThickness values are:\n\t/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf: 100\n\t/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf: 115\n\t/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf: 100\n [code: inconsistent-underline-thickness]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Dave C Lemon (Adobe Type Team) recommends setting the underline thickness to be\n        consistent across the family.\n\n        If thicknesses are not family consistent, words set on the same line which have\n        different styles look strange.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Font has correct post table version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/post_table_version>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has an acceptable post format 2.0 table version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Format 2.5 of the 'post' table was deprecated in OpenType 1.3 and\n        should not be used.\n\n        According to Thomas Phinney, the possible problem with post format 3\n        is that under the right combination of circumstances, one can generate\n        PDF from a font with a post format 3 table, and not have accurate backing\n        store for any text that has non-default glyphs for a given codepoint.\n\n        It will look fine but not be searchable. This can affect Latin text with\n        high-end typography, and some complex script writing systems, especially\n        with higher-quality fonts. Those circumstances generally involve creating\n        a PDF by first printing a PostScript stream to disk, and then creating a\n        PDF from that stream without reference to the original source document.\n        There are some workflows where this applies,but these are not common\n        use cases.\n\n        Apple recommends against use of post format version 4 as \"no longer\n        necessary and should be avoided\". Please see the Apple TrueType reference\n        documentation for additional details.\n\n        https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6post.html\n\n        Acceptable post format versions are 2 and 3 for TTF and OTF CFF2 builds,\n        and post format 3 for CFF builds.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking post.italicAngle value. (derived from com.google.fonts/check/italic_angle)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_angle:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Value of post.italicAngle is -12.0 with style=\"Italic\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'post' table italicAngle property should be a reasonable amount, likely\n        not more than 30\u00b0. Note that in the OpenType specification, the value is\n        negative for a rightward lean.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/post\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font has correct post table version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/post_table_version>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has an acceptable post format 2.0 table version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Format 2.5 of the 'post' table was deprecated in OpenType 1.3 and\n        should not be used.\n\n        According to Thomas Phinney, the possible problem with post format 3\n        is that under the right combination of circumstances, one can generate\n        PDF from a font with a post format 3 table, and not have accurate backing\n        store for any text that has non-default glyphs for a given codepoint.\n\n        It will look fine but not be searchable. This can affect Latin text with\n        high-end typography, and some complex script writing systems, especially\n        with higher-quality fonts. Those circumstances generally involve creating\n        a PDF by first printing a PostScript stream to disk, and then creating a\n        PDF from that stream without reference to the original source document.\n        There are some workflows where this applies,but these are not common\n        use cases.\n\n        Apple recommends against use of post format version 4 as \"no longer\n        necessary and should be avoided\". Please see the Apple TrueType reference\n        documentation for additional details.\n\n        https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6post.html\n\n        Acceptable post format versions are 2 and 3 for TTF and OTF CFF2 builds,\n        and post format 3 for CFF builds.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking post.italicAngle value. (derived from com.google.fonts/check/italic_angle)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_angle:googlefonts>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Value of post.italicAngle is 0.0 with style=\"Bold\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'post' table italicAngle property should be a reasonable amount, likely\n        not more than 30\u00b0. Note that in the OpenType specification, the value is\n        negative for a rightward lean.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/post\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Font has correct post table version?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/post_table_version>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has an acceptable post format 2.0 table version.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Format 2.5 of the 'post' table was deprecated in OpenType 1.3 and\n        should not be used.\n\n        According to Thomas Phinney, the possible problem with post format 3\n        is that under the right combination of circumstances, one can generate\n        PDF from a font with a post format 3 table, and not have accurate backing\n        store for any text that has non-default glyphs for a given codepoint.\n\n        It will look fine but not be searchable. This can affect Latin text with\n        high-end typography, and some complex script writing systems, especially\n        with higher-quality fonts. Those circumstances generally involve creating\n        a PDF by first printing a PostScript stream to disk, and then creating a\n        PDF from that stream without reference to the original source document.\n        There are some workflows where this applies,but these are not common\n        use cases.\n\n        Apple recommends against use of post format version 4 as \"no longer\n        necessary and should be avoided\". Please see the Apple TrueType reference\n        documentation for additional details.\n\n        https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6post.html\n\n        Acceptable post format versions are 2 and 3 for TTF and OTF CFF2 builds,\n        and post format 3 for CFF builds.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Checking post.italicAngle value. (derived from com.google.fonts/check/italic_angle)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.post>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_angle:googlefonts>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Value of post.italicAngle is 0.0 with style=\"Regular\".",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The 'post' table italicAngle property should be a reasonable amount, likely\n        not more than 30\u00b0. Note that in the OpenType specification, the value is\n        negative for a rightward lean.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/post\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.post>",
                null,
                null
            ],
            "result": {
                "FAIL": 1,
                "PASS": 6
            }
        },
        {
            "checks": [
                {
                    "description": "Verify that each group of fonts with the same nameID 1 has maximum of 4 fonts.",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/family/max_4_fonts_per_family_name>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "There were no more than 4 fonts per family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per the OpenType spec:\n\n        'The Font Family name [...] should be shared among at most four fonts that\n        differ only in weight or style [...]'\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Verify that family names in the name table are consistent across all fonts in the family. Checks Typographic Family name (nameID 16) if present, otherwise uses Font Family name (nameID 1)",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/family/consistent_family_name>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "Font family names are consistent across the family.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Per the OpenType spec:\n            * \"...many existing applications that use this pair of names assume that a\n              Font Family name is shared by at most four fonts that form a font\n              style-linking group\"\n            * \"For extended typographic families that includes fonts other than the\n              four basic styles(regular, italic, bold, bold italic), it is strongly\n              recommended that name IDs 16 and 17 be used in fonts to create an\n              extended, typographic grouping.\"\n            * \"If name ID 16 is absent, then name ID 1 is considered to be the\n              typographic family name.\"\n\n        https://learn.microsoft.com/en-us/typography/opentype/spec/name\n\n        Fonts within a font family all must have consistent names\n        in the Typographic Family name (nameID 16)\n        or Font Family name (nameID 1), depending on which it uses.\n\n        Inconsistent font/typographic family names across fonts in a family\n        can result in unexpected behaviors, such as broken style linking.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table for empty records.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/empty_records>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No empty name table records found.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check the name table for empty records,\n        as this can cause problems in Adobe apps.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Description strings in the name table must not contain copyright info.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/no_copyright_on_description>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Description strings in the name table do not contain any copyright string.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking correctness of monospaced metadata.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/monospace>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not monospaced and all related metadata look good. [code: good]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are various metadata in the OpenType spec to specify if a font is\n        monospaced or not. If the font is not truly monospaced, then no monospaced\n        metadata should be set (as sometimes they mistakenly are...)\n\n        Requirements for monospace fonts:\n\n        * post.isFixedPitch - \"Set to 0 if the font is proportionally spaced,\n          non-zero if the font is not proportionally spaced (monospaced)\"\n          (https://www.microsoft.com/typography/otspec/post.htm)\n\n        * hhea.advanceWidthMax must be correct, meaning no glyph's width value\n          is greater. (https://www.microsoft.com/typography/otspec/hhea.htm)\n\n        * OS/2.panose.bProportion must be set to 9 (monospace) on latin text fonts.\n\n        * OS/2.panose.bSpacing must be set to 3 (monospace) on latin hand written\n          or latin symbol fonts.\n\n        * Spec says: \"The PANOSE definition contains ten digits each of which currently\n          describes up to sixteen variations. Windows uses bFamilyType, bSerifStyle\n          and bProportion in the font mapper to determine family type. It also uses\n          bProportion to determine if the font is monospaced.\"\n          (https://www.microsoft.com/typography/otspec/os2.htm#pan\n           https://monotypecom-test.monotype.de/services/pan2)\n\n        * OS/2.xAvgCharWidth must be set accurately.\n          \"OS/2.xAvgCharWidth is used when rendering monospaced fonts,\n          at least by Windows GDI\"\n          (http://typedrawers.com/discussion/comment/15397/#Comment_15397)\n\n        Also we should report an error for glyphs not of average width.\n\n\n        Please also note:\n\n        Thomas Phinney told us that a few years ago (as of December 2019), if you gave\n        a font a monospace flag in Panose, Microsoft Word would ignore the actual\n        advance widths and treat it as monospaced.\n\n        Source: https://typedrawers.com/discussion/comment/45140/#Comment_45140\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does full font name begin with the font family name?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/match_familyname_fullfont>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Full font name begins with the font family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The FULL_FONT_NAME entry in the \u2018name\u2019 table should start with the same string\n        as the Family Name (FONT_FAMILY_NAME, TYPOGRAPHIC_FAMILY_NAME or\n        WWS_FAMILY_NAME).\n\n        If the Family Name is not included as the first part of the Full Font Name, and\n        the user embeds the font in a document using a Microsoft Office app, the app\n        will fail to render the font when it opens the document again.\n\n        NOTE: Up until version 1.5, the OpenType spec included the following exception\n        in the definition of Full Font Name:\n\n            \"An exception to the [above] definition of Full font name is for Microsoft\n            platform strings for CFF OpenType fonts: in this case, the Full font name\n            string must be identical to the PostScript FontName in the CFF Name INDEX.\"\n\n        https://docs.microsoft.com/en-us/typography/opentype/otspec150/name#name-ids\n    ",
                    "result": "PASS"
                },
                {
                    "description": "PostScript name follows OpenType specification requirements?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/postscript_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "PostScript name follows requirements. [code: psname-ok]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font follows the family naming recommendations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/family_naming_recommendations>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font follows the family naming recommendations.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "CFF table FontName must match name table ID 6 (PostScript name).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_vs_cff>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should match\n        the FontName string in the 'CFF ' table.\n\n        The 'CFF ' table has a lot of information that is duplicated in other tables.\n        This information should be consistent across tables, because there's\n        no guarantee which table an app will get the data from.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Name table ID 6 (PostScript name) must be consistent across platforms.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_name_consistency>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Entries in the \"name\" table for ID 6 (PostScript name) are consistent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should be\n        consistent across platforms.\n\n        This is the TTF/CFF2 equivalent of the CFF 'name/postscript_vs_cff' check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table IDs 1, 2, 16, 17 to conform to Italic style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/italic_names>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All font names are good for Italic fonts.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that several entries in the name table\n        conform to the font's Upright or Italic style,\n        namely IDs 1 & 2 as well as 16 & 17 if they're present.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table for empty records.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/empty_records>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No empty name table records found.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check the name table for empty records,\n        as this can cause problems in Adobe apps.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Description strings in the name table must not contain copyright info.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/no_copyright_on_description>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Description strings in the name table do not contain any copyright string.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking correctness of monospaced metadata.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/monospace>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not monospaced and all related metadata look good. [code: good]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are various metadata in the OpenType spec to specify if a font is\n        monospaced or not. If the font is not truly monospaced, then no monospaced\n        metadata should be set (as sometimes they mistakenly are...)\n\n        Requirements for monospace fonts:\n\n        * post.isFixedPitch - \"Set to 0 if the font is proportionally spaced,\n          non-zero if the font is not proportionally spaced (monospaced)\"\n          (https://www.microsoft.com/typography/otspec/post.htm)\n\n        * hhea.advanceWidthMax must be correct, meaning no glyph's width value\n          is greater. (https://www.microsoft.com/typography/otspec/hhea.htm)\n\n        * OS/2.panose.bProportion must be set to 9 (monospace) on latin text fonts.\n\n        * OS/2.panose.bSpacing must be set to 3 (monospace) on latin hand written\n          or latin symbol fonts.\n\n        * Spec says: \"The PANOSE definition contains ten digits each of which currently\n          describes up to sixteen variations. Windows uses bFamilyType, bSerifStyle\n          and bProportion in the font mapper to determine family type. It also uses\n          bProportion to determine if the font is monospaced.\"\n          (https://www.microsoft.com/typography/otspec/os2.htm#pan\n           https://monotypecom-test.monotype.de/services/pan2)\n\n        * OS/2.xAvgCharWidth must be set accurately.\n          \"OS/2.xAvgCharWidth is used when rendering monospaced fonts,\n          at least by Windows GDI\"\n          (http://typedrawers.com/discussion/comment/15397/#Comment_15397)\n\n        Also we should report an error for glyphs not of average width.\n\n\n        Please also note:\n\n        Thomas Phinney told us that a few years ago (as of December 2019), if you gave\n        a font a monospace flag in Panose, Microsoft Word would ignore the actual\n        advance widths and treat it as monospaced.\n\n        Source: https://typedrawers.com/discussion/comment/45140/#Comment_45140\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does full font name begin with the font family name?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/match_familyname_fullfont>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Full font name begins with the font family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The FULL_FONT_NAME entry in the \u2018name\u2019 table should start with the same string\n        as the Family Name (FONT_FAMILY_NAME, TYPOGRAPHIC_FAMILY_NAME or\n        WWS_FAMILY_NAME).\n\n        If the Family Name is not included as the first part of the Full Font Name, and\n        the user embeds the font in a document using a Microsoft Office app, the app\n        will fail to render the font when it opens the document again.\n\n        NOTE: Up until version 1.5, the OpenType spec included the following exception\n        in the definition of Full Font Name:\n\n            \"An exception to the [above] definition of Full font name is for Microsoft\n            platform strings for CFF OpenType fonts: in this case, the Full font name\n            string must be identical to the PostScript FontName in the CFF Name INDEX.\"\n\n        https://docs.microsoft.com/en-us/typography/opentype/otspec150/name#name-ids\n    ",
                    "result": "PASS"
                },
                {
                    "description": "PostScript name follows OpenType specification requirements?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/postscript_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "PostScript name follows requirements. [code: psname-ok]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font follows the family naming recommendations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/family_naming_recommendations>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font follows the family naming recommendations.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "CFF table FontName must match name table ID 6 (PostScript name).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_vs_cff>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should match\n        the FontName string in the 'CFF ' table.\n\n        The 'CFF ' table has a lot of information that is duplicated in other tables.\n        This information should be consistent across tables, because there's\n        no guarantee which table an app will get the data from.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Name table ID 6 (PostScript name) must be consistent across platforms.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_name_consistency>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Entries in the \"name\" table for ID 6 (PostScript name) are consistent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should be\n        consistent across platforms.\n\n        This is the TTF/CFF2 equivalent of the CFF 'name/postscript_vs_cff' check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table IDs 1, 2, 16, 17 to conform to Italic style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/italic_names>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not Italic.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that several entries in the name table\n        conform to the font's Upright or Italic style,\n        namely IDs 1 & 2 as well as 16 & 17 if they're present.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check name table for empty records.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/empty_records>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No empty name table records found.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check the name table for empty records,\n        as this can cause problems in Adobe apps.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Description strings in the name table must not contain copyright info.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/no_copyright_on_description>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Description strings in the name table do not contain any copyright string.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Checking correctness of monospaced metadata.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/monospace>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not monospaced and all related metadata look good. [code: good]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There are various metadata in the OpenType spec to specify if a font is\n        monospaced or not. If the font is not truly monospaced, then no monospaced\n        metadata should be set (as sometimes they mistakenly are...)\n\n        Requirements for monospace fonts:\n\n        * post.isFixedPitch - \"Set to 0 if the font is proportionally spaced,\n          non-zero if the font is not proportionally spaced (monospaced)\"\n          (https://www.microsoft.com/typography/otspec/post.htm)\n\n        * hhea.advanceWidthMax must be correct, meaning no glyph's width value\n          is greater. (https://www.microsoft.com/typography/otspec/hhea.htm)\n\n        * OS/2.panose.bProportion must be set to 9 (monospace) on latin text fonts.\n\n        * OS/2.panose.bSpacing must be set to 3 (monospace) on latin hand written\n          or latin symbol fonts.\n\n        * Spec says: \"The PANOSE definition contains ten digits each of which currently\n          describes up to sixteen variations. Windows uses bFamilyType, bSerifStyle\n          and bProportion in the font mapper to determine family type. It also uses\n          bProportion to determine if the font is monospaced.\"\n          (https://www.microsoft.com/typography/otspec/os2.htm#pan\n           https://monotypecom-test.monotype.de/services/pan2)\n\n        * OS/2.xAvgCharWidth must be set accurately.\n          \"OS/2.xAvgCharWidth is used when rendering monospaced fonts,\n          at least by Windows GDI\"\n          (http://typedrawers.com/discussion/comment/15397/#Comment_15397)\n\n        Also we should report an error for glyphs not of average width.\n\n\n        Please also note:\n\n        Thomas Phinney told us that a few years ago (as of December 2019), if you gave\n        a font a monospace flag in Panose, Microsoft Word would ignore the actual\n        advance widths and treat it as monospaced.\n\n        Source: https://typedrawers.com/discussion/comment/45140/#Comment_45140\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Does full font name begin with the font family name?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/match_familyname_fullfont>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Full font name begins with the font family name.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The FULL_FONT_NAME entry in the \u2018name\u2019 table should start with the same string\n        as the Family Name (FONT_FAMILY_NAME, TYPOGRAPHIC_FAMILY_NAME or\n        WWS_FAMILY_NAME).\n\n        If the Family Name is not included as the first part of the Full Font Name, and\n        the user embeds the font in a document using a Microsoft Office app, the app\n        will fail to render the font when it opens the document again.\n\n        NOTE: Up until version 1.5, the OpenType spec included the following exception\n        in the definition of Full Font Name:\n\n            \"An exception to the [above] definition of Full font name is for Microsoft\n            platform strings for CFF OpenType fonts: in this case, the Full font name\n            string must be identical to the PostScript FontName in the CFF Name INDEX.\"\n\n        https://docs.microsoft.com/en-us/typography/opentype/otspec150/name#name-ids\n    ",
                    "result": "PASS"
                },
                {
                    "description": "PostScript name follows OpenType specification requirements?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/postscript_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "PostScript name follows requirements. [code: psname-ok]",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Font follows the family naming recommendations?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/family_naming_recommendations>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font follows the family naming recommendations.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "CFF table FontName must match name table ID 6 (PostScript name).",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_vs_cff>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_cff",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should match\n        the FontName string in the 'CFF ' table.\n\n        The 'CFF ' table has a lot of information that is duplicated in other tables.\n        This information should be consistent across tables, because there's\n        no guarantee which table an app will get the data from.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Name table ID 6 (PostScript name) must be consistent across platforms.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.adobe.fonts/check/name/postscript_name_consistency>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Entries in the \"name\" table for ID 6 (PostScript name) are consistent.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The PostScript name entries in the font's 'name' table should be\n        consistent across platforms.\n\n        This is the TTF/CFF2 equivalent of the CFF 'name/postscript_vs_cff' check.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check name table IDs 1, 2, 16, 17 to conform to Italic style.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.name>",
                        "<FontBakeryCheck:com.google.fonts/check/name/italic_names>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font is not Italic.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        This check ensures that several entries in the name table\n        conform to the font's Upright or Italic style,\n        namely IDs 1 & 2 as well as 16 & 17 if they're present.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.name>",
                null,
                null
            ],
            "result": {
                "PASS": 24,
                "SKIP": 5
            }
        },
        {
            "checks": [
                {
                    "description": "Does the number of glyphs in the loca table match the maxp table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.loca>",
                        "<FontBakeryCheck:com.google.fonts/check/loca/maxp_num_glyphs>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'loca' table matches numGlyphs in 'maxp' table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Does the number of glyphs in the loca table match the maxp table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.loca>",
                        "<FontBakeryCheck:com.google.fonts/check/loca/maxp_num_glyphs>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'loca' table matches numGlyphs in 'maxp' table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Does the number of glyphs in the loca table match the maxp table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.loca>",
                        "<FontBakeryCheck:com.google.fonts/check/loca/maxp_num_glyphs>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "'loca' table matches numGlyphs in 'maxp' table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.loca>",
                null,
                null
            ],
            "result": {
                "PASS": 3
            }
        },
        {
            "checks": [
                {
                    "description": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/maxadvancewidth>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check hhea.caretSlopeRise and hhea.caretSlopeRun",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/caret_slope>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "hhea.caretSlopeRise and hhea.caretSlopeRun do not match with post.italicAngle.\nGot: caretSlopeRise 100 and caretSlopeRun 21\nExpected: caretSlopeRise 2048 and caretSlopeRun 435 [code: caretslope-mismatch]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks whether hhea.caretSlopeRise and hhea.caretSlopeRun\n        match with post.italicAngle.\n\n        For Upright fonts, you can set hhea.caretSlopeRise to 1\n        and hhea.caretSlopeRun to 0.\n\n        For Italic fonts, you can set hhea.caretSlopeRise to head.unitsPerEm\n        and calculate hhea.caretSlopeRun like this:\n        round(math.tan(\n          math.radians(-1 * font[\"post\"].italicAngle)) * font[\"head\"].unitsPerEm)\n\n        This check allows for a 0.1\u00b0 rounding difference between the Italic angle\n        as calculated by the caret slope and post.italicAngle\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/maxadvancewidth>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check hhea.caretSlopeRise and hhea.caretSlopeRun",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/caret_slope>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "hhea.caretSlopeRise and hhea.caretSlopeRun match with post.italicAngle.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks whether hhea.caretSlopeRise and hhea.caretSlopeRun\n        match with post.italicAngle.\n\n        For Upright fonts, you can set hhea.caretSlopeRise to 1\n        and hhea.caretSlopeRun to 0.\n\n        For Italic fonts, you can set hhea.caretSlopeRise to head.unitsPerEm\n        and calculate hhea.caretSlopeRun like this:\n        round(math.tan(\n          math.radians(-1 * font[\"post\"].italicAngle)) * font[\"head\"].unitsPerEm)\n\n        This check allows for a 0.1\u00b0 rounding difference between the Italic angle\n        as calculated by the caret slope and post.italicAngle\n    ",
                    "result": "PASS"
                },
                {
                    "description": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/maxadvancewidth>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "MaxAdvanceWidth is consistent with values in the Hmtx and Hhea tables.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check hhea.caretSlopeRise and hhea.caretSlopeRun",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.hhea>",
                        "<FontBakeryCheck:com.google.fonts/check/caret_slope>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "hhea.caretSlopeRise and hhea.caretSlopeRun match with post.italicAngle.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Checks whether hhea.caretSlopeRise and hhea.caretSlopeRun\n        match with post.italicAngle.\n\n        For Upright fonts, you can set hhea.caretSlopeRise to 1\n        and hhea.caretSlopeRun to 0.\n\n        For Italic fonts, you can set hhea.caretSlopeRise to head.unitsPerEm\n        and calculate hhea.caretSlopeRun like this:\n        round(math.tan(\n          math.radians(-1 * font[\"post\"].italicAngle)) * font[\"head\"].unitsPerEm)\n\n        This check allows for a 0.1\u00b0 rounding difference between the Italic angle\n        as calculated by the caret slope and post.italicAngle\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.hhea>",
                null,
                null
            ],
            "result": {
                "FAIL": 1,
                "PASS": 5
            }
        },
        {
            "checks": [
                {
                    "description": "Does the font have a DSIG table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.dsig>",
                        "<FontBakeryCheck:com.google.fonts/check/dsig>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a digital signature (DSIG table) which is only required - even if only a placeholder - on old programs like MS Office 2013 in order to work properly.\nThe current recommendation is to completely remove the DSIG table. [code: found-DSIG]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft Office 2013 and below products expect fonts to have a digital\n        signature declared in a DSIG table in order to implement OpenType features.\n        The EOL date for Microsoft Office 2013 products is 4/11/2023.\n        This issue does not impact Microsoft Office 2016 and above products.\n\n        As we approach the EOL date, it is now considered better to\n        completely remove the table.\n\n        But if you still want your font to support OpenType features on Office 2013,\n        then you may find it handy to add a fake signature on a placeholder DSIG table\n        by running one of the helper scripts provided at\n        https://github.com/googlefonts/gftools\n\n        Reference: https://github.com/fonttools/fontbakery/issues/1845\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font have a DSIG table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.dsig>",
                        "<FontBakeryCheck:com.google.fonts/check/dsig>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a digital signature (DSIG table) which is only required - even if only a placeholder - on old programs like MS Office 2013 in order to work properly.\nThe current recommendation is to completely remove the DSIG table. [code: found-DSIG]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft Office 2013 and below products expect fonts to have a digital\n        signature declared in a DSIG table in order to implement OpenType features.\n        The EOL date for Microsoft Office 2013 products is 4/11/2023.\n        This issue does not impact Microsoft Office 2016 and above products.\n\n        As we approach the EOL date, it is now considered better to\n        completely remove the table.\n\n        But if you still want your font to support OpenType features on Office 2013,\n        then you may find it handy to add a fake signature on a placeholder DSIG table\n        by running one of the helper scripts provided at\n        https://github.com/googlefonts/gftools\n\n        Reference: https://github.com/fonttools/fontbakery/issues/1845\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Does the font have a DSIG table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.dsig>",
                        "<FontBakeryCheck:com.google.fonts/check/dsig>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "This font has a digital signature (DSIG table) which is only required - even if only a placeholder - on old programs like MS Office 2013 in order to work properly.\nThe current recommendation is to completely remove the DSIG table. [code: found-DSIG]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Microsoft Office 2013 and below products expect fonts to have a digital\n        signature declared in a DSIG table in order to implement OpenType features.\n        The EOL date for Microsoft Office 2013 products is 4/11/2023.\n        This issue does not impact Microsoft Office 2016 and above products.\n\n        As we approach the EOL date, it is now considered better to\n        completely remove the table.\n\n        But if you still want your font to support OpenType features on Office 2013,\n        then you may find it handy to add a fake signature on a placeholder DSIG table\n        by running one of the helper scripts provided at\n        https://github.com/googlefonts/gftools\n\n        Reference: https://github.com/fonttools/fontbakery/issues/1845\n    ",
                    "result": "WARN"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.dsig>",
                null,
                null
            ],
            "result": {
                "WARN": 3
            }
        },
        {
            "checks": [
                {
                    "description": "Check glyphs in mark glyph class are non-spacing.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_spacing_marks>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following spacing glyphs may be in the GDEF mark glyph class by mistake:\n\t uni05B105BD (unencoded), uni1DC1 (U+1DC1), uni2E0F (U+2E0F), uni2E10 (U+2E10), uni2E11 (U+2E11) and uniF15B (U+F15B) [code: spacing-mark-glyphs]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class should be non-spacing.\n\n        Spacing glyphs in the GDEF mark glyph class may have incorrect anchor\n        positioning that was only intended for building composite glyphs during design.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check mark characters are in GDEF mark glyph class.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_mark_chars>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following mark characters could be in the GDEF mark glyph class:\n\t afii57806 (U+05B9), uni034F (U+034F), uni0485 (U+0485), uni0486 (U+0486), uni05A2 (U+05A2), uni05BA (U+05BA), uni05C5 (U+05C5) and uniFB1E (U+FB1E) [code: mark-chars]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Mark characters should be in the GDEF mark glyph class.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check GDEF mark glyph class doesn't have characters that are not marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_non_mark_chars>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following non-mark characters should not be in the GDEF mark glyph class:\n\t U+2E0F, U+2E10 and U+2E11 [code: non-mark-chars]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class become non-spacing and may be repositioned\n        if they have mark anchors.\n\n        Only combining mark glyphs should be in that class. Any non-mark glyph\n        must not be in that class, in particular spacing glyphs.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check glyphs in mark glyph class are non-spacing.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_spacing_marks>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not has spacing glyphs in the GDEF mark glyph class.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class should be non-spacing.\n\n        Spacing glyphs in the GDEF mark glyph class may have incorrect anchor\n        positioning that was only intended for building composite glyphs during design.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check mark characters are in GDEF mark glyph class.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_mark_chars>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following mark characters could be in the GDEF mark glyph class:\n\t acutecomb (U+0301), afii57793 (U+05B4), afii57794 (U+05B5), afii57795 (U+05B6), afii57796 (U+05BB), afii57797 (U+05B8), afii57798 (U+05B7), afii57799 (U+05B0), afii57800 (U+05B2), afii57801 (U+05B1), afii57802 (U+05B3), afii57803 (U+05C2), afii57804 (U+05C1), afii57806 (U+05B9), afii57807 (U+05BC), afii57839 (U+05BD), afii57841 (U+05BF), dotbelowcomb (U+0323), gravecomb (U+0300), hookabovecomb (U+0309), tildecomb (U+0303), u1D242 (U+1D242), u1D243 (U+1D243), u1D244 (U+1D244), uni0302 (U+0302), uni0304 (U+0304), uni0305 (U+0305), uni0306 (U+0306), uni0307 (U+0307), uni0308 (U+0308), uni030A (U+030A), uni030B (U+030B), uni030C (U+030C), uni030D (U+030D), uni030E (U+030E), uni030F (U+030F), uni0310 (U+0310), uni0311 (U+0311), uni0312 (U+0312), uni0313 (U+0313), uni0314 (U+0314), uni0315 (U+0315), uni0316 (U+0316), uni0317 (U+0317), uni0318 (U+0318), uni0319 (U+0319), uni031A (U+031A), uni031B (U+031B), uni031C (U+031C), uni031D (U+031D), uni031E (U+031E), uni031F (U+031F), uni0320 (U+0320), uni0321 (U+0321), uni0322 (U+0322), uni0324 (U+0324), uni0325 (U+0325), uni0326 (U+0326), uni0327 (U+0327), uni0328 (U+0328), uni0329 (U+0329), uni032A (U+032A), uni032B (U+032B), uni032C (U+032C), uni032D (U+032D), uni032E (U+032E), uni032F (U+032F), uni0330 (U+0330), uni0331 (U+0331), uni0332 (U+0332), uni0333 (U+0333), uni0334 (U+0334), uni0335 (U+0335), uni0336 (U+0336), uni0337 (U+0337), uni0338 (U+0338), uni0339 (U+0339), uni033A (U+033A), uni033B (U+033B), uni033C (U+033C), uni033D (U+033D), uni033E (U+033E), uni033F (U+033F), uni0340 (U+0340), uni0341 (U+0341), uni0342 (U+0342), uni0343 (U+0343), uni0344 (U+0344), uni0345 (U+0345), uni0346 (U+0346), uni0347 (U+0347), uni0348 (U+0348), uni0349 (U+0349), uni034A (U+034A), uni034B (U+034B), uni034C (U+034C), uni034D (U+034D), uni034E (U+034E), uni034F (U+034F), uni0350 (U+0350), uni0351 (U+0351), uni0352 (U+0352), uni0353 (U+0353), uni0354 (U+0354), uni0355 (U+0355), uni0356 (U+0356), uni0357 (U+0357), uni0358 (U+0358), uni0359 (U+0359), uni035A (U+035A), uni035B (U+035B), uni035C (U+035C), uni035D (U+035D), uni035E (U+035E), uni035F (U+035F), uni0360 (U+0360), uni0361 (U+0361), uni0362 (U+0362), uni0363 (U+0363), uni0364 (U+0364), uni0365 (U+0365), uni0366 (U+0366), uni0367 (U+0367), uni0368 (U+0368), uni0369 (U+0369), uni036A (U+036A), uni036B (U+036B), uni036C (U+036C), uni036D (U+036D), uni036E (U+036E), uni036F (U+036F), uni0485 (U+0485), uni0486 (U+0486), uni0591 (U+0591), uni0592 (U+0592), uni0593 (U+0593), uni0594 (U+0594), uni0595 (U+0595), uni0596 (U+0596), uni0597 (U+0597), uni0598 (U+0598), uni0599 (U+0599), uni059A (U+059A), uni059B (U+059B), uni059C (U+059C), uni059D (U+059D), uni059E (U+059E), uni059F (U+059F), uni05A0 (U+05A0), uni05A1 (U+05A1), uni05A2 (U+05A2), uni05A3 (U+05A3), uni05A4 (U+05A4), uni05A5 (U+05A5), uni05A6 (U+05A6), uni05A7 (U+05A7), uni05A8 (U+05A8), uni05A9 (U+05A9), uni05AA (U+05AA), uni05AB (U+05AB), uni05AC (U+05AC), uni05AD (U+05AD), uni05AE (U+05AE), uni05AF (U+05AF), uni05BA (U+05BA), uni05C4 (U+05C4), uni05C5 (U+05C5), uni05C7 (U+05C7), uni1DC0 (U+1DC0), uni1DC1 (U+1DC1) and uniFB1E (U+FB1E) [code: mark-chars]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Mark characters should be in the GDEF mark glyph class.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check GDEF mark glyph class doesn't have characters that are not marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_non_mark_chars>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not have non-mark characters in the GDEF mark glyph class.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class become non-spacing and may be repositioned\n        if they have mark anchors.\n\n        Only combining mark glyphs should be in that class. Any non-mark glyph\n        must not be in that class, in particular spacing glyphs.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Check glyphs in mark glyph class are non-spacing.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_spacing_marks>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following spacing glyphs may be in the GDEF mark glyph class by mistake:\n\t uni0304 (U+0304) and uni05B105BD (unencoded) [code: spacing-mark-glyphs]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class should be non-spacing.\n\n        Spacing glyphs in the GDEF mark glyph class may have incorrect anchor\n        positioning that was only intended for building composite glyphs during design.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check mark characters are in GDEF mark glyph class.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_mark_chars>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following mark characters could be in the GDEF mark glyph class:\n\t u1D242 (U+1D242), u1D243 (U+1D243), u1D244 (U+1D244), uni0305 (U+0305), uni0310 (U+0310), uni0312 (U+0312), uni0313 (U+0313), uni0314 (U+0314), uni0315 (U+0315), uni0316 (U+0316), uni0317 (U+0317), uni0318 (U+0318), uni0319 (U+0319), uni031A (U+031A), uni031B (U+031B), uni031C (U+031C), uni031D (U+031D), uni031E (U+031E), uni031F (U+031F), uni0320 (U+0320), uni0321 (U+0321), uni0322 (U+0322), uni0324 (U+0324), uni0325 (U+0325), uni0326 (U+0326), uni0327 (U+0327), uni0328 (U+0328), uni0329 (U+0329), uni032A (U+032A), uni032B (U+032B), uni032C (U+032C), uni032D (U+032D), uni032E (U+032E), uni032F (U+032F), uni0330 (U+0330), uni0331 (U+0331), uni0332 (U+0332), uni0333 (U+0333), uni0334 (U+0334), uni0335 (U+0335), uni0336 (U+0336), uni0337 (U+0337), uni0338 (U+0338), uni0339 (U+0339), uni033A (U+033A), uni033B (U+033B), uni033C (U+033C), uni033D (U+033D), uni033E (U+033E), uni033F (U+033F), uni0340 (U+0340), uni0341 (U+0341), uni0342 (U+0342), uni0343 (U+0343), uni0344 (U+0344), uni0345 (U+0345), uni0346 (U+0346), uni0347 (U+0347), uni0348 (U+0348), uni0349 (U+0349), uni034A (U+034A), uni034B (U+034B), uni034C (U+034C), uni034D (U+034D), uni034E (U+034E), uni034F (U+034F), uni0350 (U+0350), uni0351 (U+0351), uni0352 (U+0352), uni0353 (U+0353), uni0354 (U+0354), uni0355 (U+0355), uni0356 (U+0356), uni0357 (U+0357), uni0358 (U+0358), uni0359 (U+0359), uni035A (U+035A), uni035B (U+035B), uni035C (U+035C), uni035D (U+035D), uni035E (U+035E), uni035F (U+035F), uni0360 (U+0360), uni0361 (U+0361), uni0362 (U+0362), uni0363 (U+0363), uni0364 (U+0364), uni0365 (U+0365), uni0366 (U+0366), uni0367 (U+0367), uni0368 (U+0368), uni0369 (U+0369), uni036A (U+036A), uni036B (U+036B), uni036C (U+036C), uni036D (U+036D), uni036E (U+036E), uni036F (U+036F), uni0485 (U+0485), uni0486 (U+0486), uni05C5 (U+05C5), uni1DC0 (U+1DC0), uni1DC1 (U+1DC1), uni1DCD (U+1DCD), uni1DCE (U+1DCE), uni1DCF (U+1DCF), uni1DD0 (U+1DD0), uni1DD1 (U+1DD1), uni1DD2 (U+1DD2), uni1DD3 (U+1DD3), uni1DD4 (U+1DD4), uni1DD5 (U+1DD5), uni1DD6 (U+1DD6), uni1DD7 (U+1DD7), uni1DD8 (U+1DD8), uni1DD9 (U+1DD9), uni1DDA (U+1DDA), uni1DDB (U+1DDB), uni1DDC (U+1DDC), uni1DDD (U+1DDD), uni1DDE (U+1DDE), uni1DDF (U+1DDF), uni1DE0 (U+1DE0), uni1DE1 (U+1DE1), uni1DE2 (U+1DE2), uni1DE3 (U+1DE3), uni1DE4 (U+1DE4), uni1DE5 (U+1DE5), uni1DE6 (U+1DE6) and uniFB1E (U+FB1E) [code: mark-chars]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Mark characters should be in the GDEF mark glyph class.\n    ",
                    "result": "WARN"
                },
                {
                    "description": "Check GDEF mark glyph class doesn't have characters that are not marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gdef>",
                        "<FontBakeryCheck:com.google.fonts/check/gdef_non_mark_chars>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not have non-mark characters in the GDEF mark glyph class.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Glyphs in the GDEF mark glyph class become non-spacing and may be repositioned\n        if they have mark anchors.\n\n        Only combining mark glyphs should be in that class. Any non-mark glyph\n        must not be in that class, in particular spacing glyphs.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.gdef>",
                null,
                null
            ],
            "result": {
                "PASS": 3,
                "WARN": 6
            }
        },
        {
            "checks": [
                {
                    "description": "Does GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gpos>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos_kerning_info>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "GPOS table check for kerning information passed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Does GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gpos>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos_kerning_info>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "GPOS table check for kerning information passed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Does GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.gpos>",
                        "<FontBakeryCheck:com.google.fonts/check/gpos_kerning_info>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "GPOS table check for kerning information passed.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.gpos>",
                null,
                null
            ],
            "result": {
                "PASS": 3
            }
        },
        {
            "checks": [
                {
                    "description": "Is there a usable \"kern\" table declared in the font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.kern>",
                        "<FontBakeryCheck:com.google.fonts/check/kern_table>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not declare an optional \"kern\" table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though all fonts should have their kerning implemented in the GPOS table,\n        there may be kerning info at the kern table as well.\n\n        Some applications such as MS PowerPoint require kerning info on the kern table.\n        More specifically, they require a format 0 kern subtable from a kern table\n        version 0 with only glyphs defined in the cmap table, which is the only one\n        that Windows understands (and which is also the simplest and more limited\n        of all the kern subtables).\n\n        Google Fonts ingests fonts made for download and use on desktops, and does\n        all web font optimizations in the serving pipeline (using libre libraries\n        that anyone can replicate.)\n\n        Ideally, TTFs intended for desktop users (and thus the ones intended for\n        Google Fonts) should have both KERN and GPOS tables.\n\n        Given all of the above, we currently treat kerning on a v0 kern table\n        as a good-to-have (but optional) feature.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Is there a usable \"kern\" table declared in the font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.kern>",
                        "<FontBakeryCheck:com.google.fonts/check/kern_table>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not declare an optional \"kern\" table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though all fonts should have their kerning implemented in the GPOS table,\n        there may be kerning info at the kern table as well.\n\n        Some applications such as MS PowerPoint require kerning info on the kern table.\n        More specifically, they require a format 0 kern subtable from a kern table\n        version 0 with only glyphs defined in the cmap table, which is the only one\n        that Windows understands (and which is also the simplest and more limited\n        of all the kern subtables).\n\n        Google Fonts ingests fonts made for download and use on desktops, and does\n        all web font optimizations in the serving pipeline (using libre libraries\n        that anyone can replicate.)\n\n        Ideally, TTFs intended for desktop users (and thus the ones intended for\n        Google Fonts) should have both KERN and GPOS tables.\n\n        Given all of the above, we currently treat kerning on a v0 kern table\n        as a good-to-have (but optional) feature.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "Is there a usable \"kern\" table declared in the font?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.kern>",
                        "<FontBakeryCheck:com.google.fonts/check/kern_table>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font does not declare an optional \"kern\" table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Even though all fonts should have their kerning implemented in the GPOS table,\n        there may be kerning info at the kern table as well.\n\n        Some applications such as MS PowerPoint require kerning info on the kern table.\n        More specifically, they require a format 0 kern subtable from a kern table\n        version 0 with only glyphs defined in the cmap table, which is the only one\n        that Windows understands (and which is also the simplest and more limited\n        of all the kern subtables).\n\n        Google Fonts ingests fonts made for download and use on desktops, and does\n        all web font optimizations in the serving pipeline (using libre libraries\n        that anyone can replicate.)\n\n        Ideally, TTFs intended for desktop users (and thus the ones intended for\n        Google Fonts) should have both KERN and GPOS tables.\n\n        Given all of the above, we currently treat kerning on a v0 kern table\n        as a good-to-have (but optional) feature.\n    ",
                    "result": "PASS"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.kern>",
                null,
                null
            ],
            "result": {
                "PASS": 3
            }
        },
        {
            "checks": [
                {
                    "description": "Is there any unused data at the end of the glyf table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_unused_data>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no unused data at the end of the glyf table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check for points out of bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/points_out_of_bounds>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have coordinates which are out of bounds:\n\t* ('comma', 190, 226)\n\t* ('s', 30, 100)\n\t* ('onesuperior', 141, 552)\n\t* ('onequarter', 266, 552)\n\t* ('onehalf', 266, 552)\n\t* ('dcroat', 1115, 1216)\n\t* ('sacute', 30, 100)\n\t* ('scircumflex', 30, 100)\n\t* ('scedilla', 30, 100)\n\t* ('scaron', 30, 100)\n\t* ('uni019A', 64, 689)\n\t* ('uni019A', 625, 736)\n\t* ('scommaaccent', 30, 100)\n\t* ('uni0257', 416, -70)\n\t* ('uni0262', 596, -46)\n\t* ('uni0273', 1415, -479)\n\t* ('uni0289', 430, -38)\n\t* ('uni028B', 959, 929)\n\t* ('uni0297', 66, 337)\n\t* ('uni029B', 596, -46)\n\t* ('uni02A3', 416, -70)\n\t* ('uni02AE', 10, 768)\n\t* ('uni02AF', 10, 768)\n\t* ('uni02BB', 437, 1437)\n\t* ('uni02EE', 297, 1436)\n\t* ('uni02EE', 687, 1436)\n\t* ('uni0312', -392, 1133)\n\t* ('uni0315', 38, 1635)\n\t* ('uni031B', 38, 1254)\n\t* ('uni0322', 385, -479)\n\t* ('uni0326', -492, -126)\n\t* ('alphatonos', 451, -56)\n\t* ('alpha', 451, -56)\n\t* ('upsilon', 959, 929)\n\t* ('psi', 1159, 929)\n\t* ('upsilontonos', 959, 929)\n\t* ('theta1', 535, -81)\n\t* ('Upsilon1', 1559, 1334)\n\t* ('uni03D3', 1904, 1334)\n\t* ('uni03D4', 1559, 1334)\n\t* ('afii57801', 959, -157)\n\t* ('afii57398', 829, -50)\n\t* ('afii57401', 868, -61)\n\t* ('uni1E61', 30, 100)\n\t* ('uni1E63', 30, 100)\n\t* ('uni1EFE', 404, -63)\n\t* ('uni1F00', 451, -56)\n\t* ('uni1F01', 451, -56)\n\t* ('uni1F02', 451, -56)\n\t* ('uni1F03', 451, -56)\n\t* ('uni1F04', 451, -56)\n\t* ('uni1F05', 451, -56)\n\t* ('uni1F06', 451, -56)\n\t* ('uni1F07', 451, -56)\n\t* ('uni1F50', 959, 929)\n\t* ('uni1F51', 959, 929)\n\t* ('uni1F53', 959, 929)\n\t* ('uni1F54', 959, 929)\n\t* ('uni1F55', 959, 929)\n\t* ('uni1F56', 959, 929)\n\t* ('uni1F57', 959, 929)\n\t* ('uni1F70', 451, -56)\n\t* ('uni1F71', 451, -56)\n\t* ('uni1F7A', 959, 929)\n\t* ('uni1F7B', 959, 929)\n\t* ('uni1FB0', 451, -56)\n\t* ('uni1FB1', 451, -56)\n\t* ('uni1FB6', 451, -56)\n\t* ('uni1FE2', 959, 929)\n\t* ('uni1FE3', 959, 929)\n\t* ('uni1FE6', 959, 929)\n\t* ('uni1FE7', 959, 929)\n\t* ('quotesinglbase', 190, 226)\n\t* ('quotedblbase', 190, 226)\n\t* ('quotedblbase', 600, 226)\n\t* ('ellipsis', 1200, 216)\n\t* ('ellipsis', 1950, 216)\n\t* ('oneinferior', 141, -399)\n\t* ('uniA737', 619, -60)\n\t* ('uniA76E', 100, -27)\n\t* ('uniA76F', -70, -620)\n\t* ('uniA770', 114, 852)\n\t* ('uniA77C', 1050, 789)\n\t* ('uniA787', 599, -53)\n\t* ('uniE7E5', 1050, 789)\n\t* ('uniEEE2', 112, 250)\n\t* ('uniEEF5', 55, 1274)\n\t* ('uniEF20', 596, -46)\n\t* ('uniEFE5', 619, -60)\n\t* ('uniF11A', 884, -59)\n\t* ('uniF15B', -826, 1072)\n\t* ('five.oldstyle', 826, 947)\n\t* ('nine.oldstyle', -31, -375)\n\t* ('question.sc', 241, -52)\n\t* ('G.sc', 596, -46)\n\t* ('Acute.sc', 397, 1117)\n\t* ('questiondown.sc', 328, 923) and ('uniF864', -828, 1191)\n\nThis happens a lot when points are not extremes, which is usually bad. However, fixing this alert by adding points on extremes may do more harm than good, especially with italics, calligraphic-script, handwriting, rounded and other fonts. So it is common to ignore this message. [code: points-out-of-bounds]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "result": "WARN"
                },
                {
                    "description": "Check glyphs do not have duplicate components which have the same x,y coordinates.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_non_transformed_duplicate_components>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have duplicate components which have the same x,y coordinates:\n\t* {'glyph': 'uniE010', 'component': 'A', 'x': 34, 'y': 0}\n\t* {'glyph': 'uniE21B', 'component': 'O', 'x': -9, 'y': 0} and {'glyph': 'uniE4B7', 'component': 'e', 'x': 0, 'y': 0} [code: found-duplicates]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been cases in which fonts had faulty double quote marks, with each\n        of them containing two single quote marks as components with the same\n        x, y coordinates which makes them visually look like single quote marks.\n\n        This check ensures that glyphs do not contain duplicate components\n        which have the same x,y coordinates.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Is there any unused data at the end of the glyf table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_unused_data>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no unused data at the end of the glyf table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check for points out of bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/points_out_of_bounds>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have coordinates which are out of bounds:\n\t* ('seven', 58, 952) and ('seven.oldstyle', 89, 572)\n\nThis happens a lot when points are not extremes, which is usually bad. However, fixing this alert by adding points on extremes may do more harm than good, especially with italics, calligraphic-script, handwriting, rounded and other fonts. So it is common to ignore this message. [code: points-out-of-bounds]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "result": "WARN"
                },
                {
                    "description": "Check glyphs do not have duplicate components which have the same x,y coordinates.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_non_transformed_duplicate_components>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have duplicate components which have the same x,y coordinates:\n\t* {'glyph': 'uniE010', 'component': 'A', 'x': 0, 'y': 0}\n\t* {'glyph': 'uniE21B', 'component': 'O', 'x': -45, 'y': 0} and {'glyph': 'uniE4B7', 'component': 'e', 'x': -49, 'y': 0} [code: found-duplicates]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been cases in which fonts had faulty double quote marks, with each\n        of them containing two single quote marks as components with the same\n        x, y coordinates which makes them visually look like single quote marks.\n\n        This check ensures that glyphs do not contain duplicate components\n        which have the same x,y coordinates.\n    ",
                    "result": "FAIL"
                },
                {
                    "description": "Is there any unused data at the end of the glyf table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_unused_data>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "There is no unused data at the end of the glyf table.",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "result": "PASS"
                },
                {
                    "description": "Check for points out of bounds.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/points_out_of_bounds>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have coordinates which are out of bounds:\n\t* ('dollar', 120, 253)\n\t* ('G', 811, -68)\n\t* ('a', 290, -44)\n\t* ('d', 439, -84)\n\t* ('t', 45, 805)\n\t* ('ordfeminine', 193.9501953125, 581.8359375)\n\t* ('agrave', 290, -44)\n\t* ('aacute', 290, -44)\n\t* ('acircumflex', 290, -44)\n\t* ('atilde', 296, -44)\n\t* ('adieresis', 307, -44)\n\t* ('aring', 290, -44)\n\t* ('ae', 297, -48)\n\t* ('amacron', 290, -44)\n\t* ('abreve', 290, -44)\n\t* ('dcaron', 439, -84)\n\t* ('dcroat', 439, -84)\n\t* ('Gcircumflex', 811, -68)\n\t* ('Gbreve', 811, -68)\n\t* ('Gdotaccent', 811, -68)\n\t* ('uni0163', 45, 805)\n\t* ('tcaron', 45, 805)\n\t* ('uni01E3', 297, -48)\n\t* ('Gbar', 811, -68)\n\t* ('Gcaron', 811, -68)\n\t* ('uni01F4', 811, -68)\n\t* ('aringacute', 290, -44)\n\t* ('aeacute', 297, -48)\n\t* ('uni0201', 290, -44)\n\t* ('uni0203', 290, -44)\n\t* ('uni021B', 45, 805)\n\t* ('uni0227', 290, -44)\n\t* ('uni0257', 439, -84)\n\t* ('uni0262', 596, -46)\n\t* ('uni0273', 1458, -523)\n\t* ('uni0287', 622, 97)\n\t* ('uni0288', 45, 805)\n\t* ('uni0289', 430, -38)\n\t* ('uni028B', 959, 929)\n\t* ('uni0297', 66, 337)\n\t* ('uni029B', 596, -46)\n\t* ('uni02A3', 439, -84)\n\t* ('uni02A6', 45, 805)\n\t* ('uni02A7', 45, 805)\n\t* ('uni02A8', 45, 805)\n\t* ('uni02AE', 10, 768)\n\t* ('uni02AF', 10, 768)\n\t* ('uni0322', 559, -479)\n\t* ('uni0374', 38, 832)\n\t* ('uni0375', 38, -622)\n\t* ('alphatonos', 451, -56)\n\t* ('alpha', 451, -56)\n\t* ('upsilon', 959, 929)\n\t* ('psi', 1159, 929)\n\t* ('upsilondieresis', 959, 929)\n\t* ('upsilontonos', 959, 929)\n\t* ('theta1', 535, -81)\n\t* ('Upsilon1', 1559, 1334)\n\t* ('uni03D3', 1904, 1334)\n\t* ('uni03D4', 1559, 1334)\n\t* ('afii57801', 959, -157)\n\t* ('afii57398', 829, -50)\n\t* ('afii57401', 868, -61)\n\t* ('uni1E0B', 439, -84)\n\t* ('uni1E6B', 45, 805)\n\t* ('uni1E6D', 45, 805)\n\t* ('uni1EA3', 290, -44)\n\t* ('uni1EAF', 290, -44)\n\t* ('uni1F00', 451, -56)\n\t* ('uni1F01', 451, -56)\n\t* ('uni1F02', 451, -56)\n\t* ('uni1F03', 451, -56)\n\t* ('uni1F04', 451, -56)\n\t* ('uni1F05', 451, -56)\n\t* ('uni1F06', 451, -56)\n\t* ('uni1F07', 451, -56)\n\t* ('uni1F50', 959, 929)\n\t* ('uni1F51', 959, 929)\n\t* ('uni1F53', 959, 929)\n\t* ('uni1F54', 959, 929)\n\t* ('uni1F55', 959, 929)\n\t* ('uni1F56', 959, 929)\n\t* ('uni1F57', 959, 929)\n\t* ('uni1F70', 451, -56)\n\t* ('uni1F71', 451, -56)\n\t* ('uni1F7A', 959, 929)\n\t* ('uni1F7B', 959, 929)\n\t* ('uni1FB0', 451, -56)\n\t* ('uni1FB1', 451, -56)\n\t* ('uni1FB6', 451, -56)\n\t* ('uni1FE0', 959, 929)\n\t* ('uni1FE1', 959, 929)\n\t* ('uni1FE2', 959, 929)\n\t* ('uni1FE3', 959, 929)\n\t* ('uni1FE6', 959, 929)\n\t* ('uni1FE7', 959, 929)\n\t* ('uni2767', 1193, 321)\n\t* ('uni2E19', 256, -94)\n\t* ('uni2E28', 1066, -534)\n\t* ('uniA735', 643, -47)\n\t* ('uniA737', 799, -38)\n\t* ('uniA758', 910, -494)\n\t* ('uniA777', 45, 805)\n\t* ('uniA787', 599, -53)\n\t* ('uniE1A3', 959, -28)\n\t* ('uniE337', 810, 1457)\n\t* ('uniE40A', 290, -44)\n\t* ('uniE410', 290, -44)\n\t* ('uni006103080302', 307, -44)\n\t* ('uni0061030A0302', 290, -44)\n\t* ('uniE425', 290, -44)\n\t* ('uni00610364', 290, -44)\n\t* ('uni00610366', 290, -44)\n\t* ('uni0061036E', 290, -44)\n\t* ('uniE433', 290, -44)\n\t* ('uniE434', 290, -44)\n\t* ('uniE43A', 297, -48)\n\t* ('uniE43D', 297, -48)\n\t* ('uniE43F', 297, -48)\n\t* ('uniE441', 297, -48)\n\t* ('uniE442', 297, -48)\n\t* ('uniE443', 297, -48)\n\t* ('uniE477', 439, -84)\n\t* ('uniE491', 439, -84)\n\t* ('uniE6E2', 45, 805)\n\t* ('uniE6EE', 45, 805)\n\t* ('uniE8B0', 910, -494)\n\t* ('uniE8B4', 1004, 1341)\n\t* ('uniE8B9', 45, 805)\n\t* ('uni00E6030A', 297, -48)\n\t* ('uniE8D5', 307, -44)\n\t* ('uni00610365', 290, -44)\n\t* ('uni00610367', 290, -44)\n\t* ('uniEAF2', 390, -109)\n\t* ('longs_adieresis', 959, -44)\n\t* ('uniEBB5', 884, -59)\n\t* ('uniEBBD', 1220, -44)\n\t* ('uniEBC1', 643, -47)\n\t* ('uniEBEB', 297, -48)\n\t* ('uniEBF5', 290, -44)\n\t* ('f_udieresis', 1054, -38)\n\t* ('t_r', 45, 805)\n\t* ('t_t', 45, 805)\n\t* ('t_t.ins', 599, -53)\n\t* ('t_y', 45, 805)\n\t* ('uniEEDC', 45, 805)\n\t* ('c.enl', 112, 250)\n\t* ('t.enl', 620, -102)\n\t* ('t.enl', 55, 1274)\n\t* ('uniEF20', 596, -46)\n\t* ('uniEF93', 643, -47)\n\t* ('uniEF95', 799, -38)\n\t* ('uniEFA0', 285, -44)\n\t* ('uniEFA1', 297, -48)\n\t* ('uniEF930301', 643, -47)\n\t* ('uniEF950301', 799, -38)\n\t* ('uniF030', -828, 1205)\n\t* ('uniF031', -828, 1205)\n\t* ('M.ins', 884, -59)\n\t* ('t.ins', 599, -53)\n\t* ('uniF193', 439, -84)\n\t* ('uniF199', 45, 805)\n\t* ('uniF202', 371, -59)\n\t* ('uniF203', 285, -44)\n\t* ('uni2108.01', 631, -64)\n\t* ('scrupulum', 546, -52)\n\t* ('semuncia1', 540, 1411)\n\t* ('u10192.03', 822, -52)\n\t* ('10192.04', 540, 1411)\n\t* ('ramus', 256, -94)\n\t* ('question.sc', 241, -52)\n\t* ('G.sc', 596, -46)\n\t* ('questiondown.sc', 328, 923)\n\t* ('a_e_acute', 290, -44)\n\t* ('a_u_acute', 290, -44)\n\t* ('u10183', 727, -368)\n\t* ('u10192', 540, 1411)\n\t* ('u10193', 560, -64)\n\t* ('u10194', 631, -64)\n\t* ('Epsilon.02', 822, -52)\n\t* ('uni03F9.01', 822, -52)\n\t* ('Epsilon.02r', 546, -52)\n\t* ('uni03F9.01r', 546, -52)\n\t* ('uF02D2', 859, -94) and ('Acute.sc', 397, 1117)\n\nThis happens a lot when points are not extremes, which is usually bad. However, fixing this alert by adding points on extremes may do more harm than good, especially with italics, calligraphic-script, handwriting, rounded and other fonts. So it is common to ignore this message. [code: points-out-of-bounds]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "result": "WARN"
                },
                {
                    "description": "Check glyphs do not have duplicate components which have the same x,y coordinates.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.glyf>",
                        "<FontBakeryCheck:com.google.fonts/check/glyf_non_transformed_duplicate_components>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs have duplicate components which have the same x,y coordinates:\n\t* {'glyph': 'uni004103040306', 'component': 'A', 'x': 0, 'y': 0}\n\t* {'glyph': 'uniE21B', 'component': 'O', 'x': 0, 'y': 0}\n\t* {'glyph': 'uniE4B7', 'component': 'e', 'x': 0, 'y': 0} and {'glyph': 'uni00650365', 'component': 'e', 'x': 0, 'y': 0} [code: found-duplicates]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        There have been cases in which fonts had faulty double quote marks, with each\n        of them containing two single quote marks as components with the same\n        x, y coordinates which makes them visually look like single quote marks.\n\n        This check ensures that glyphs do not contain duplicate components\n        which have the same x,y coordinates.\n    ",
                    "result": "FAIL"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.glyf>",
                null,
                null
            ],
            "result": {
                "FAIL": 3,
                "PASS": 3,
                "WARN": 3
            }
        },
        {
            "checks": [
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 400 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wght_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        If a variable font has a 'wght' (Weight) axis, then the coordinate of\n        its 'Regular' instance is required to be 400.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must be 100 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wdth_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        If a variable font has a 'wdth' (Width) axis, then the coordinate of\n        its 'Regular' instance is required to be 100.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_slnt_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'slnt' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_slnt\n\n        If a variable font has a 'slnt' (Slant) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'ital' (Italic) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_ital_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_ital_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'ital' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_ital\n\n        If a variable font has a 'ital' (Italic) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'opsz' (Optical Size) axis coordinate should be between 10 and 16 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_opsz_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_opsz_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'opsz' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_opsz\n\n        If a variable font has an 'opsz' (Optical Size) axis, then\n        the coordinate of its 'Regular' instance is recommended to be\n        a value in the range 10 to 16.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 700 on the 'Bold' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/bold_wght_coord>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The Open-Type spec's registered\n        design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n        does not specify a required value for the 'Bold' instance of a variable font.\n\n        But Dave Crossland suggested that we should enforce\n        a required value of 700 in this case (NOTE: a distinction\n        is made between \"no bold instance present\" vs \"bold instance is present\n        but its wght coordinate is not == 700\").\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be within spec range of 1 to 1000 on all instances.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wght_valid_range>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        On the 'wght' (Weight) axis, the valid coordinate range is 1-1000.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must strictly greater than zero.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wdth_valid_range>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        On the 'wdth' (Width) axis, the valid numeric range is strictly greater than\n        zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate specifies positive values in its range?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/slnt_range>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec says at\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt that:\n\n        [...] the scale for the Slant axis is interpreted as the angle of slant\n        in counter-clockwise degrees from upright. This means that a typical,\n        right-leaning oblique design will have a negative slant value. This matches\n        the scale used for the italicAngle field in the post table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of axisNameID used by each VariationAxisRecord is greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_axis_nameid>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The axisNameID field provides a name ID that can be used to obtain strings\n        from the 'name' table that can be used to refer to the axis in application\n        user interfaces. The name ID must be greater than 255 and less than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of subfamilyNameID used by each InstanceRecord is 2, 17, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_subfamily_nameid>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The subfamilyNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 17 (typographic subfamily) strings for the given instance. Values of\n        2 or 17 can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of postScriptNameID used by each InstanceRecord is 6, 0xFFFF, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_postscript_nameid>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The postScriptNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 6 (PostScript name) strings for the given instance. Values of 6 and\n        0xFFFF can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that when an instance record is included for the default instance, its subfamilyNameID value is set to a name ID whose string is equal to the string of either name ID 2 or 17, and its postScriptNameID value is set to a name ID whose string is equal to the string of name ID 6.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_default_instance_nameids>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9.1\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The default instance of a font is that instance for which the coordinate\n        value of each axis is the defaultValue specified in the corresponding\n        variation axis record. An instance record is not required for the default\n        instance, though an instance record can be provided. When enumerating named\n        instances, the default instance should be enumerated even if there is no\n        corresponding instance record. If an instance record is included for the\n        default instance (that is, an instance record has coordinates set to default\n        values), then the nameID value should be set to either 2 or 17 or to a\n        name ID with the same value as name ID 2 or 17. Also, if a postScriptNameID is\n        included in instance records, and the postScriptNameID value should be set\n        to 6 or to a name ID with the same value as name ID 6.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have the same size.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/same_size_instance_records>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a given font must be the same size, with\n        all either including or omitting the postScriptNameID field. [...]\n        If the value is 0xFFFF, then the value is ignored, and no PostScript name\n        equivalent is provided for the instance.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have distinct data.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/distinct_instance_records>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a font should have distinct coordinates\n        and distinct subfamilyNameID and postScriptName ID values. If two or more\n        records share the same coordinates, the same nameID values or the same\n        postScriptNameID values, then all but the first can be ignored.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate foundry-defined design-variation axis tag names.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/foundry_defined_tag_name>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's syntactic requirements for\n        foundry-defined design-variation axis tags available at\n        https://learn.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg\n\n        Foundry-defined tags must begin with an uppercase letter\n        and must use only uppercase letters or digits.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 400 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wght_coord>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        If a variable font has a 'wght' (Weight) axis, then the coordinate of\n        its 'Regular' instance is required to be 400.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must be 100 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wdth_coord>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        If a variable font has a 'wdth' (Width) axis, then the coordinate of\n        its 'Regular' instance is required to be 100.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_slnt_coord>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'slnt' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_slnt\n\n        If a variable font has a 'slnt' (Slant) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'ital' (Italic) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_ital_coord>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_ital_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'ital' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_ital\n\n        If a variable font has a 'ital' (Italic) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'opsz' (Optical Size) axis coordinate should be between 10 and 16 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_opsz_coord>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_opsz_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'opsz' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_opsz\n\n        If a variable font has an 'opsz' (Optical Size) axis, then\n        the coordinate of its 'Regular' instance is recommended to be\n        a value in the range 10 to 16.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 700 on the 'Bold' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/bold_wght_coord>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The Open-Type spec's registered\n        design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n        does not specify a required value for the 'Bold' instance of a variable font.\n\n        But Dave Crossland suggested that we should enforce\n        a required value of 700 in this case (NOTE: a distinction\n        is made between \"no bold instance present\" vs \"bold instance is present\n        but its wght coordinate is not == 700\").\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be within spec range of 1 to 1000 on all instances.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wght_valid_range>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        On the 'wght' (Weight) axis, the valid coordinate range is 1-1000.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must strictly greater than zero.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wdth_valid_range>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        On the 'wdth' (Width) axis, the valid numeric range is strictly greater than\n        zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate specifies positive values in its range?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/slnt_range>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec says at\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt that:\n\n        [...] the scale for the Slant axis is interpreted as the angle of slant\n        in counter-clockwise degrees from upright. This means that a typical,\n        right-leaning oblique design will have a negative slant value. This matches\n        the scale used for the italicAngle field in the post table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of axisNameID used by each VariationAxisRecord is greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_axis_nameid>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The axisNameID field provides a name ID that can be used to obtain strings\n        from the 'name' table that can be used to refer to the axis in application\n        user interfaces. The name ID must be greater than 255 and less than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of subfamilyNameID used by each InstanceRecord is 2, 17, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_subfamily_nameid>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The subfamilyNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 17 (typographic subfamily) strings for the given instance. Values of\n        2 or 17 can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of postScriptNameID used by each InstanceRecord is 6, 0xFFFF, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_postscript_nameid>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The postScriptNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 6 (PostScript name) strings for the given instance. Values of 6 and\n        0xFFFF can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that when an instance record is included for the default instance, its subfamilyNameID value is set to a name ID whose string is equal to the string of either name ID 2 or 17, and its postScriptNameID value is set to a name ID whose string is equal to the string of name ID 6.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_default_instance_nameids>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9.1\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The default instance of a font is that instance for which the coordinate\n        value of each axis is the defaultValue specified in the corresponding\n        variation axis record. An instance record is not required for the default\n        instance, though an instance record can be provided. When enumerating named\n        instances, the default instance should be enumerated even if there is no\n        corresponding instance record. If an instance record is included for the\n        default instance (that is, an instance record has coordinates set to default\n        values), then the nameID value should be set to either 2 or 17 or to a\n        name ID with the same value as name ID 2 or 17. Also, if a postScriptNameID is\n        included in instance records, and the postScriptNameID value should be set\n        to 6 or to a name ID with the same value as name ID 6.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have the same size.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/same_size_instance_records>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a given font must be the same size, with\n        all either including or omitting the postScriptNameID field. [...]\n        If the value is 0xFFFF, then the value is ignored, and no PostScript name\n        equivalent is provided for the instance.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have distinct data.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/distinct_instance_records>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a font should have distinct coordinates\n        and distinct subfamilyNameID and postScriptName ID values. If two or more\n        records share the same coordinates, the same nameID values or the same\n        postScriptNameID values, then all but the first can be ignored.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate foundry-defined design-variation axis tag names.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/foundry_defined_tag_name>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's syntactic requirements for\n        foundry-defined design-variation axis tags available at\n        https://learn.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg\n\n        Foundry-defined tags must begin with an uppercase letter\n        and must use only uppercase letters or digits.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 400 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wght_coord>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        If a variable font has a 'wght' (Weight) axis, then the coordinate of\n        its 'Regular' instance is required to be 400.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must be 100 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_wdth_coord>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        If a variable font has a 'wdth' (Width) axis, then the coordinate of\n        its 'Regular' instance is required to be 100.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_slnt_coord>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'slnt' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_slnt\n\n        If a variable font has a 'slnt' (Slant) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'ital' (Italic) axis coordinate must be zero on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_ital_coord>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_ital_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'ital' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_ital\n\n        If a variable font has a 'ital' (Italic) axis, then the coordinate of\n        its 'Regular' instance is required to be zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'opsz' (Optical Size) axis coordinate should be between 10 and 16 on the 'Regular' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/regular_opsz_coord>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_opsz_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'opsz' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_opsz\n\n        If a variable font has an 'opsz' (Optical Size) axis, then\n        the coordinate of its 'Regular' instance is recommended to be\n        a value in the range 10 to 16.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be 700 on the 'Bold' instance.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/bold_wght_coord>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The Open-Type spec's registered\n        design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n        does not specify a required value for the 'Bold' instance of a variable font.\n\n        But Dave Crossland suggested that we should enforce\n        a required value of 700 in this case (NOTE: a distinction\n        is made between \"no bold instance present\" vs \"bold instance is present\n        but its wght coordinate is not == 700\").\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wght' (Weight) axis coordinate must be within spec range of 1 to 1000 on all instances.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wght_valid_range>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wght_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wght' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wght\n\n        On the 'wght' (Weight) axis, the valid coordinate range is 1-1000.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'wdth' (Width) axis coordinate must strictly greater than zero.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/wdth_valid_range>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_wdth_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's\n        registered design-variation tag 'wdth' available at\n        https://docs.microsoft.com/en-gb/typography/opentype/spec/dvaraxistag_wdth\n\n        On the 'wdth' (Width) axis, the valid numeric range is strictly greater than\n        zero.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "The variable font 'slnt' (Slant) axis coordinate specifies positive values in its range?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/slnt_range>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font, has_slnt_axis",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The OpenType spec says at\n        https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxistag_slnt that:\n\n        [...] the scale for the Slant axis is interpreted as the angle of slant\n        in counter-clockwise degrees from upright. This means that a typical,\n        right-leaning oblique design will have a negative slant value. This matches\n        the scale used for the italicAngle field in the post table.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of axisNameID used by each VariationAxisRecord is greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_axis_nameid>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The axisNameID field provides a name ID that can be used to obtain strings\n        from the 'name' table that can be used to refer to the axis in application\n        user interfaces. The name ID must be greater than 255 and less than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of subfamilyNameID used by each InstanceRecord is 2, 17, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_subfamily_nameid>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The subfamilyNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 17 (typographic subfamily) strings for the given instance. Values of\n        2 or 17 can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that the value of postScriptNameID used by each InstanceRecord is 6, 0xFFFF, or greater than 255 and less than 32768.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_postscript_nameid>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The postScriptNameID field provides a name ID that can be used to obtain\n        strings from the 'name' table that can be treated as equivalent to name\n        ID 6 (PostScript name) strings for the given instance. Values of 6 and\n        0xFFFF can be used; otherwise, values must be greater than 255 and less\n        than 32768.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that when an instance record is included for the default instance, its subfamilyNameID value is set to a name ID whose string is equal to the string of either name ID 2 or 17, and its postScriptNameID value is set to a name ID whose string is equal to the string of name ID 6.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/valid_default_instance_nameids>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9.1\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        The default instance of a font is that instance for which the coordinate\n        value of each axis is the defaultValue specified in the corresponding\n        variation axis record. An instance record is not required for the default\n        instance, though an instance record can be provided. When enumerating named\n        instances, the default instance should be enumerated even if there is no\n        corresponding instance record. If an instance record is included for the\n        default instance (that is, an instance record has coordinates set to default\n        values), then the nameID value should be set to either 2 or 17 or to a\n        name ID with the same value as name ID 2 or 17. Also, if a postScriptNameID is\n        included in instance records, and the postScriptNameID value should be set\n        to 6 or to a name ID with the same value as name ID 6.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have the same size.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/same_size_instance_records>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a given font must be the same size, with\n        all either including or omitting the postScriptNameID field. [...]\n        If the value is 0xFFFF, then the value is ignored, and no PostScript name\n        equivalent is provided for the instance.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validates that all of the instance records in a given font have distinct data.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/distinct_instance_records>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the 'fvar' documentation in OpenType spec v1.9\n        https://docs.microsoft.com/en-us/typography/opentype/spec/fvar\n\n        All of the instance records in a font should have distinct coordinates\n        and distinct subfamilyNameID and postScriptName ID values. If two or more\n        records share the same coordinates, the same nameID values or the same\n        postScriptNameID values, then all but the first can be ignored.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Validate foundry-defined design-variation axis tag names.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.fvar>",
                        "<FontBakeryCheck:com.adobe.fonts/check/varfont/foundry_defined_tag_name>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the Open-Type spec's syntactic requirements for\n        foundry-defined design-variation axis tags available at\n        https://learn.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg\n\n        Foundry-defined tags must begin with an uppercase letter\n        and must use only uppercase letters or digits.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.fvar>",
                null,
                null
            ],
            "result": {
                "SKIP": 48
            }
        },
        {
            "checks": [
                {
                    "description": "Ensure VFs have 'ital' STAT axis.",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_in_stat>",
                        []
                    ],
                    "logs": [
                        {
                            "message": "OK",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that related Upright and Italic VFs have a\n        'ital' axis in STAT table.\n    ",
                    "result": "PASS"
                },
                {
                    "description": "All fvar axes have a correspondent Axis Record on STAT table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/stat_axis_record_for_each_axis>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, there must be an Axis Record\n        for every axis defined in the fvar table.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-records\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "STAT table has Axis Value tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.adobe.fonts/check/stat_has_axis_value_tables>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, in a variable font, it is strongly recommended\n        that axis value tables be included for every element of typographic subfamily\n        names for all of the named instances defined in the 'fvar' table.\n\n        Axis value tables are particularly important for variable fonts, but can also\n        be used in non-variable fonts. When used in non-variable fonts, axis value\n        tables for particular values should be implemented consistently across fonts\n        in the family.\n\n        If present, Format 4 Axis Value tables are checked to ensure they have more than\n        one AxisValueRecord (a strong recommendation from the OpenType spec).\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-value-tables\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is boolean value (derived from com.google.fonts/check/italic_axis_in_stat_is_boolean)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_in_stat_is_boolean:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the value of the 'ital' STAT axis is boolean (either 0 or 1),\n        and elided for the Upright and not elided for the Italic,\n        and that the Upright is linked to the Italic.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is last. (derived from com.google.fonts/check/italic_axis_last)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_last:googlefonts>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the 'ital' STAT axis is last in axis order.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All fvar axes have a correspondent Axis Record on STAT table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/stat_axis_record_for_each_axis>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, there must be an Axis Record\n        for every axis defined in the fvar table.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-records\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "STAT table has Axis Value tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.adobe.fonts/check/stat_has_axis_value_tables>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, in a variable font, it is strongly recommended\n        that axis value tables be included for every element of typographic subfamily\n        names for all of the named instances defined in the 'fvar' table.\n\n        Axis value tables are particularly important for variable fonts, but can also\n        be used in non-variable fonts. When used in non-variable fonts, axis value\n        tables for particular values should be implemented consistently across fonts\n        in the family.\n\n        If present, Format 4 Axis Value tables are checked to ensure they have more than\n        one AxisValueRecord (a strong recommendation from the OpenType spec).\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-value-tables\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is boolean value (derived from com.google.fonts/check/italic_axis_in_stat_is_boolean)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_in_stat_is_boolean:googlefonts>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the value of the 'ital' STAT axis is boolean (either 0 or 1),\n        and elided for the Upright and not elided for the Italic,\n        and that the Upright is linked to the Italic.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is last. (derived from com.google.fonts/check/italic_axis_last)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_last:googlefonts>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the 'ital' STAT axis is last in axis order.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "All fvar axes have a correspondent Axis Record on STAT table?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/varfont/stat_axis_record_for_each_axis>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: is_variable_font",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, there must be an Axis Record\n        for every axis defined in the fvar table.\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-records\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "STAT table has Axis Value tables?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.adobe.fonts/check/stat_has_axis_value_tables>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        According to the OpenType spec, in a variable font, it is strongly recommended\n        that axis value tables be included for every element of typographic subfamily\n        names for all of the named instances defined in the 'fvar' table.\n\n        Axis value tables are particularly important for variable fonts, but can also\n        be used in non-variable fonts. When used in non-variable fonts, axis value\n        tables for particular values should be implemented consistently across fonts\n        in the family.\n\n        If present, Format 4 Axis Value tables are checked to ensure they have more than\n        one AxisValueRecord (a strong recommendation from the OpenType spec).\n\n        https://docs.microsoft.com/en-us/typography/opentype/spec/stat#axis-value-tables\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is boolean value (derived from com.google.fonts/check/italic_axis_in_stat_is_boolean)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_in_stat_is_boolean:googlefonts>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the value of the 'ital' STAT axis is boolean (either 0 or 1),\n        and elided for the Upright and not elided for the Italic,\n        and that the Upright is linked to the Italic.\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure 'ital' STAT axis is last. (derived from com.google.fonts/check/italic_axis_last)",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.stat>",
                        "<FontBakeryCheck:com.google.fonts/check/italic_axis_last:googlefonts>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Unfulfilled Conditions: has_STAT_table",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Check that the 'ital' STAT axis is last in axis order.\n    ",
                    "result": "SKIP"
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.stat>",
                null,
                null
            ],
            "result": {
                "PASS": 1,
                "SKIP": 12
            }
        },
        {
            "checks": [
                {
                    "description": "Does the font have any invalid feature tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_feature_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid feature tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect tags can be indications of typos, leftover debugging code or\n        questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid script tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_script_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid script tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect script tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid language tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_language_tags>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid language tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect language tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid feature tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_feature_tags>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid feature tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect tags can be indications of typos, leftover debugging code or\n        questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid script tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_script_tags>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid script tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect script tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid language tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_language_tags>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid language tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect language tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid feature tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_feature_tags>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid feature tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect tags can be indications of typos, leftover debugging code or\n        questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid script tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_script_tags>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid script tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect script tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                },
                {
                    "description": "Does the font have any invalid language tags?",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: fontbakery.profiles.layout>",
                        "<FontBakeryCheck:com.google.fonts/check/layout_valid_language_tags>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "No invalid language tags were found",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Incorrect language tags can be indications of typos, leftover debugging code\n        or questionable approaches, or user error in the font editor. Such typos can\n        cause features and language support to fail to work as intended.\n    ",
                    "result": "PASS",
                    "severity": 8
                }
            ],
            "key": [
                "<Section: fontbakery.profiles.layout>",
                null,
                null
            ],
            "result": {
                "PASS": 9
            }
        },
        {
            "checks": [
                {
                    "description": "Check that texts shape as per expectation",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/regression>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and compares expected shaping against actual shaping, reporting\n        any differences.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no forbidden glyphs are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/forbidden>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports if any glyphs are generated in the shaping which should\n        not be produced. (For example, .notdef glyphs, visible viramas, etc.)\n\n        Shaping test suites should be written by the font engineer and referenced in\n        the FontBakery configuration file. For more information about write shaping\n        test files and how to configure FontBakery to read the shaping test suites,\n        see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no collisions are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/collides>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports instances where the glyphs collide in unexpected ways.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure dotted circle glyph is present and can attach marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/dotted_circle>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "All marks were anchored to dotted circle",
                            "status": "PASS",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The dotted circle character (U+25CC) is inserted by shaping engines before\n        mark glyphs which do not have an associated base, especially in the context\n        of broken syllabic clusters.\n\n        For fonts containing combining marks, it is recommended that the dotted circle\n        character be included so that these isolated marks can be displayed properly;\n        for fonts supporting complex scripts, this should be considered mandatory.\n\n        Additionally, when a dotted circle glyph is present, it should be able to\n        display all marks correctly, meaning that it should contain anchors for all\n        attaching marks.\n    ",
                    "result": "PASS",
                    "severity": 3
                },
                {
                    "description": "Ensure soft_dotted characters lose their dot when combined with marks that replace the dot.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Italic.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_dotted>",
                        [
                            [
                                "font",
                                0
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The dot of soft dotted characters used in orthographies _must_ disappear in the following strings: i\u030a i\u030b i\u030d i\u0310 i\u0313 j\u0300 j\u0301 j\u0303 j\u0304 j\u0308 j\u0311 \u012f\u0300 \u012f\u0301 \u012f\u0302 \u012f\u0303 \u012f\u0304 \u012f\u030c \u0268\u0300 \u0268\u0301 \u0268\u0302 \u0268\u0303 \u0268\u0304 \u0268\u0308 \u0268\u030b \u0268\u030c \u0268\u030f \u0268\u0327\u0300 \u0268\u0327\u0301 \u0268\u0327\u0302 \u0268\u0327\u030c \u0268\u0331\u0300 \u0268\u0331\u0301 \u0268\u0331\u0308 \u1ecb\u0300 \u1ecb\u0301 \u1ecb\u0302 \u1ecb\u0303 \u1ecb\u0304\n\nThe dot of soft dotted characters _should_ disappear in other cases, for example: i\u0305 i\u0307 i\u030c i\u030e i\u0312 i\u0314 i\u033d i\u033e i\u033f i\u0342 i\u0346 i\u034a i\u034b i\u034c i\u0350 i\u0351 i\u0352 i\u0357 i\u035b i\u0363\n\nYour font does *not* cover the following languages that require the soft-dotted feature: Igbo (Latn, 27,823,640 speakers), Belarusian (Cyrl, 10,064,517 speakers), Aghem (Latn, 38,843 speakers), Navajo (Latn, 166,319 speakers), Basaa (Latn, 332,940 speakers), Ukrainian (Cyrl, 29,273,587 speakers), Lithuanian (Latn, 2,357,094 speakers), Dutch (Latn, 31,709,104 speakers). [code: soft-dotted]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An accent placed on characters with a \"soft dot\", like i or j, causes\n        the dot to disappear.\n        An explicit dot above can be added where required.\n        See \"Diacritics on i and j\" in Section 7.1, \"Latin\" in The Unicode Standard.\n\n        Characters with the Soft_Dotted property are listed in\n        https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n\n        See also:\n        https://googlefonts.github.io/gf-guide/diacritics.html#soft-dotted-glyphs\n    ",
                    "result": "WARN",
                    "severity": 3
                },
                {
                    "description": "Check that texts shape as per expectation",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/regression>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and compares expected shaping against actual shaping, reporting\n        any differences.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no forbidden glyphs are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/forbidden>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports if any glyphs are generated in the shaping which should\n        not be produced. (For example, .notdef glyphs, visible viramas, etc.)\n\n        Shaping test suites should be written by the font engineer and referenced in\n        the FontBakery configuration file. For more information about write shaping\n        test files and how to configure FontBakery to read the shaping test suites,\n        see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no collisions are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/collides>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports instances where the glyphs collide in unexpected ways.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure dotted circle glyph is present and can attach marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/dotted_circle>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Font has no nonspacing mark glyphs.",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The dotted circle character (U+25CC) is inserted by shaping engines before\n        mark glyphs which do not have an associated base, especially in the context\n        of broken syllabic clusters.\n\n        For fonts containing combining marks, it is recommended that the dotted circle\n        character be included so that these isolated marks can be displayed properly;\n        for fonts supporting complex scripts, this should be considered mandatory.\n\n        Additionally, when a dotted circle glyph is present, it should be able to\n        display all marks correctly, meaning that it should contain anchors for all\n        attaching marks.\n    ",
                    "result": "SKIP",
                    "severity": 3
                },
                {
                    "description": "Ensure soft_dotted characters lose their dot when combined with marks that replace the dot.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Bold.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_dotted>",
                        [
                            [
                                "font",
                                1
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The dot of soft dotted characters used in orthographies _must_ disappear in the following strings: i\u030a i\u030b i\u030d i\u0310 i\u0313 j\u0300 j\u0301 j\u0303 j\u0304 j\u0308 j\u0311 \u012f\u0300 \u012f\u0301 \u012f\u0302 \u012f\u0303 \u012f\u0304 \u012f\u030c \u0268\u0300 \u0268\u0301 \u0268\u0302 \u0268\u0303 \u0268\u0304 \u0268\u0308 \u0268\u030b \u0268\u030c \u0268\u030f \u0268\u0327\u0300 \u0268\u0327\u0301 \u0268\u0327\u0302 \u0268\u0327\u030c \u0268\u0331\u0300 \u0268\u0331\u0301 \u0268\u0331\u0308 \u1ecb\u0300 \u1ecb\u0301 \u1ecb\u0302 \u1ecb\u0303 \u1ecb\u0304\n\nThe dot of soft dotted characters _should_ disappear in other cases, for example: i\u0305 i\u0307 i\u030c i\u030e i\u0312 i\u0314 i\u033d i\u033e i\u033f i\u0342 i\u0346 i\u034a i\u034b i\u034c i\u0350 i\u0351 i\u0352 i\u0357 i\u035b i\u0363\n\nYour font does *not* cover the following languages that require the soft-dotted feature: Igbo (Latn, 27,823,640 speakers), Dutch (Latn, 31,709,104 speakers), Lithuanian (Latn, 2,357,094 speakers), Aghem (Latn, 38,843 speakers), Belarusian (Cyrl, 10,064,517 speakers), Ukrainian (Cyrl, 29,273,587 speakers), Basaa (Latn, 332,940 speakers), Navajo (Latn, 166,319 speakers). [code: soft-dotted]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An accent placed on characters with a \"soft dot\", like i or j, causes\n        the dot to disappear.\n        An explicit dot above can be added where required.\n        See \"Diacritics on i and j\" in Section 7.1, \"Latin\" in The Unicode Standard.\n\n        Characters with the Soft_Dotted property are listed in\n        https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n\n        See also:\n        https://googlefonts.github.io/gf-guide/diacritics.html#soft-dotted-glyphs\n    ",
                    "result": "WARN",
                    "severity": 3
                },
                {
                    "description": "Check that texts shape as per expectation",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/regression>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and compares expected shaping against actual shaping, reporting\n        any differences.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no forbidden glyphs are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/forbidden>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports if any glyphs are generated in the shaping which should\n        not be produced. (For example, .notdef glyphs, visible viramas, etc.)\n\n        Shaping test suites should be written by the font engineer and referenced in\n        the FontBakery configuration file. For more information about write shaping\n        test files and how to configure FontBakery to read the shaping test suites,\n        see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Check that no collisions are found while shaping",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/shaping/collides>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "Shaping test directory not defined in configuration file",
                            "status": "SKIP",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        Fonts with complex layout rules can benefit from regression tests to ensure\n        that the rules are behaving as designed. This checks runs a shaping test\n        suite and reports instances where the glyphs collide in unexpected ways.\n\n        Shaping test suites should be written by the font engineer and referenced\n        in the FontBakery configuration file. For more information about write\n        shaping test files and how to configure FontBakery to read the shaping\n        test suites, see https://simoncozens.github.io/tdd-for-otl/\n    ",
                    "result": "SKIP"
                },
                {
                    "description": "Ensure dotted circle glyph is present and can attach marks.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/dotted_circle>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The following glyphs could not be attached to the dotted circle glyph:\n\n\t- acutecomb\n\n\t- dotbelowcomb\n\n\t- gravecomb\n\n\t- hookabovecomb\n\n\t- tildecomb\n\n\t- uni0302\n\n\t- uni0306\n\n\t- uni0307\n\n\t- uni0308\n\n\t- uni030A\n\n\t- uni030B\n\n\t- uni030C\n\n\t- uni030D\n\n\t- uni030E\n\n\t- uni030F\n\n\t- uni0311 [code: unattached-dotted-circle-marks]",
                            "status": "FAIL",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        The dotted circle character (U+25CC) is inserted by shaping engines before\n        mark glyphs which do not have an associated base, especially in the context\n        of broken syllabic clusters.\n\n        For fonts containing combining marks, it is recommended that the dotted circle\n        character be included so that these isolated marks can be displayed properly;\n        for fonts supporting complex scripts, this should be considered mandatory.\n\n        Additionally, when a dotted circle glyph is present, it should be able to\n        display all marks correctly, meaning that it should contain anchors for all\n        attaching marks.\n    ",
                    "result": "FAIL",
                    "severity": 3
                },
                {
                    "description": "Ensure soft_dotted characters lose their dot when combined with marks that replace the dot.",
                    "filename": "/Users/simon/others-repos/fonts/ofl/cardo/Cardo-Regular.ttf",
                    "key": [
                        "<Section: Shaping Checks>",
                        "<FontBakeryCheck:com.google.fonts/check/soft_dotted>",
                        [
                            [
                                "font",
                                2
                            ]
                        ]
                    ],
                    "logs": [
                        {
                            "message": "The dot of soft dotted characters used in orthographies _must_ disappear in the following strings: i\u0310 i\u0313 \u012f\u0300 \u012f\u0301 \u012f\u0302 \u012f\u0303 \u012f\u0304 \u012f\u030c \u0268\u0300 \u0268\u0301 \u0268\u0302 \u0268\u0303 \u0268\u0304 \u0268\u0308 \u0268\u030b \u0268\u030c \u0268\u030f \u0268\u0327\u0300 \u0268\u0327\u0301 \u0268\u0327\u0302 \u0268\u0327\u030c \u0268\u0331\u0300 \u0268\u0331\u0301 \u0268\u0331\u0308 \u1ecb\u0300 \u1ecb\u0301 \u1ecb\u0302 \u1ecb\u0303 \u1ecb\u0304\n\nThe dot of soft dotted characters _should_ disappear in other cases, for example: i\u0305 i\u0312 i\u0314 i\u033d i\u033e i\u033f i\u0342 i\u0346 i\u034a i\u034b i\u034c i\u0350 i\u0351 i\u0352 i\u0357 i\u035b i\u0363 i\u0364 i\u0365 i\u0366\n\nYour font fully covers the following languages that require the soft-dotted feature: Dutch (Latn, 31,709,104 speakers). \n\nYour font does *not* cover the following languages that require the soft-dotted feature: Belarusian (Cyrl, 10,064,517 speakers), Navajo (Latn, 166,319 speakers), Ukrainian (Cyrl, 29,273,587 speakers), Igbo (Latn, 27,823,640 speakers), Aghem (Latn, 38,843 speakers), Lithuanian (Latn, 2,357,094 speakers), Basaa (Latn, 332,940 speakers). [code: soft-dotted]",
                            "status": "WARN",
                            "traceback": null
                        }
                    ],
                    "rationale": "\n        An accent placed on characters with a \"soft dot\", like i or j, causes\n        the dot to disappear.\n        An explicit dot above can be added where required.\n        See \"Diacritics on i and j\" in Section 7.1, \"Latin\" in The Unicode Standard.\n\n        Characters with the Soft_Dotted property are listed in\n        https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n\n        See also:\n        https://googlefonts.github.io/gf-guide/diacritics.html#soft-dotted-glyphs\n    ",
                    "result": "WARN",
                    "severity": 3
                }
            ],
            "key": [
                "<Section: Shaping Checks>",
                null,
                null
            ],
            "result": {
                "FAIL": 1,
                "PASS": 1,
                "SKIP": 10,
                "WARN": 3
            }
        }
    ]
}